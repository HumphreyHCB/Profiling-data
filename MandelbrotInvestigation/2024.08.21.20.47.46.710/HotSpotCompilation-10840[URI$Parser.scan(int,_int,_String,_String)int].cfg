begin_compilation
  name " HotSpotCompilation-10840[java.net.URI$Parser.scan(int, int, String, String)]"
  method "HotSpotCompilation-10840[java.net.URI$Parser.scan(int, int, String, String)]"
  date 1724269730552
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i192 v119 ?126 ?130 i132 v213 j262 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?11 v12 ?30 v290 v119 ?126 ?130 i279 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 6]
profileData: PROFILED designatedSuccessorProbability: 0.9445270239449093
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v121 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v121 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a431 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a431  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.net.URI$Parser
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?11 ?130 ?30 ?126 v449 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a431 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.String
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: URI$Parser.input
memoryOrder: PLAIN
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 10]
stamp: n# java.lang.String
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
lastLocationAccess: - 
=== Succesors ===
next: a432 
=== Usages ===
v451 v450 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v449 lastLocationAccess: - #next: a432  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?11 ?130 ?30 ?126 v455 v454 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?11 ?130 v457 ?30 v458 ?126 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
sourceFile: URI.java
sourceLine: 3076
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 a4 a5 
=== Succesors ===
=== Usages ===
v382 a432 i434 a435 i437 a438 i440 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 a4 a5  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a431 
=== Succesors ===
=== Usages ===
a432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a432 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-50699|0xffffffffffff39f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v451 
lastLocationAccess: - 
=== Succesors ===
next: i433 
=== Usages ===
v460 v452 v453 
=== Predecessor ===
a431 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v451 lastLocationAccess: - #next: i433  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a431 
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v450 
lastLocationAccess: - 
=== Succesors ===
next: i434 
=== Usages ===
v261 
=== Predecessor ===
a432 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v450 lastLocationAccess: - #next: i434  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a432 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-52747|0xffffffffffff31f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v452 
lastLocationAccess: - 
=== Succesors ===
next: v304 
=== Usages ===
v287 v213 j278 
=== Predecessor ===
i433 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v452 lastLocationAccess: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i434 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i434  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v303 
=== Usages ===
=== Predecessor ===
i434 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v301 #falseSuccessor: v303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a435 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a435  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a435 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-56843|0xffffffffffff21f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v455 
lastLocationAccess: - 
=== Succesors ===
next: i436 
=== Usages ===
a228 v456 
=== Predecessor ===
v301 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v455 lastLocationAccess: - #next: i436  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i436 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v454 
lastLocationAccess: - 
=== Succesors ===
next: i437 
=== Usages ===
v444 
=== Predecessor ===
a435 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v454 lastLocationAccess: - #next: i437  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a435 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-58891|0xffffffffffff19f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2461) [bci: 14]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v456 
lastLocationAccess: - 
=== Succesors ===
next: a438 
=== Usages ===
i156 i84 v159 
=== Predecessor ===
i436 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v456 lastLocationAccess: - #next: a438  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
a438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a438 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-59915|0xffffffffffff15f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v458 
lastLocationAccess: - 
=== Succesors ===
next: i439 
=== Usages ===
a240 v459 
=== Predecessor ===
i437 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v458 lastLocationAccess: - #next: i439  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v457 
lastLocationAccess: - 
=== Succesors ===
next: i440 
=== Usages ===
v445 
=== Predecessor ===
a438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v457 lastLocationAccess: - #next: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a438 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-61963|0xffffffffffff0df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2461) [bci: 14]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v459 
lastLocationAccess: - 
=== Succesors ===
next: v328 
=== Usages ===
i175 i107 v178 
=== Predecessor ===
i439 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v459 lastLocationAccess: - #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 v444 v445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i433 
y: i260 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i433 y: i260  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
i440 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v326 #falseSuccessor: v327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i436 
y: i260 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i436 y: i260  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 7]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i441 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i441  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j262 
index: a432 
=== Succesors ===
=== Usages ===
i441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j262 index: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i441 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v453 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
i263 
=== Predecessor ===
v330 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v453 lastLocationAccess: - #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i441 
=== Succesors ===
=== Usages ===
?126 ?130 i156 i175 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i441  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 2]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v32 i156 v45 v131 v178 i84 i175 i107 v127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i27 
=== Succesors ===
=== Usages ===
v155 v81 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i437 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a435 
=== Succesors ===
=== Usages ===
i84 i156 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a435  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i372 i181 i370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j83 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i84 i107 i156 i175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v153 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
i441 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v153 #falseSuccessor: v154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v153 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i156 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a228 
arrayOffset: j83 
arrayLength: i437 
fromIndex: i27 
searchValues: i263 
=== Succesors ===
next: v336 
=== Usages ===
i370 v127 
=== Predecessor ===
v154 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a228 arrayOffset: j83 arrayLength: i437 fromIndex: i27 searchValues: i263 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i156 
y: i27 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i156 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
i156 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v355 #falseSuccessor: v335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: i32 [-2147483648 - -1] bits:1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v354 
values: i156 i82 
=== Succesors ===
=== Usages ===
?358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v354 values: i156 i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v161 
=== Succesors ===
next: v340 
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v161 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i260 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i439 y: i260  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v339 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v338 #falseSuccessor: v339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 7]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i440 
y: i27 
=== Succesors ===
=== Usages ===
v174 v106 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i440 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a438 
=== Succesors ===
=== Usages ===
i107 i175 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a438  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i175 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a240 
arrayOffset: j83 
arrayLength: i440 
fromIndex: i27 
searchValues: i263 
=== Succesors ===
next: v182 
=== Usages ===
i181 
=== Predecessor ===
v173 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a240 arrayOffset: j83 arrayLength: i440 fromIndex: i27 searchValues: i263 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
i175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v179 
values: i82 i175 
=== Succesors ===
=== Usages ===
v131 ?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v179 values: i82 i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v180 v182 
=== Succesors ===
next: v421 
=== Usages ===
i181 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v180 v182 #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
stamp: i32
=== Inputs ===
x: i2 
y: i50 
=== Succesors ===
=== Usages ===
i193 i279 j443 v287 v290 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i3 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v420 #falseSuccessor: v417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid i279 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i132 
=== Succesors ===
=== Usages ===
j282 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i279 
=== Succesors ===
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i279  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i132 
=== Succesors ===
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j282 
y: j443 
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j282 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid j283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j374 
y: j283 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j374 y: j283  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i434 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i434  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j375 
y: j278 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j375 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j406 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 3224
stableDimension: 0
stamp: i64 [3224]
stampKind: i64
value: long[3224|0xc98]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -63260
stableDimension: 0
stamp: i32 [-63260]
stampKind: i32
value: int[-63260|0xffffffffffff08e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v428 #falseSuccessor: v425  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i434 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i434  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v418 #falseSuccessor: v426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v415 v416 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v415 v416 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i27 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i181 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v342 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v8  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v342 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i132 i51 i51 
=== Succesors ===
=== Usages ===
?11 v12 ?30 i192 j264 i51 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v9 values: i132 i51 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v8 
=== Succesors ===
next: v18 
=== Usages ===
i193 v14 v52 v369 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v8 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i3 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.9412690429720026
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v17 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i442 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i442  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i193 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i193  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j264 
index: a432 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j264 index: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
=== Succesors ===
next: v81 
=== Usages ===
i265 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i442 
=== Succesors ===
=== Usages ===
?30 i84 i107 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i442  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
i442 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v79 #falseSuccessor: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i84 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a228 
arrayOffset: j83 
arrayLength: i437 
fromIndex: i27 
searchValues: i265 
=== Succesors ===
next: v348 
=== Usages ===
i372 v32 
=== Predecessor ===
v80 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a228 arrayOffset: j83 arrayLength: i437 fromIndex: i27 searchValues: i265 #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i27 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i84 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
i84 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v360 #falseSuccessor: v347  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: i32 [-2147483648 - -1] bits:1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v359 
values: i84 i82 
=== Succesors ===
=== Usages ===
?363 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v359 values: i84 i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v361 v89 
=== Succesors ===
next: v106 
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v361 v89 #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
stamp: i32
=== Inputs ===
x: i193 
y: i50 
=== Succesors ===
=== Usages ===
i193 i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i193 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v104 #falseSuccessor: v105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i107 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a240 
arrayOffset: j83 
arrayLength: i440 
fromIndex: i27 
searchValues: i265 
=== Succesors ===
next: v352 
=== Usages ===
v45 
=== Predecessor ===
v105 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a240 arrayOffset: j83 arrayLength: i440 fromIndex: i27 searchValues: i265 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i27 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
i107 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v365 #falseSuccessor: v351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
sourceFile: URI.java
sourceLine: 3079
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 a5 i193 i265 
=== Succesors ===
=== Usages ===
?92 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 a5 i193 i265  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.indexOf(int)>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2405
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?30 
=== Succesors ===
=== Usages ===
?363 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?30  <|@  <|@
tid ?363 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: goto
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
sourceFile: String.java
sourceLine: 2461
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?92 
values: i372 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?92 values: i372  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x3e48a881]: UnreachedCode@6[HotSpotMethod<URI$Parser.scan(int, int, String, String)>, 41]}
stamp: void
=== Inputs ===
stateBefore: ?363 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?363  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: iload
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
sourceFile: URI.java
sourceLine: 3077
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 a5 i193 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 a5 i193  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x3e48a875]: UnreachedCode@6[HotSpotMethod<URI$Parser.scan(int, int, String, String)>, 29]}
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -87315
stableDimension: 0
stamp: i32 [-87315]
stampKind: i32
value: int[-87315|0xfffffffffffeaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i32 [-87315 - -63260] bits:1...1xx0x010x01110x10x
valueDescription: i32
=== Inputs ===
merge: v403 
values: i405 i411 i405 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v403 values: i405 i411 i405  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i64 [660 - 3224] bits:0...0xxx01001xx00
valueDescription: i64
=== Inputs ===
merge: v403 
values: j406 j412 j406 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v403 values: j406 j412 j406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v404 v410 v430 
=== Succesors ===
next: v409 
=== Usages ===
i407 j408 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v404 v410 v430 #next: v409  <|@  <|@
tid ?130 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
sourceFile: URI.java
sourceLine: 3081
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 a5 i2 i263 
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 a5 i2 i263  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.indexOf(int)>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2405
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?130 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?130  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: goto
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
sourceFile: String.java
sourceLine: 2461
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?183 
values: i181 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?183 values: i181  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?167 
actionAndReason: i407 
speculation: j408 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?167 actionAndReason: i407 speculation: j408  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
sourceFile: URI.java
sourceLine: 3079
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 a5 i2 i263 
=== Succesors ===
=== Usages ===
?164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 a5 i2 i263  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.indexOf(int)>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2405
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?126 
=== Succesors ===
=== Usages ===
?358 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?126  <|@  <|@
tid ?358 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: goto
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
sourceFile: String.java
sourceLine: 2461
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?164 
values: i370 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?164 values: i370  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
reason: UnreachedCode
speculation: {0x0000000000000794[index: 60, len: 20, hash: 0x5cc5646e]: UnreachedCode@6[HotSpotMethod<String.indexOf(int, int)>, 23]}
stamp: void
=== Inputs ===
stateBefore: ?358 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?358  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid j194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 10]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -85267
stableDimension: 0
stamp: i32 [-85267]
stampKind: i32
value: int[-85267|0xfffffffffffeb2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v335 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243]
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid j397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -83219
stableDimension: 0
stamp: i32 [-83219]
stampKind: i32
value: int[-83219|0xfffffffffffebaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -54044
stableDimension: 0
stamp: i32 [-54044]
stampKind: i32
value: int[-54044|0xffffffffffff2ce4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i32 [-85267 - -54044] bits:1...1xx01xxxx01110x10x
valueDescription: i32
=== Inputs ===
merge: v376 
values: i388 i396 i399 i402 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v376 values: i388 i396 i399 i402  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i64 [0 - 1940] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v376 
values: j379 j397 j400 j194 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v376 values: j379 j397 j400 j194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v387 v395 v398 v401 
=== Succesors ===
next: v382 
=== Usages ===
i380 j381 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v387 v395 v398 v401 #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i380 
speculation: j381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i380 speculation: j381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v187 
values: i193 i2 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v187 values: i193 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v188 v189 
=== Succesors ===
next: v53 
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v188 v189 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 52]
stamp: void
=== Inputs ===
memoryMap: - 
result: i192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i192  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i192 v119 ?126 ?130 i132 v213 j262 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?11 v12 ?30 v290 v119 ?126 ?130 i279 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 6]
profileData: PROFILED designatedSuccessorProbability: 0.9445270239449093
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v121 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v121 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a431 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a431  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.net.URI$Parser
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?11 ?130 ?30 ?126 v449 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a431 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.String
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: URI$Parser.input
memoryOrder: PLAIN
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 10]
stamp: n# java.lang.String
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
lastLocationAccess: - 
=== Succesors ===
next: a432 
=== Usages ===
v451 v450 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v449 lastLocationAccess: - #next: a432  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?11 ?130 ?30 ?126 v455 v454 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?11 ?130 v457 ?30 v458 ?126 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
sourceFile: URI.java
sourceLine: 3076
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 a4 a5 
=== Succesors ===
=== Usages ===
v382 a432 i434 a435 i437 a438 i440 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 a4 a5  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result [v5|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a431 
=== Succesors ===
=== Usages ===
a432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a432 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-50699|0xffffffffffff39f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v451 
lastLocationAccess: - 
=== Succesors ===
next: i433 
=== Usages ===
v460 v452 v453 
=== Predecessor ===
a431 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v451 lastLocationAccess: - #next: i433  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
result [v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a431 
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i433 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v450 
lastLocationAccess: - 
=== Succesors ===
next: i434 
=== Usages ===
v261 
=== Predecessor ===
a432 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v450 lastLocationAccess: - #next: i434  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a432 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i434 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-52747|0xffffffffffff31f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v452 
lastLocationAccess: - 
=== Succesors ===
next: v304 
=== Usages ===
v287 v213 j278 
=== Predecessor ===
i433 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v452 lastLocationAccess: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i434 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i434  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v303 
=== Usages ===
=== Predecessor ===
i434 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v301 #falseSuccessor: v303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a435 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a435  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
result [v3|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a435 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-56843|0xffffffffffff21f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v455 
lastLocationAccess: - 
=== Succesors ===
next: i436 
=== Usages ===
a228 v456 
=== Predecessor ===
v301 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v455 lastLocationAccess: - #next: i436  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i436 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v454 
lastLocationAccess: - 
=== Succesors ===
next: i437 
=== Usages ===
v444 
=== Predecessor ===
a435 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v454 lastLocationAccess: - #next: i437  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
result [v9|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a435 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i437 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-58891|0xffffffffffff19f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2461) [bci: 14]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v456 
lastLocationAccess: - 
=== Succesors ===
next: a438 
=== Usages ===
i156 i84 v159 
=== Predecessor ===
i436 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v456 lastLocationAccess: - #next: a438  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
result [v4|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
a438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a438 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-59915|0xffffffffffff15f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v458 
lastLocationAccess: - 
=== Succesors ===
next: i439 
=== Usages ===
a240 v459 
=== Predecessor ===
i437 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v458 lastLocationAccess: - #next: i439  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
result [v4|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v457 
lastLocationAccess: - 
=== Succesors ===
next: i440 
=== Usages ===
v445 
=== Predecessor ===
a438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v457 lastLocationAccess: - #next: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
result [v12|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a438 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i440 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-61963|0xffffffffffff0df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2461) [bci: 14]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v459 
lastLocationAccess: - 
=== Succesors ===
next: v328 
=== Usages ===
i175 i107 v178 
=== Predecessor ===
i439 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v459 lastLocationAccess: - #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 v444 v445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i433 
y: i260 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i433 y: i260  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
i440 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v326 #falseSuccessor: v327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i436 
y: i260 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i436 y: i260  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 7]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i441 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i441  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
result [v15|QWORD + v6|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j262 
index: a432 
=== Succesors ===
=== Usages ===
i441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j262 index: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i441 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v453 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
i263 
=== Predecessor ===
v330 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v453 lastLocationAccess: - #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i441 
=== Succesors ===
=== Usages ===
?126 ?130 i156 i175 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i441  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 2]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v32 i156 v45 v131 v178 i84 i175 i107 v127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i27 
=== Succesors ===
=== Usages ===
v155 v81 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i437 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a435 
=== Succesors ===
=== Usages ===
i84 i156 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a435  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i372 i181 i370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j83 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i84 i107 i156 i175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v153 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
i441 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v153 #falseSuccessor: v154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v153 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i156 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i156 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a228 
arrayOffset: j83 
arrayLength: i437 
fromIndex: i27 
searchValues: i263 
=== Succesors ===
next: v336 
=== Usages ===
i370 v127 
=== Predecessor ===
v154 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a228 arrayOffset: j83 arrayLength: i437 fromIndex: i27 searchValues: i263 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i156 
y: i27 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i156 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
i156 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v355 #falseSuccessor: v335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i370 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: i32 [-2147483648 - -1] bits:1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v354 
values: i156 i82 
=== Succesors ===
=== Usages ===
?358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v354 values: i156 i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v161 
=== Succesors ===
next: v340 
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v161 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2461) [bci: 1]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i260 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i439 y: i260  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v339 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v338 #falseSuccessor: v339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 7]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i440 
y: i27 
=== Succesors ===
=== Usages ===
v174 v106 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i440 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid a240 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 8]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a438 
=== Succesors ===
=== Usages ===
i107 i175 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a438  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i175 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i175 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a240 
arrayOffset: j83 
arrayLength: i440 
fromIndex: i27 
searchValues: i263 
=== Succesors ===
next: v182 
=== Usages ===
i181 
=== Predecessor ===
v173 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a240 arrayOffset: j83 arrayLength: i440 fromIndex: i27 searchValues: i263 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
i175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i181 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v179 
values: i82 i175 
=== Succesors ===
=== Usages ===
v131 ?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v179 values: i82 i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v180 v182 
=== Succesors ===
next: v421 
=== Usages ===
i181 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v180 v182 #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
stamp: i32
=== Inputs ===
x: i2 
y: i50 
=== Succesors ===
=== Usages ===
i193 i279 j443 v287 v290 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i3 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v420 #falseSuccessor: v417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid i279 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i132 
=== Succesors ===
=== Usages ===
j282 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i279 
=== Succesors ===
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i279  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i132 
=== Succesors ===
=== Usages ===
j374 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j282 
y: j443 
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j282 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid j283 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j374 
y: j283 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j374 y: j283  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i434 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i434  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j375 
y: j278 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j375 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j406 <|@
result long[3224|0xc98] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 3224
stableDimension: 0
stamp: i64 [3224]
stampKind: i64
value: long[3224|0xc98]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i405 <|@
result int[-63260|0xffffffffffff08e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -63260
stableDimension: 0
stamp: i32 [-63260]
stampKind: i32
value: int[-63260|0xffffffffffff08e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v428 #falseSuccessor: v425  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i434 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i434  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v418 #falseSuccessor: v426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v415 v416 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v415 v416 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i27 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i181 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v342 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v8  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v342 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i193 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i132 i51 i51 
=== Succesors ===
=== Usages ===
?11 v12 ?30 i192 j264 i51 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v9 values: i132 i51 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v8 
=== Succesors ===
next: v18 
=== Usages ===
i193 v14 v52 v369 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v8 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i3 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.9412690429720026
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v17 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i442 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i442  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i193 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i193  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
result [v30|DWORD + v6|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j264 
index: a432 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j264 index: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
=== Succesors ===
next: v81 
=== Usages ===
i265 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i442 
=== Succesors ===
=== Usages ===
?30 i84 i107 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i442  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
i442 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v79 #falseSuccessor: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i84 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i84 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a228 
arrayOffset: j83 
arrayLength: i437 
fromIndex: i27 
searchValues: i265 
=== Succesors ===
next: v348 
=== Usages ===
i372 v32 
=== Predecessor ===
v80 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a228 arrayOffset: j83 arrayLength: i437 fromIndex: i27 searchValues: i265 #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i27 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i84 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
i84 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v360 #falseSuccessor: v347  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i372 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: i32 [-2147483648 - -1] bits:1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v359 
values: i84 i82 
=== Succesors ===
=== Usages ===
?363 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v359 values: i84 i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v361 v89 
=== Succesors ===
next: v106 
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v361 v89 #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
stamp: i32
=== Inputs ===
x: i193 
y: i50 
=== Succesors ===
=== Usages ===
i193 i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i193 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 3.285227216276443E-4
stamp: void
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v104 #falseSuccessor: v105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i107 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i107 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a240 
arrayOffset: j83 
arrayLength: i440 
fromIndex: i27 
searchValues: i265 
=== Succesors ===
next: v352 
=== Usages ===
v45 
=== Predecessor ===
v105 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a240 arrayOffset: j83 arrayLength: i440 fromIndex: i27 searchValues: i265 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i27 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
i107 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v365 #falseSuccessor: v351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3083) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
sourceFile: URI.java
sourceLine: 3079
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 a5 i193 i265 
=== Succesors ===
=== Usages ===
?92 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 a5 i193 i265  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.indexOf(int)>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2405
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?30 
=== Succesors ===
=== Usages ===
?363 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?30  <|@  <|@
tid ?363 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: goto
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
sourceFile: String.java
sourceLine: 2461
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?92 
values: i372 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?92 values: i372  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x3e48a881]: UnreachedCode@6[HotSpotMethod<URI$Parser.scan(int, int, String, String)>, 41]}
stamp: void
=== Inputs ===
stateBefore: ?363 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?363  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: iload
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
sourceFile: URI.java
sourceLine: 3077
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 a5 i193 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 a5 i193  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x3e48a875]: UnreachedCode@6[HotSpotMethod<URI$Parser.scan(int, int, String, String)>, 29]}
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3081) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
result int[-87315|0xfffffffffffeaaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -87315
stableDimension: 0
stamp: i32 [-87315]
stampKind: i32
value: int[-87315|0xfffffffffffeaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i407 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i32 [-87315 - -63260] bits:1...1xx0x010x01110x10x
valueDescription: i32
=== Inputs ===
merge: v403 
values: i405 i411 i405 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v403 values: i405 i411 i405  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i64 [660 - 3224] bits:0...0xxx01001xx00
valueDescription: i64
=== Inputs ===
merge: v403 
values: j406 j412 j406 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v403 values: j406 j412 j406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v404 v410 v430 
=== Succesors ===
next: v409 
=== Usages ===
i407 j408 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v404 v410 v430 #next: v409  <|@  <|@
tid ?130 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
sourceFile: URI.java
sourceLine: 3081
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 a5 i2 i263 
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 a5 i2 i263  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.indexOf(int)>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2405
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?130 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?130  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: goto
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 17]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
sourceFile: String.java
sourceLine: 2461
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?183 
values: i181 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?183 values: i181  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?167 
actionAndReason: i407 
speculation: j408 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?167 actionAndReason: i407 speculation: j408  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<URI$Parser.scan(int, int, String, String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
sourceFile: URI.java
sourceLine: 3079
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 a4 a5 i2 i263 
=== Succesors ===
=== Usages ===
?164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 a4 a5 i2 i263  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.indexOf(int)>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2405
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?126 
=== Succesors ===
=== Usages ===
?358 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?126  <|@  <|@
tid ?358 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: goto
code: ResolvedJavaMethodBytecode<String.indexOf(int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
sourceFile: String.java
sourceLine: 2461
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?164 
values: i370 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?164 values: i370  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
reason: UnreachedCode
speculation: {0x0000000000000794[index: 60, len: 20, hash: 0x5cc5646e]: UnreachedCode@6[HotSpotMethod<String.indexOf(int, int)>, 23]}
stamp: void
=== Inputs ===
stateBefore: ?358 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?358  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3079) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid j194 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 10]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result int[-85267|0xfffffffffffeb2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -85267
stableDimension: 0
stamp: i32 [-85267]
stampKind: i32
value: int[-85267|0xfffffffffffeb2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v335 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2461) [bci: 4]
at java.lang.String.indexOf(String.java:2405) [bci: 3]
at java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result int[-84243|0xfffffffffffeb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243]
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid j397 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result int[-83219|0xfffffffffffebaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -83219
stableDimension: 0
stamp: i32 [-83219]
stampKind: i32
value: int[-83219|0xfffffffffffebaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i388 <|@
result int[-54044|0xffffffffffff2ce4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
rawvalue: -54044
stableDimension: 0
stamp: i32 [-54044]
stampKind: i32
value: int[-54044|0xffffffffffff2ce4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i380 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i32 [-85267 - -54044] bits:1...1xx01xxxx01110x10x
valueDescription: i32
=== Inputs ===
merge: v376 
values: i388 i396 i399 i402 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v376 values: i388 i396 i399 i402  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: i64 [0 - 1940] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v376 
values: j379 j397 j400 j194 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v376 values: j379 j397 j400 j194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v387 v395 v398 v401 
=== Succesors ===
next: v382 
=== Usages ===
i380 j381 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v387 v395 v398 v401 #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3078) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i380 
speculation: j381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i380 speculation: j381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i192 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v187 
values: i193 i2 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v187 values: i193 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v188 v189 
=== Succesors ===
next: v53 
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v188 v189 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI$Parser.scan(URI.java:3085) [bci: 52]
stamp: void
=== Inputs ===
memoryMap: - 
result: i192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  194  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  260  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  264  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  370  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  436  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  450  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  504  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  726  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  758  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  194  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  260  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  264  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  370  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  436  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  450  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  504  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  726  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  758  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v40|d [0, 1[[178, 180[[258, 260[[434, 436[[502, 504[[566, 568[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|d [0, 32[[172, 179[[252, 259[[428, 435[[496, 503[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[170, 179[[250, 259[[426, 435[[494, 503[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v17|q [0, 28[[168, 179[[248, 259[[424, 435[[492, 503[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[[174, 178[[254, 258[[430, 434[[498, 502[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v16|d [0, 36[[176, 178[[256, 258[[432, 434[[500, 502[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [28, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 779[28 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [30, 360[[570, 579[[580, 621[[644, 664[[686, 747[[748, 779[30 MustHaveRegister 38 ShouldHaveRegister 66 ShouldHaveRegister 134 ShouldHaveRegister 276 ShouldHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [32, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 779[32 MustHaveRegister 38 MustHaveRegister 278 MustHaveRegister 312 MustHaveRegister 380 MustHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|d [34, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 779[34 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q r9|d [36, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 779[36 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [58, 62[58 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [60, 538[[580, 600[60 MustHaveRegister 64 MustHaveRegister 136 MustHaveRegister 394 MustHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [62, 102[62 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [64, 280[[290, 336[[580, 600[64 MustHaveRegister 66 MustHaveRegister 322 ShouldHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [90, 138[90 MustHaveRegister 94 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [92, 114[92 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [94, 538[[580, 600[94 MustHaveRegister 140 MustHaveRegister 172 ShouldHaveRegister 396 MustHaveRegister 428 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [96, 220[[580, 590[96 MustHaveRegister 100 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [98, 204[[580, 590[98 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [100, 538[[580, 600[100 MustHaveRegister 222 MustHaveRegister 252 ShouldHaveRegister 464 MustHaveRegister 496 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [136, 360[[580, 621[[654, 664[[706, 716[[748, 779[136 MustHaveRegister 176 ShouldHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v9|d [138, 538[[580, 600[138 MustHaveRegister 168 ShouldHaveRegister 424 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d rax|d [180, 193[180 MustHaveRegister 182 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v18|d [194, 206[[600, 621[ "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v12|d [220, 538[[590, 600[220 MustHaveRegister 248 ShouldHaveRegister 492 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d rax|d [260, 263[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v21|d [264, 360[[654, 664[[706, 716[[748, 779[358 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v1|d [276, 369[276 MustHaveRegister 278 ShouldHaveRegister 312 ShouldHaveRegister 316 ShouldHaveRegister 336 ShouldHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v2|d [312, 314[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [314, 318[314 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v23|d [316, 318[316 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v25|q [318, 320[318 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|q [320, 324[320 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v8|d [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v34|d [370, 508[[518, 528[[538, 547[[622, 643[[664, 685[380 ShouldHaveRegister 394 MustHaveRegister 462 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [394, 508[[518, 528[[664, 685[394 MustHaveRegister 432 ShouldHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d rax|d [436, 449[436 MustHaveRegister 438 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v32|d [450, 508[[664, 685[ "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v30|d [462, 517[[528, 537[462 MustHaveRegister 516 ShouldHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d rax|d [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [758, 774[774 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [758, 776[776 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [726, 742[742 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [726, 744[744 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v30|d [548, 566[566 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v40|d [0, 1[[178, 180[[258, 260[[434, 436[[502, 504[[566, 568[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|d [0, 32[[172, 179[[252, 259[[428, 435[[496, 503[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[170, 179[[250, 259[[426, 435[[494, 503[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v17|q [0, 28[[168, 179[[248, 259[[424, 435[[492, 503[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[[174, 178[[254, 258[[430, 434[[498, 502[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v16|d [0, 36[[176, 178[[256, 258[[432, 434[[500, 502[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [28, 68[28 MustHaveRegister 58 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rbx|d]" v1|d rdx|- [30, 360[[570, 579[[580, 621[[644, 664[[686, 747[[748, 779[30 MustHaveRegister 38 ShouldHaveRegister 66 ShouldHaveRegister 134 ShouldHaveRegister 276 ShouldHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d rcx|- [32, 142[32 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r13|q]" v3|q r8|d [34, 142[34 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r14|q]" v4|q r9|d [36, 142[36 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[rsi|d]" v5|d -1 [58, 62[58 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [60, 142[60 MustHaveRegister 64 MustHaveRegister 136 MustHaveRegister  "SpillInDominator"
  v7|d DWORD "[rsi|d]" v7|d -1 [62, 102[62 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdi|d]" v8|d -1 [64, 142[64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rdx|d]" v9|d -1 [90, 138[90 MustHaveRegister 94 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [92, 114[92 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [94, 177[94 MustHaveRegister 140 MustHaveRegister 172 ShouldHaveRegister  "SpillInDominator"
  v12|d DWORD "[r9|d]" v12|d -1 [96, 142[96 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [98, 142[98 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d -1 [100, 538[[580, 600[100 MustHaveRegister 222 MustHaveRegister 252 ShouldHaveRegister 464 MustHaveRegister 496 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [136, 142[136 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v9|d [138, 169[138 MustHaveRegister 168 ShouldHaveRegister  "SpillInDominator"
  v18|d DWORD "[rax|d]" v18|d rax|d [180, 193[180 MustHaveRegister 182 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [194, 206[[600, 621[ "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q v12|d [220, 538[[590, 600[220 MustHaveRegister 248 ShouldHaveRegister 492 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|d [260, 263[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v21|d [264, 360[[654, 664[[706, 716[[748, 779[358 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v1|d [276, 369[276 MustHaveRegister 278 ShouldHaveRegister 312 ShouldHaveRegister 316 ShouldHaveRegister 336 ShouldHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdx|d]" v24|d v2|d [312, 314[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [314, 318[314 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v23|d [316, 318[316 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdx|q]" v27|q v25|q [318, 320[318 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q v27|q [320, 324[320 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q v8|d [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d v34|d [370, 466[380 ShouldHaveRegister 394 MustHaveRegister 462 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [394, 501[394 MustHaveRegister 432 ShouldHaveRegister 500 ShouldHaveRegister  "OneSpillStore"
  v32|d DWORD "[rax|d]" v32|d rax|d [436, 449[436 MustHaveRegister 438 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v32|d [450, 466[ "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v30|d [462, 466[462 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d rax|d [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r11|d]" v36|d -1 [758, 774[774 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r8|q]" v37|q -1 [758, 776[776 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v38|d -1 [726, 742[742 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q -1 [726, 744[744 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbx|d]" v40|d v30|d [548, 566[566 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[vstack:6|d]" v6|d v6|d [142, 177[ "SpillInDominator"
  v42|d DWORD "[vstack:5|d]" v8|d v8|d [142, 177[ "OneSpillStore"
  v43|d DWORD "[vstack:7|d]" v11|d v11|d [177, 370[ "SpillInDominator"
  v44|d DWORD "[r9|d]" v12|d v12|d [142, 175[ "NoSpillStore"
  v45|d DWORD "[r8|d]" v13|d v13|d [142, 173[ "NoSpillStore"
  v46|q QWORD "[rcx|q]" v0|q v0|q [758, 779[ "OneSpillStore"
  v47|q QWORD "[vstack:0|q]" v0|q v0|q [68, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v48|d DWORD "[rcx|d]" v16|d v16|d [142, 171[ "NoSpillStore"
  v49|q QWORD "[vstack:3|q]" v17|q v17|q [169, 370[ "SpillInDominator"
  v50|d DWORD "[r14|d]" v16|d v16|d [171, 360[[580, 621[[654, 664[[706, 716[[748, 779[176 ShouldHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r13|d]" v13|d v13|d [173, 204[[580, 590[204 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rbp|d]" v12|d v12|d [175, 220[[580, 590[220 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[vstack:5|d]" v8|d v8|d [177, 280[[290, 326[322 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[vstack:6|d]" v6|d v6|d [177, 370[ "SpillInDominator"
  v55|q QWORD "[r13|q]" v3|q v3|q [758, 779[ "OneSpillStore"
  v56|q QWORD "[vstack:1|q]" v3|q v3|q [142, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v57|q QWORD "[r9|q]" v4|q v4|q [758, 779[ "OneSpillStore"
  v58|q QWORD "[vstack:2|q]" v4|q v4|q [142, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v59|q QWORD "[rdx|q]" v17|q v17|q [370, 425[424 ShouldHaveRegister  "SpillInDominator"
  v60|d DWORD "[r13|d]" v2|d v2|d [264, 538[278 MustHaveRegister 312 MustHaveRegister 380 MustHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "OneSpillStore"
  v61|d DWORD "[vstack:4|d]" v2|d v2|d [142, 264[ "OneSpillStore"
  v62|d DWORD "[rdi|d]" v8|d v8|d [326, 336[[580, 600[336 MustHaveRegister  "OneSpillStore"
  v63|d DWORD "[r10|d]" v6|d v6|d [370, 398[394 MustHaveRegister  "SpillInDominator"
  v64|d DWORD "[rax|d]" v11|d v11|d [370, 433[396 MustHaveRegister 428 ShouldHaveRegister  "SpillInDominator"
  v65|d DWORD "[r10|d]" v2|d v2|d [580, 621[[622, 643[[644, 685[[686, 747[[748, 779[ "OneSpillStore"
  v66|d DWORD "[vstack:6|d]" v6|d v6|d [398, 433[ "SpillInDominator"
  v67|d DWORD "[vstack:7|d]" v11|d v11|d [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "SpillInDominator"
  v68|q QWORD "[vstack:3|q]" v17|q v17|q [425, 433[ "SpillInDominator"
  v69|d DWORD "[vstack:6|d]" v6|d v6|d [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "SpillInDominator"
  v70|q QWORD "[vstack:3|q]" v17|q v17|q [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "SpillInDominator"
  v71|d DWORD "[rax|d]" v33|d v33|d [466, 501[ "NoSpillStore"
  v72|d DWORD "[r10|d]" v34|d v34|d [466, 501[ "NoSpillStore"
  v73|d DWORD "[r14|d]" v34|d v34|d [501, 517[[528, 537[516 ShouldHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rbx|d]" v33|d v33|d [501, 508[ "NoSpillStore"
  v75|d DWORD "[r14|d]" v31|d v31|d [664, 685[ "OneSpillStore"
  v76|d DWORD "[vstack:9|d]" v31|d v31|d [501, 508[[518, 528[ "OneSpillStore"
  v77|d DWORD "[rax|d]" v33|d v33|d [664, 685[ "NoSpillStore"
  v78|d DWORD "[rbx|d]" v30|d v30|d [664, 685[ "OneSpillStore"
  v79|d DWORD "[vstack:11|d]" v30|d v30|d [466, 508[[518, 528[[538, 547[[622, 643[546 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v45|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOVE input: v44|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = STACKMOVE (input: v41|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = STACKMOVE (input: v42|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  194  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  260  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  264  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  370  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = STACKMOVE (input: v66|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:10|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  436  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  450  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  504  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  726  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  758  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v40|d [0, 1[[178, 180[[258, 260[[434, 436[[502, 504[[566, 568[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|d [0, 32[[172, 179[[252, 259[[428, 435[[496, 503[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[170, 179[[250, 259[[426, 435[[494, 503[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v17|q [0, 28[[168, 179[[248, 259[[424, 435[[492, 503[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[[174, 178[[254, 258[[430, 434[[498, 502[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v16|d [0, 36[[176, 178[[256, 258[[432, 434[[500, 502[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [28, 68[28 MustHaveRegister 58 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rbx|d]" v1|d rdx|- [30, 360[[570, 579[[580, 621[[644, 664[[686, 747[[748, 779[30 MustHaveRegister 38 ShouldHaveRegister 66 ShouldHaveRegister 134 ShouldHaveRegister 276 ShouldHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d rcx|- [32, 142[32 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r13|q]" v3|q r8|d [34, 142[34 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r14|q]" v4|q r9|d [36, 142[36 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[rsi|d]" v5|d -1 [58, 62[58 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [60, 142[60 MustHaveRegister 64 MustHaveRegister 136 MustHaveRegister  "StoreAtDefinition"
  v7|d DWORD "[rsi|d]" v7|d -1 [62, 102[62 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdi|d]" v8|d -1 [64, 142[64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rdx|d]" v9|d -1 [90, 138[90 MustHaveRegister 94 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [92, 114[92 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [94, 177[94 MustHaveRegister 140 MustHaveRegister 172 ShouldHaveRegister  "StoreAtDefinition"
  v12|d DWORD "[r9|d]" v12|d -1 [96, 142[96 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [98, 142[98 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d -1 [100, 538[[580, 600[100 MustHaveRegister 222 MustHaveRegister 252 ShouldHaveRegister 464 MustHaveRegister 496 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [136, 142[136 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v9|d [138, 169[138 MustHaveRegister 168 ShouldHaveRegister  "StoreAtDefinition"
  v18|d DWORD "[rax|d]" v18|d rax|d [180, 193[180 MustHaveRegister 182 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [194, 206[[600, 621[ "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q v12|d [220, 538[[590, 600[220 MustHaveRegister 248 ShouldHaveRegister 492 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|d [260, 263[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v21|d [264, 360[[654, 664[[706, 716[[748, 779[358 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v1|d [276, 369[276 MustHaveRegister 278 ShouldHaveRegister 312 ShouldHaveRegister 316 ShouldHaveRegister 336 ShouldHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdx|d]" v24|d v2|d [312, 314[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [314, 318[314 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v23|d [316, 318[316 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdx|q]" v27|q v25|q [318, 320[318 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q v27|q [320, 324[320 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q v8|d [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d v34|d [370, 466[380 ShouldHaveRegister 394 MustHaveRegister 462 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [394, 501[394 MustHaveRegister 432 ShouldHaveRegister 500 ShouldHaveRegister  "OneSpillStore"
  v32|d DWORD "[rax|d]" v32|d rax|d [436, 449[436 MustHaveRegister 438 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v32|d [450, 466[ "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v30|d [462, 466[462 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d rax|d [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r11|d]" v36|d -1 [758, 774[774 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r8|q]" v37|q -1 [758, 776[776 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v38|d -1 [726, 742[742 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q -1 [726, 744[744 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbx|d]" v40|d v30|d [548, 566[566 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[vstack:6|d]" v6|d v6|d [142, 177[ "StoreAtDefinition"
  v42|d DWORD "[vstack:5|d]" v8|d v8|d [142, 177[ "OneSpillStore"
  v43|d DWORD "[vstack:7|d]" v11|d v11|d [177, 370[ "StoreAtDefinition"
  v44|d DWORD "[r9|d]" v12|d v12|d [142, 175[ "NoSpillStore"
  v45|d DWORD "[r8|d]" v13|d v13|d [142, 173[ "NoSpillStore"
  v46|q QWORD "[rcx|q]" v0|q v0|q [758, 779[ "OneSpillStore"
  v47|q QWORD "[vstack:0|q]" v0|q v0|q [68, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v48|d DWORD "[rcx|d]" v16|d v16|d [142, 171[ "NoSpillStore"
  v49|q QWORD "[vstack:3|q]" v17|q v17|q [169, 370[ "StoreAtDefinition"
  v50|d DWORD "[r14|d]" v16|d v16|d [171, 360[[580, 621[[654, 664[[706, 716[[748, 779[176 ShouldHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r13|d]" v13|d v13|d [173, 204[[580, 590[204 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rbp|d]" v12|d v12|d [175, 220[[580, 590[220 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[vstack:5|d]" v8|d v8|d [177, 280[[290, 326[322 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[vstack:6|d]" v6|d v6|d [177, 370[ "StoreAtDefinition"
  v55|q QWORD "[r13|q]" v3|q v3|q [758, 779[ "OneSpillStore"
  v56|q QWORD "[vstack:1|q]" v3|q v3|q [142, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v57|q QWORD "[r9|q]" v4|q v4|q [758, 779[ "OneSpillStore"
  v58|q QWORD "[vstack:2|q]" v4|q v4|q [142, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v59|q QWORD "[rdx|q]" v17|q v17|q [370, 425[424 ShouldHaveRegister  "StoreAtDefinition"
  v60|d DWORD "[r13|d]" v2|d v2|d [264, 538[278 MustHaveRegister 312 MustHaveRegister 380 MustHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "OneSpillStore"
  v61|d DWORD "[vstack:4|d]" v2|d v2|d [142, 264[ "OneSpillStore"
  v62|d DWORD "[rdi|d]" v8|d v8|d [326, 336[[580, 600[336 MustHaveRegister  "OneSpillStore"
  v63|d DWORD "[r10|d]" v6|d v6|d [370, 398[394 MustHaveRegister  "StoreAtDefinition"
  v64|d DWORD "[rax|d]" v11|d v11|d [370, 433[396 MustHaveRegister 428 ShouldHaveRegister  "StoreAtDefinition"
  v65|d DWORD "[r10|d]" v2|d v2|d [580, 621[[622, 643[[644, 685[[686, 747[[748, 779[ "OneSpillStore"
  v66|d DWORD "[vstack:6|d]" v6|d v6|d [398, 433[ "StoreAtDefinition"
  v67|d DWORD "[vstack:7|d]" v11|d v11|d [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "StoreAtDefinition"
  v68|q QWORD "[vstack:3|q]" v17|q v17|q [425, 433[ "StoreAtDefinition"
  v69|d DWORD "[vstack:6|d]" v6|d v6|d [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "StoreAtDefinition"
  v70|q QWORD "[vstack:3|q]" v17|q v17|q [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "StoreAtDefinition"
  v71|d DWORD "[rax|d]" v33|d v33|d [466, 501[ "NoSpillStore"
  v72|d DWORD "[r10|d]" v34|d v34|d [466, 501[ "NoSpillStore"
  v73|d DWORD "[r14|d]" v34|d v34|d [501, 517[[528, 537[516 ShouldHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rbx|d]" v33|d v33|d [501, 508[ "NoSpillStore"
  v75|d DWORD "[r14|d]" v31|d v31|d [664, 685[ "OneSpillStore"
  v76|d DWORD "[vstack:9|d]" v31|d v31|d [501, 508[[518, 528[ "OneSpillStore"
  v77|d DWORD "[rax|d]" v33|d v33|d [664, 685[ "NoSpillStore"
  v78|d DWORD "[rbx|d]" v30|d v30|d [664, 685[ "OneSpillStore"
  v79|d DWORD "[vstack:11|d]" v30|d v30|d [466, 508[[518, 528[[538, 547[[622, 643[546 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v45|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOVE input: v44|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = STACKMOVE (input: v41|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = STACKMOVE (input: v42|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  194  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  260  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  264  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  370  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = STACKMOVE (input: v66|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:10|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  436  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  450  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  504  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [int[-85267|0xfffffffffffeb2ed], long[20|0x14]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [int[-83219|0xfffffffffffebaed], long[1300|0x514]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[1940|0x794]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [int[-87315|0xfffffffffffeaaed], long[660|0x294]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [int[-54044|0xffffffffffff2ce4], long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  726  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [int[-63260|0xffffffffffff08e4], long[3224|0xc98]] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  758  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v40|d [0, 1[[178, 180[[258, 260[[434, 436[[502, 504[[566, 568[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|d [0, 32[[172, 179[[252, 259[[428, 435[[496, 503[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[170, 179[[250, 259[[426, 435[[494, 503[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v17|q [0, 28[[168, 179[[248, 259[[424, 435[[492, 503[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[[174, 178[[254, 258[[430, 434[[498, 502[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v16|d [0, 36[[176, 178[[256, 258[[432, 434[[500, 502[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[178, 179[[258, 259[[434, 435[[502, 503[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [28, 68[28 MustHaveRegister 58 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rbx|d]" v1|d rdx|- [30, 360[[570, 579[[580, 621[[644, 664[[686, 747[[748, 779[30 MustHaveRegister 38 ShouldHaveRegister 66 ShouldHaveRegister 134 ShouldHaveRegister 276 ShouldHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d rcx|- [32, 142[32 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r13|q]" v3|q r8|d [34, 142[34 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r14|q]" v4|q r9|d [36, 142[36 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[rsi|d]" v5|d -1 [58, 62[58 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [60, 142[60 MustHaveRegister 64 MustHaveRegister 136 MustHaveRegister  "StoreAtDefinition"
  v7|d DWORD "[rsi|d]" v7|d -1 [62, 102[62 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdi|d]" v8|d -1 [64, 142[64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rdx|d]" v9|d -1 [90, 138[90 MustHaveRegister 94 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [92, 114[92 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [94, 177[94 MustHaveRegister 140 MustHaveRegister 172 ShouldHaveRegister  "StoreAtDefinition"
  v12|d DWORD "[r9|d]" v12|d -1 [96, 142[96 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [98, 142[98 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d -1 [100, 538[[580, 600[100 MustHaveRegister 222 MustHaveRegister 252 ShouldHaveRegister 464 MustHaveRegister 496 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [136, 142[136 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v9|d [138, 169[138 MustHaveRegister 168 ShouldHaveRegister  "StoreAtDefinition"
  v18|d DWORD "[rax|d]" v18|d rax|d [180, 193[180 MustHaveRegister 182 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [194, 206[[600, 621[ "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q v12|d [220, 538[[590, 600[220 MustHaveRegister 248 ShouldHaveRegister 492 ShouldHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|d [260, 263[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v21|d [264, 360[[654, 664[[706, 716[[748, 779[358 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v1|d [276, 369[276 MustHaveRegister 278 ShouldHaveRegister 312 ShouldHaveRegister 316 ShouldHaveRegister 336 ShouldHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdx|d]" v24|d v2|d [312, 314[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [314, 318[314 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v23|d [316, 318[316 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdx|q]" v27|q v25|q [318, 320[318 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q v27|q [320, 324[320 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q v8|d [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d v34|d [370, 466[380 ShouldHaveRegister 394 MustHaveRegister 462 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [394, 501[394 MustHaveRegister 432 ShouldHaveRegister 500 ShouldHaveRegister  "OneSpillStore"
  v32|d DWORD "[rax|d]" v32|d rax|d [436, 449[436 MustHaveRegister 438 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v32|d [450, 466[ "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v30|d [462, 466[462 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d rax|d [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r11|d]" v36|d -1 [758, 774[774 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r8|q]" v37|q -1 [758, 776[776 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v38|d -1 [726, 742[742 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q -1 [726, 744[744 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbx|d]" v40|d v30|d [548, 566[566 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[vstack:6|d]" v6|d v6|d [142, 177[ "StoreAtDefinition"
  v42|d DWORD "[vstack:5|d]" v8|d v8|d [142, 177[ "OneSpillStore"
  v43|d DWORD "[vstack:7|d]" v11|d v11|d [177, 370[ "StoreAtDefinition"
  v44|d DWORD "[r9|d]" v12|d v12|d [142, 175[ "NoSpillStore"
  v45|d DWORD "[r8|d]" v13|d v13|d [142, 173[ "NoSpillStore"
  v46|q QWORD "[rcx|q]" v0|q v0|q [758, 779[ "OneSpillStore"
  v47|q QWORD "[vstack:0|q]" v0|q v0|q [68, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v48|d DWORD "[rcx|d]" v16|d v16|d [142, 171[ "NoSpillStore"
  v49|q QWORD "[vstack:3|q]" v17|q v17|q [169, 370[ "StoreAtDefinition"
  v50|d DWORD "[r14|d]" v16|d v16|d [171, 360[[580, 621[[654, 664[[706, 716[[748, 779[176 ShouldHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r13|d]" v13|d v13|d [173, 204[[580, 590[204 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rbp|d]" v12|d v12|d [175, 220[[580, 590[220 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[vstack:5|d]" v8|d v8|d [177, 280[[290, 326[322 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[vstack:6|d]" v6|d v6|d [177, 370[ "StoreAtDefinition"
  v55|q QWORD "[r13|q]" v3|q v3|q [758, 779[ "OneSpillStore"
  v56|q QWORD "[vstack:1|q]" v3|q v3|q [142, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v57|q QWORD "[r9|q]" v4|q v4|q [758, 779[ "OneSpillStore"
  v58|q QWORD "[vstack:2|q]" v4|q v4|q [142, 538[[580, 621[[622, 643[[644, 685[[686, 747[[748, 758[ "OneSpillStore"
  v59|q QWORD "[rdx|q]" v17|q v17|q [370, 425[424 ShouldHaveRegister  "StoreAtDefinition"
  v60|d DWORD "[r13|d]" v2|d v2|d [264, 538[278 MustHaveRegister 312 MustHaveRegister 380 MustHaveRegister 517 LiveAtLoopEnd 537 LiveAtLoopEnd  "OneSpillStore"
  v61|d DWORD "[vstack:4|d]" v2|d v2|d [142, 264[ "OneSpillStore"
  v62|d DWORD "[rdi|d]" v8|d v8|d [326, 336[[580, 600[336 MustHaveRegister  "OneSpillStore"
  v63|d DWORD "[r10|d]" v6|d v6|d [370, 398[394 MustHaveRegister  "StoreAtDefinition"
  v64|d DWORD "[rax|d]" v11|d v11|d [370, 433[396 MustHaveRegister 428 ShouldHaveRegister  "StoreAtDefinition"
  v65|d DWORD "[r10|d]" v2|d v2|d [580, 621[[622, 643[[644, 685[[686, 747[[748, 779[ "OneSpillStore"
  v66|d DWORD "[vstack:6|d]" v6|d v6|d [398, 433[ "StoreAtDefinition"
  v67|d DWORD "[vstack:7|d]" v11|d v11|d [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "StoreAtDefinition"
  v68|q QWORD "[vstack:3|q]" v17|q v17|q [425, 433[ "StoreAtDefinition"
  v69|d DWORD "[vstack:6|d]" v6|d v6|d [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "StoreAtDefinition"
  v70|q QWORD "[vstack:3|q]" v17|q v17|q [433, 538[[580, 600[517 LiveAtLoopEnd 537 LiveAtLoopEnd  "StoreAtDefinition"
  v71|d DWORD "[rax|d]" v33|d v33|d [466, 501[ "NoSpillStore"
  v72|d DWORD "[r10|d]" v34|d v34|d [466, 501[ "NoSpillStore"
  v73|d DWORD "[r14|d]" v34|d v34|d [501, 517[[528, 537[516 ShouldHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rbx|d]" v33|d v33|d [501, 508[ "NoSpillStore"
  v75|d DWORD "[r14|d]" v31|d v31|d [664, 685[ "OneSpillStore"
  v76|d DWORD "[vstack:9|d]" v31|d v31|d [501, 508[[518, 528[ "OneSpillStore"
  v77|d DWORD "[rax|d]" v33|d v33|d [664, 685[ "NoSpillStore"
  v78|d DWORD "[rbx|d]" v30|d v30|d [664, 685[ "OneSpillStore"
  v79|d DWORD "[vstack:11|d]" v30|d v30|d [466, 508[[518, 528[[538, 547[[622, 643[546 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOVE input: v6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v45|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOVE input: v44|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = STACKMOVE (input: v41|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = STACKMOVE (input: v42|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  194  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  260  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  264  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOVE input: v54|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  370  <|@ instruction [v30|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOVE input: v63|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = STACKMOVE (input: v66|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:10|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  436  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  450  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  504  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOVE input: v69|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOVE input: v63|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v34|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOVE input: v69|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = MOVE input: v6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOVE input: v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  726  <|@ instruction [v38|DWORD, v39|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  758  <|@ instruction [v36|DWORD, v37|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   62  <|@ instruction v7|DWORD = MOVSXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v12|DWORD[_] = MOV input: [v4|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOVSXB input: [v4|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction TESTBYTEBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction v15|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v16|DWORD = MOVZXB input: [v15|QWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v45|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOVE input: v44|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = STACKMOVE (input: v42|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBYTEBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  260  <|@ instruction v21|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v23|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v23|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v24|DWORD = SUB (x: v2|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction v25|QWORD = MOVSXD value: v24|DWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction v26|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction v27|QWORD = ADD (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction v28|QWORD = DEC value: v27|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction v29|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v28|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOVE input: v54|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v31|DWORD = MOVZXB input: [v30|DWORD + v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  434  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  436  <|@ instruction v32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: v32|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  504  <|@ instruction v35|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v35|DWORD, y: v35|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOVE input: v69|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v34|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOVE input: v69|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rax|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOVE input: v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v19|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v61|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v33|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v30|DWORD v31|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v38|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v39|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v36|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v37|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: v22|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: v0|QWORD[.] - v2|DWORD v3|QWORD[.] v4|QWORD[.] v1|DWORD v16|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|QWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:11|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   98  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  102  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|QWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:11|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction vstack:6|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction vstack:9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction vstack:9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  534  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rax|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction r10|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  286  <|@ instruction vstack:5|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction vstack:11|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:11|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  422  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: vstack:0|QWORD[.] - r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  776  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: vstack:0|QWORD[.] rbx|DWORD r10|DWORD vstack:1|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [72, 928[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [154, 928[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [152, 928[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [146, 691[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [174, 832[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [172, 386[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [62, 691[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [100, 691[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [522, 710[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [524, 760[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [72, 928[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:80|q]" vstack:1|q -1 [154, 928[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:72|q]" vstack:2|q -1 [152, 928[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:64|q]" vstack:3|q -1 [146, 691[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:36|d]" vstack:4|d -1 [174, 832[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [172, 386[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:44|d]" vstack:6|d -1 [62, 691[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:28|d]" vstack:7|d -1 [100, 691[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:32|d]" vstack:9|d -1 [522, 710[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:40|d]" vstack:11|d -1 [524, 760[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  534  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  286  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  422  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  776  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  534  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  286  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  422  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  776  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  534  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  286  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rsi:0, r11:0, r13:0, r14:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [r10:0, r11:0, r13:0, r14:0, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0, stack:24, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, r13:0, r14:0, stack:24, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:24]
live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:24]
live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@reference-map: [rcx:0, r9:0, r13:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:24]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:24]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B39" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rsi:0, r11:0, r13:0, r14:0]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [r10:0, r11:0, r13:0, r14:0, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: r11|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B38" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0, stack:24, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, r13:0, r14:0, stack:24, stack:36]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD rbp|DWORD r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B37" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV value: rbx|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B36" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  224  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" "B35" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3 <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606679967730220130
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  328  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rsi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B15" 
    successors "B20" "B33" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B29" "B27" 
    successors "B22" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625219973851634892
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624711408949635435
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  658  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624708609347697508
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4572383606922556788
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606682762651435730
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4602179163024065234
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 4588155319413101280
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4554359622293749679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  288  <|@ instruction r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr  828  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:24]
live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:24]
live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3079) [bci: 23]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B17" "B33" "B16" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  444  <|@ instruction r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@reference-map: [rcx:0, r9:0, r13:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2461) [bci: 20]
stack: rax|DWORD 
locals: - - - 
java.lang.String.indexOf(String.java:2405) [bci: 3]
locals: - - 
java.net.URI$Parser.scan(URI.java:3081) [bci: 35]
locals: rcx|QWORD[.] - r10|DWORD r13|QWORD[.] r9|QWORD[.] rbx|DWORD r14|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 3, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  774  <|@ instruction r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  882  <|@ instruction r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed] <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:24]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3076) [bci: 0]
locals: stack:56|QWORD[.] rbx|DWORD r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  862  <|@ instruction r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:24]
live-base-pointers: []
java.net.URI$Parser.scan(URI.java:3077) [bci: 3]
locals: stack:56|QWORD[.] - r10|DWORD stack:80|QWORD[.] stack:72|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4] <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed] <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iload         5
     5: iload_2       
     6: if_icmpge     50
     9: aload_0       
    10: getfield      #4          // input:java.lang.String
    13: iload         5
    15: invokevirtual #12         // java.lang.String.charAt:(int)char
    18: istore        6
    20: aload_3       
    21: iload         6
    23: invokevirtual #14         // java.lang.String.indexOf:(int)int
    26: iflt          31
    29: iconst_m1     
    30: ireturn       
    31: aload         4
    33: iload         6
    35: invokevirtual #14         // java.lang.String.indexOf:(int)int
    38: iflt          44
    41: goto          50
    44: iinc          
    47: goto          3
    50: iload         5
    52: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f85b6040000909090909090909090909048896c24404c8bde8bda8be94d8be84d8bf13beb0f8ea70200009090909090909090418b7314448b14f51400000044895424240fbe34f510000000428b3cd50c0000003bfb0f86200400004c895c241890909090909090909090418b5514410fbe4d108b04d50c00000089442434458b4e14450fbe4610468b1ccd0c0000004084f60f85560300009090909084c90f858803000090909090909090908bf3420fb64cd61048c1e203488954241085c00f8411020000897c24304c897424084c892c24896c242c909090909090909090909090488bf248c7c210000000448bf18bc8458be841b800000000418be9458bcee80000000085c00f8d94030000909090909090904584ed0f85fd01000090909090909048c1e5034585db0f84d10100009090909090909090909090488bf548c7c210000000418bcb41b800000000458bcee800000000448b6c242c90909090908bf3ffc6443bee0f8f250100009090909090909085c00f8d480200009090908bde66660f1f840000000000488b5424108b442434448b54242490909090443beb0f8ec10000009090909090460fb674d31085c00f848d000000909090909090909090909090488bf248c7c2100000008bc841b800000000458bcee80000000085c00f8d630200009090909090909090448bd341ffc24585db0f845b000000895c2428909090909090909090909090488bf548c7c210000000418bcb41b800000000458bce8bd84489742430458bf2e80000000085c00f8d0e010000909090418bdee945ffffff4489742430895c2428909090b8ffffffffeb91458bf2909090418bdee924ffffff895c242890909090909090909090908bc3488b6c24404883c448493ba7500400000f873d020000c5f877c390909090909090909090418bd52bd64863d28bce4803d148ffca8b7c2430483bfa0f86c80000008b7c2430909090903bfe0f8610010000909090e99ffeffff909090eb984c897424084c892c24448bd5448bf1458be8418be9909090b8ffffffff897c2430448954242ce90ffeffff8b7c2430448b54242c909090b8ffffffff458beae941feffff448b54242c9090909090909041c78784040000edaefeff49c7879004000094070000e8000000000f1f8400000000008bc3448b7424308b5c2428458bd59090909090909041c78784040000eda2feff49c7879004000094020000e8000000000f1f840000000000458bd590909049c7c0980c000041bbe408ffff4c8b4c24084c8b2c24488b4c24189090909090909045899f840400004d898790040000e8000000000f1f840000000000458bd590909049c7c09402000041bbedaafeffebbb458bd590909049c7c0980c000041bbe408ffffeba64c897424084c892c24448bd590909049c7c01405000041bbedbafeff9090909090909045899f840400004d898790040000e8000000000f1f8400000000004c897424084c892c24448bd590909049c7c09407000041bbedb6feffebc0895c2428458bd59090909090909041c78784040000eda6feff49c7879004000014000000e8000000000f1f8400000000004c897424084c892c24448bd54c895c241890909049c7c00000000041bbe42cffffe969ffffff448b54242c90909049c7c01400000041bbedb2feffe94fffffff48896c2440e800000000e93bfbfffff4488d0daffdffff49898f68040000e9edfafffff441c78784040000f539ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f531ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f521ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f519ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f515ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f50dffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD  <||@
  Comment 74 28 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 77 30 rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 79 32 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 81 34 r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 84 36 r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 87 38 CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD  <||@
  Comment 95 block B1 null  <||@
  Comment 95 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 95 42 NOP  <||@
  Comment 96 44 NOP  <||@
  Comment 97 46 NOP  <||@
  Comment 98 48 NOP  <||@
  Comment 99 50 NOP  <||@
  Comment 100 52 NOP  <||@
  Comment 101 54 NOP  <||@
  Comment 102 56 NOP  <||@
  Comment 103 58 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 107 60 r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 107 [rsi:0, r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4             |5  |6 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 107 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 115 62 stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 120 64 rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 128 66 rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 128 [r10:0, r11:0, r13:0, r14:0, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4             |5  |6 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 128 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 136 68 CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD  <||@
  Comment 144 block B2 null  <||@
  Comment 144 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 144 72 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 149 74 NOP  <||@
  Comment 150 76 NOP  <||@
  Comment 151 78 NOP  <||@
  Comment 152 80 NOP  <||@
  Comment 153 82 NOP  <||@
  Comment 154 84 NOP  <||@
  Comment 155 86 NOP  <||@
  Comment 156 88 NOP  <||@
  Comment 157 90 NOP  <||@
  Comment 158 92 NOP  <||@
  Comment 159 94 rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 159 [r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 159 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 96 rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 168 98 rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 168 [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 175 100 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 179 102 r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 179 [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 179 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 183 104 r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 188 106 r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 188 [rdx:0, r9:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 188 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 196 108 TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38  <||@
  Comment 205 block B3 null  <||@
  Comment 205 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 205 112 NOP  <||@
  Comment 206 114 NOP  <||@
  Comment 207 116 NOP  <||@
  Comment 208 118 NOP  <||@
  Comment 209 120 TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37  <||@
  Comment 217 block B4 null  <||@
  Comment 217 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 217 124 NOP  <||@
  Comment 218 126 NOP  <||@
  Comment 219 128 NOP  <||@
  Comment 220 130 NOP  <||@
  Comment 221 132 NOP  <||@
  Comment 222 134 NOP  <||@
  Comment 223 136 NOP  <||@
  Comment 224 138 NOP  <||@
  Comment 225 140 rsi|QWORD = MOV value: rbx|DWORD size: DWORD  <||@
  Comment 227 142 rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 233 144 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3  <||@
  Comment 237 146 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 242 148 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 250 block B6 null  <||@
  Comment 250 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 250 180 stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 254 182 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 259 184 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 263 186 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 267 188 NOP  <||@
  Comment 268 190 NOP  <||@
  Comment 269 192 NOP  <||@
  Comment 270 194 NOP  <||@
  Comment 271 196 NOP  <||@
  Comment 272 198 NOP  <||@
  Comment 273 200 NOP  <||@
  Comment 274 202 NOP  <||@
  Comment 275 204 NOP  <||@
  Comment 276 206 NOP  <||@
  Comment 277 208 NOP  <||@
  Comment 278 210 NOP  <||@
  Comment 279 212 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 282 214 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 289 216 r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 292 218 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 294 220 r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 297 222 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 303 224 rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD  <||@
  Comment 306 226 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 309 228 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 309 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 314 230 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD  <||@
  Comment 322 block B7 null  <||@
  Comment 322 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 322 234 NOP  <||@
  Comment 323 236 NOP  <||@
  Comment 324 238 NOP  <||@
  Comment 325 240 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 325 block B8 null  <||@
  Comment 325 242 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 325 244 NOP  <||@
  Comment 326 246 NOP  <||@
  Comment 327 248 NOP  <||@
  Comment 328 250 NOP  <||@
  Comment 329 252 TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35  <||@
  Comment 338 block B9 null  <||@
  Comment 338 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 338 256 NOP  <||@
  Comment 339 258 NOP  <||@
  Comment 340 260 NOP  <||@
  Comment 341 262 NOP  <||@
  Comment 342 264 NOP  <||@
  Comment 343 266 NOP  <||@
  Comment 344 268 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3  <||@
  Comment 348 270 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 357 block B11 null  <||@
  Comment 357 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 357 294 NOP  <||@
  Comment 358 296 NOP  <||@
  Comment 359 298 NOP  <||@
  Comment 360 300 NOP  <||@
  Comment 361 302 NOP  <||@
  Comment 362 304 NOP  <||@
  Comment 363 306 NOP  <||@
  Comment 364 308 NOP  <||@
  Comment 365 310 NOP  <||@
  Comment 366 312 NOP  <||@
  Comment 367 314 NOP  <||@
  Comment 368 316 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 371 318 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 378 320 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 381 322 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 387 324 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 390 326 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 390 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 395 328 r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 400 330 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 400 block B12 null  <||@
  Comment 400 332 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 400 334 NOP  <||@
  Comment 401 336 NOP  <||@
  Comment 402 338 NOP  <||@
  Comment 403 340 NOP  <||@
  Comment 404 342 NOP  <||@
  Comment 405 344 rsi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 409 346 CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD  <||@
  Comment 418 block B18 null  <||@
  Comment 418 452 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 418 454 NOP  <||@
  Comment 419 456 NOP  <||@
  Comment 420 458 NOP  <||@
  Comment 421 460 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 421 block B19 null  <||@
  Comment 421 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 421 464 NOP  <||@
  Comment 422 466 NOP  <||@
  Comment 423 468 NOP  <||@
  Comment 424 470 NOP  <||@
  Comment 425 472 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD  <||@
  Comment 433 block B20 null  <||@
  Comment 433 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 433 476 NOP  <||@
  Comment 434 478 NOP  <||@
  Comment 435 480 NOP  <||@
  Comment 436 482 rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 438 490 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 438 block B21 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 438 492 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 448 484 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 453 486 rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 457 488 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 462 494 NOP  <||@
  Comment 463 496 NOP  <||@
  Comment 464 498 NOP  <||@
  Comment 465 500 NOP  <||@
  Comment 466 502 CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD  <||@
  Comment 475 block B22 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 475 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 475 506 NOP  <||@
  Comment 476 508 NOP  <||@
  Comment 477 510 NOP  <||@
  Comment 478 512 NOP  <||@
  Comment 479 514 NOP  <||@
  Comment 480 516 r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 486 518 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD  <||@
  Comment 494 block B24 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 494 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 542 NOP  <||@
  Comment 495 544 NOP  <||@
  Comment 496 546 NOP  <||@
  Comment 497 548 NOP  <||@
  Comment 498 550 NOP  <||@
  Comment 499 552 NOP  <||@
  Comment 500 554 NOP  <||@
  Comment 501 556 NOP  <||@
  Comment 502 558 NOP  <||@
  Comment 503 560 NOP  <||@
  Comment 504 562 NOP  <||@
  Comment 505 564 NOP  <||@
  Comment 506 566 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 509 568 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 516 570 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 518 572 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 524 574 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 527 576 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 527 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 532 578 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD  <||@
  Comment 540 block B25 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 540 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 540 582 NOP  <||@
  Comment 541 584 NOP  <||@
  Comment 542 586 NOP  <||@
  Comment 543 588 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 543 block B26 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 543 590 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 543 592 NOP  <||@
  Comment 544 594 NOP  <||@
  Comment 545 596 NOP  <||@
  Comment 546 598 NOP  <||@
  Comment 547 600 NOP  <||@
  Comment 548 602 r10|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 554 604 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 563 block B28 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 563 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 563 628 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 567 630 NOP  <||@
  Comment 568 632 NOP  <||@
  Comment 569 634 NOP  <||@
  Comment 570 636 NOP  <||@
  Comment 571 638 NOP  <||@
  Comment 572 640 NOP  <||@
  Comment 573 642 NOP  <||@
  Comment 574 644 NOP  <||@
  Comment 575 646 NOP  <||@
  Comment 576 648 NOP  <||@
  Comment 577 650 NOP  <||@
  Comment 578 652 NOP  <||@
  Comment 579 654 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 582 656 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 589 658 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 592 660 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 598 662 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 601 664 rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 603 666 stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 608 668 r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 611 670 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 611 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 616 672 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD  <||@
  Comment 624 block B29 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 624 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 624 676 NOP  <||@
  Comment 625 678 NOP  <||@
  Comment 626 680 NOP  <||@
  Comment 627 682 rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 630 690 JUMP ~outgoingValues: [] destination: B29 -> B21  <||@
  Comment 635 block B23 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 635 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 635 522 stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 640 524 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 644 526 NOP  <||@
  Comment 645 528 NOP  <||@
  Comment 646 530 NOP  <||@
  Comment 647 532 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 652 538 JUMP ~outgoingValues: [] destination: B23 -> B26  <||@
  Comment 654 block B27 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 654 606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 654 608 r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 657 610 NOP  <||@
  Comment 658 612 NOP  <||@
  Comment 659 614 NOP  <||@
  Comment 660 616 rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 663 624 JUMP ~outgoingValues: [] destination: B27 -> B21  <||@
  Comment 668 block B30 null  <||@
  Comment 668 692 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 668 694 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 672 696 NOP  <||@
  Comment 673 698 NOP  <||@
  Comment 674 700 NOP  <||@
  Comment 675 704 JUMP ~outgoingValues: [] destination: B30 -> B42  <||@
  Comment 675 block B42 null  <||@
  Comment 675 940 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 675 942 NOP  <||@
  Comment 676 944 NOP  <||@
  Comment 677 946 NOP  <||@
  Comment 678 948 NOP  <||@
  Comment 679 950 NOP  <||@
  Comment 680 952 NOP  <||@
  Comment 681 954 NOP  <||@
  Comment 682 956 NOP  <||@
  Comment 683 958 rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 685 960 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 694 POLL_RETURN_FAR  <||@
  Comment 711 block B13 null  <||@
  Comment 711 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 711 350 NOP  <||@
  Comment 712 352 NOP  <||@
  Comment 713 354 NOP  <||@
  Comment 714 356 NOP  <||@
  Comment 715 358 NOP  <||@
  Comment 716 360 NOP  <||@
  Comment 717 362 NOP  <||@
  Comment 718 364 NOP  <||@
  Comment 719 366 NOP  <||@
  Comment 720 368 NOP  <||@
  Comment 721 370 rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 726 372 rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD  <||@
  Comment 729 374 rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 731 376 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 734 378 rdx|QWORD = DEC value: rdx|QWORD size: QWORD  <||@
  Comment 737 380 rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 741 382 CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD  <||@
  Comment 750 block B14 null  <||@
  Comment 750 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 750 386 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 754 388 NOP  <||@
  Comment 755 390 NOP  <||@
  Comment 756 392 NOP  <||@
  Comment 757 394 NOP  <||@
  Comment 758 396 CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 766 block B15 null  <||@
  Comment 766 398 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 766 400 NOP  <||@
  Comment 767 402 NOP  <||@
  Comment 768 404 NOP  <||@
  Comment 769 406 JUMP ~outgoingValues: [] destination: B15 -> B19  <||@
  Comment 774 block B41 null  <||@
  Comment 774 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 774 932 NOP  <||@
  Comment 775 934 NOP  <||@
  Comment 776 936 NOP  <||@
  Comment 777 938 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 779 block B5 null  <||@
  Comment 779 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 779 152 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 784 154 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 788 156 r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 791 158 r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 794 160 r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 797 162 rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD  <||@
  Comment 800 164 NOP  <||@
  Comment 801 166 NOP  <||@
  Comment 802 168 NOP  <||@
  Comment 803 170 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 808 172 stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 812 174 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 817 176 JUMP ~outgoingValues: [] destination: B5 -> B8  <||@
  Comment 822 block B10 null  <||@
  Comment 822 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 822 274 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 826 276 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 831 278 NOP  <||@
  Comment 832 280 NOP  <||@
  Comment 833 282 NOP  <||@
  Comment 834 284 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 839 288 r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 842 290 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 847 block B35 null  <||@
  Comment 847 806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 847 808 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 852 810 NOP  <||@
  Comment 853 812 NOP  <||@
  Comment 854 814 NOP  <||@
  Comment 855 816 NOP  <||@
  Comment 856 818 NOP  <||@
  Comment 857 820 NOP  <||@
  Comment 858 822 NOP  <||@
  Comment 859 824 MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD  <||@
  Comment 870 826 MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD  <||@
  Comment 881 828 DEOPT info [bci:20, 3, 23]  <||@
  Comment 881 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 886 [stack:0, stack:8, stack:24]at java.lang.String.indexOf(String.java:2461) [bci: 20, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |rax|DWORD  |   |  
  at java.lang.String.indexOf(String.java:2405) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.net.URI$Parser.scan(URI.java:3079) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2          |3                  |4                  |5          |6         
     locals:  |stack:56|QWORD[.]  |-  |r10|DWORD  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |rbx|DWORD  |r14|DWORD   <||@
  Comment 894 block B31 null  <||@
  Comment 894 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 894 708 rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 896 710 r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 901 712 rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 905 714 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 908 716 NOP  <||@
  Comment 909 718 NOP  <||@
  Comment 910 720 NOP  <||@
  Comment 911 722 NOP  <||@
  Comment 912 724 NOP  <||@
  Comment 913 726 NOP  <||@
  Comment 914 728 NOP  <||@
  Comment 915 730 MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD  <||@
  Comment 926 732 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 937 734 DEOPT info [bci:20, 3, 23]  <||@
  Comment 937 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 942 [stack:0, stack:8, stack:24]at java.lang.String.indexOf(String.java:2461) [bci: 20, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |rax|DWORD  |   |  
  at java.lang.String.indexOf(String.java:2405) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.net.URI$Parser.scan(URI.java:3079) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2          |3                  |4                  |5          |6         
     locals:  |stack:56|QWORD[.]  |-  |r10|DWORD  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |rbx|DWORD  |r14|DWORD   <||@
  Comment 950 block B17 null  <||@
  Comment 950 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 950 432 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 953 434 NOP  <||@
  Comment 954 436 NOP  <||@
  Comment 955 438 NOP  <||@
  Comment 956 440 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 963 442 r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4]  <||@
  Comment 969 450 JUMP ~outgoingValues: [] destination: B17 -> B34  <||@
  Comment 969 block B34 null  <||@
  Comment 969 784 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 969 444 r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 974 446 r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 978 448 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 983 786 NOP  <||@
  Comment 984 788 NOP  <||@
  Comment 985 790 NOP  <||@
  Comment 986 792 NOP  <||@
  Comment 987 794 NOP  <||@
  Comment 988 796 NOP  <||@
  Comment 989 798 NOP  <||@
  Comment 990 800 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 997 802 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1004 804 DEOPT info [bci:20, 3, 35]  <||@
  Comment 1004 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1009 [rcx:0, r9:0, r13:0]at java.lang.String.indexOf(String.java:2461) [bci: 20, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |rax|DWORD  |   |  
  at java.lang.String.indexOf(String.java:2405) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.net.URI$Parser.scan(URI.java:3081) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2          |3             |4            |5          |6         
     locals:  |rcx|QWORD[.]  |-  |r10|DWORD  |r13|QWORD[.]  |r9|QWORD[.]  |rbx|DWORD  |r14|DWORD   <||@
  Comment 1017 block B33 null  <||@
  Comment 1017 762 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 764 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1020 766 NOP  <||@
  Comment 1021 768 NOP  <||@
  Comment 1022 770 NOP  <||@
  Comment 1023 772 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1030 774 r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed]  <||@
  Comment 1036 782 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1038 block B16 null  <||@
  Comment 1038 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 410 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1041 412 NOP  <||@
  Comment 1042 414 NOP  <||@
  Comment 1043 416 NOP  <||@
  Comment 1044 418 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1051 420 r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4]  <||@
  Comment 1057 428 JUMP ~outgoingValues: [] destination: B16 -> B34  <||@
  Comment 1059 block B38 null  <||@
  Comment 1059 866 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1059 868 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1064 870 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1068 872 r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1071 874 NOP  <||@
  Comment 1072 876 NOP  <||@
  Comment 1073 878 NOP  <||@
  Comment 1074 880 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1081 882 r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed]  <||@
  Comment 1087 884 JUMP ~outgoingValues: [] destination: B38 -> B40  <||@
  Comment 1087 block B40 null  <||@
  Comment 1087 908 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1087 910 NOP  <||@
  Comment 1088 912 NOP  <||@
  Comment 1089 914 NOP  <||@
  Comment 1090 916 NOP  <||@
  Comment 1091 918 NOP  <||@
  Comment 1092 920 NOP  <||@
  Comment 1093 922 NOP  <||@
  Comment 1094 924 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1101 926 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1108 928 DEOPT info [bci:0]  <||@
  Comment 1108 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1113 [stack:0, stack:8, stack:24]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3                  |4                  |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |r10|DWORD  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1121 block B37 null  <||@
  Comment 1121 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1121 848 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1126 850 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 852 r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1133 854 NOP  <||@
  Comment 1134 856 NOP  <||@
  Comment 1135 858 NOP  <||@
  Comment 1136 860 r8|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 1143 862 r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 1149 864 JUMP ~outgoingValues: [] destination: B37 -> B40  <||@
  Comment 1151 block B32 null  <||@
  Comment 1151 736 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1151 738 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1155 740 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1158 742 NOP  <||@
  Comment 1159 744 NOP  <||@
  Comment 1160 746 NOP  <||@
  Comment 1161 748 NOP  <||@
  Comment 1162 750 NOP  <||@
  Comment 1163 752 NOP  <||@
  Comment 1164 754 NOP  <||@
  Comment 1165 756 MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD  <||@
  Comment 1176 758 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1187 760 DEOPT info [bci:3]  <||@
  Comment 1187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1192 [stack:0, stack:8, stack:24]at java.net.URI$Parser.scan(URI.java:3077) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1  |2          |3                  |4                  |5               |6 
     locals:  |stack:56|QWORD[.]  |-  |r10|DWORD  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |stack:40|DWORD  |-   <||@
  Comment 1200 block B39 null  <||@
  Comment 1200 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1200 888 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1205 890 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1209 892 r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1212 894 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1217 896 NOP  <||@
  Comment 1218 898 NOP  <||@
  Comment 1219 900 NOP  <||@
  Comment 1220 902 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1227 904 r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4]  <||@
  Comment 1233 906 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 1238 block B36 null  <||@
  Comment 1238 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1238 832 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1243 834 NOP  <||@
  Comment 1244 836 NOP  <||@
  Comment 1245 838 NOP  <||@
  Comment 1246 840 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1253 842 r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed]  <||@
  Comment 1259 844 JUMP ~outgoingValues: [] destination: B36 -> B40  <||@
  Comment 1269 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1294 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1322 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1327 [rsi:0, r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4             |5  |6 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1357 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1362 [r10:0, r11:0, r13:0, r14:0, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4             |5  |6 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1397 [r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1427 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1432 [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1467 [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1497 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1502 [rdx:0, r9:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1510 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1510 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1516 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1516 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10840[java.net.URI$Parser.scan(int, int, String, String)]"
  method "HotSpotCompilation-10840[java.net.URI$Parser.scan(int, int, String, String)]"
  date 1724269731072
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad937a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3189ffe66669089842400c0feff4883ec489041817f20000000000f85b6040000909090909090909090909048896c24404c8bde8bda8be94d8be84d8bf13beb0f8ea70200009090909090909090418b7314448b14f51400000044895424240fbe34f510000000428b3cd50c0000003bfb0f86200400004c895c241890909090909090909090418b5514410fbe4d108b04d50c00000089442434458b4e14450fbe4610468b1ccd0c0000004084f60f85560300009090909084c90f858803000090909090909090908bf3420fb64cd61048c1e203488954241085c00f8411020000897c24304c897424084c892c24896c242c909090909090909090909090488bf248c7c210000000448bf18bc8458be841b800000000418be9458bcee82656b4fe85c00f8d94030000909090909090904584ed0f85fd01000090909090909048c1e5034585db0f84d10100009090909090909090909090488bf548c7c210000000418bcb41b800000000458bcee8d555b4fe448b6c242c90909090908bf3ffc6443bee0f8f250100009090909090909085c00f8d480200009090908bde66660f1f840000000000488b5424108b442434448b54242490909090443beb0f8ec10000009090909090460fb674d31085c00f848d000000909090909090909090909090488bf248c7c2100000008bc841b800000000458bcee84c55b4fe85c00f8d630200009090909090909090448bd341ffc24585db0f845b000000895c2428909090909090909090909090488bf548c7c210000000418bcb41b800000000458bce8bd84489742430458bf2e8f854b4fe85c00f8d0e010000909090418bdee945ffffff4489742430895c2428909090b8ffffffffeb91458bf2909090418bdee924ffffff895c242890909090909090909090908bc3488b6c24404883c448493ba7500400000f873d020000c5f877c390909090909090909090418bd52bd64863d28bce4803d148ffca8b7c2430483bfa0f86c80000008b7c2430909090903bfe0f8610010000909090e99ffeffff909090eb984c897424084c892c24448bd5448bf1458be8418be9909090b8ffffffff897c2430448954242ce90ffeffff8b7c2430448b54242c909090b8ffffffff458beae941feffff448b54242c9090909090909041c78784040000edaefeff49c7879004000094070000e864769ffe0f1f8400000000008bc3448b7424308b5c2428458bd59090909090909041c78784040000eda2feff49c7879004000094020000e82c769ffe0f1f840000000000458bd590909049c7c0980c000041bbe408ffff4c8b4c24084c8b2c24488b4c24189090909090909045899f840400004d898790040000e8e9759ffe0f1f840000000000458bd590909049c7c09402000041bbedaafeffebbb458bd590909049c7c0980c000041bbe408ffffeba64c897424084c892c24448bd590909049c7c01405000041bbedbafeff9090909090909045899f840400004d898790040000e881759ffe0f1f8400000000004c897424084c892c24448bd590909049c7c09407000041bbedb6feffebc0895c2428458bd59090909090909041c78784040000eda6feff49c7879004000014000000e832759ffe0f1f8400000000004c897424084c892c24448bd54c895c241890909049c7c00000000041bbe42cffffe969ffffff448b54242c90909049c7c01400000041bbedb2feffe94fffffff48896c2440e886759dfee93bfbfffff4488d0daffdffff49898f68040000e94d839ffef441c78784040000f539ffff49c7879004000000000000e8ab749ffe0f1f84000000000041c78784040000f531ffff49c7879004000000000000e888749ffe0f1f84000000000041c78784040000f521ffff49c7879004000000000000e865749ffe0f1f84000000000041c78784040000f519ffff49c7879004000000000000e842749ffe0f1f84000000000041c78784040000f515ffff49c7879004000000000000e81f749ffe0f1f84000000000041c78784040000f50dffff49c7879004000000000000e8fc739ffe0f1f840000000000e87515b3fef4e88f719ffef4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@50bbaeee slotKind: QWORD  <||@
  Comment 74 28 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 77 30 rbx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 79 32 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 81 34 r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 84 36 r14|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 87 38 CMPBRANCH (x: rbp|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9445270239449093 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B41 size: DWORD  <||@
  Comment 95 block B1 null  <||@
  Comment 95 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 95 42 NOP  <||@
  Comment 96 44 NOP  <||@
  Comment 97 46 NOP  <||@
  Comment 98 48 NOP  <||@
  Comment 99 50 NOP  <||@
  Comment 100 52 NOP  <||@
  Comment 101 54 NOP  <||@
  Comment 102 56 NOP  <||@
  Comment 103 58 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 107 60 r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 107 [rsi:0, r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4             |5  |6 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 107 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 115 62 stack:44|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 120 64 rsi|DWORD = MOVSXB input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 128 66 rdi|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 128 [r10:0, r11:0, r13:0, r14:0, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4             |5  |6 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 128 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 136 68 CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B39 size: DWORD  <||@
  Comment 144 block B2 null  <||@
  Comment 144 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 144 72 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 149 74 NOP  <||@
  Comment 150 76 NOP  <||@
  Comment 151 78 NOP  <||@
  Comment 152 80 NOP  <||@
  Comment 153 82 NOP  <||@
  Comment 154 84 NOP  <||@
  Comment 155 86 NOP  <||@
  Comment 156 88 NOP  <||@
  Comment 157 90 NOP  <||@
  Comment 158 92 NOP  <||@
  Comment 159 94 rdx|DWORD[_] = MOV input: [r13|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 159 [r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 159 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 96 rcx|DWORD = MOVSXB input: [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 168 98 rax|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 168 [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 175 100 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 179 102 r9|DWORD[_] = MOV input: [r14|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 179 [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 179 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 183 104 r8|DWORD = MOVSXB input: [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 188 106 r11|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 188 [rdx:0, r9:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 188 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 196 108 TESTBYTEBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B38  <||@
  Comment 205 block B3 null  <||@
  Comment 205 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 205 112 NOP  <||@
  Comment 206 114 NOP  <||@
  Comment 207 116 NOP  <||@
  Comment 208 118 NOP  <||@
  Comment 209 120 TESTBYTEBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B37  <||@
  Comment 217 block B4 null  <||@
  Comment 217 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 217 124 NOP  <||@
  Comment 218 126 NOP  <||@
  Comment 219 128 NOP  <||@
  Comment 220 130 NOP  <||@
  Comment 221 132 NOP  <||@
  Comment 222 134 NOP  <||@
  Comment 223 136 NOP  <||@
  Comment 224 138 NOP  <||@
  Comment 225 140 rsi|QWORD = MOV value: rbx|DWORD size: DWORD  <||@
  Comment 227 142 rcx|DWORD = MOVZXB input: [rsi|QWORD + r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 233 144 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3  <||@
  Comment 237 146 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 242 148 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 250 block B6 null  <||@
  Comment 250 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 250 180 stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 254 182 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 259 184 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 263 186 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 267 188 NOP  <||@
  Comment 268 190 NOP  <||@
  Comment 269 192 NOP  <||@
  Comment 270 194 NOP  <||@
  Comment 271 196 NOP  <||@
  Comment 272 198 NOP  <||@
  Comment 273 200 NOP  <||@
  Comment 274 202 NOP  <||@
  Comment 275 204 NOP  <||@
  Comment 276 206 NOP  <||@
  Comment 277 208 NOP  <||@
  Comment 278 210 NOP  <||@
  Comment 279 212 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 282 214 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 289 216 r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 292 218 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 294 220 r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 297 222 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 303 224 rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD  <||@
  Comment 306 226 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 309 228 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 309 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 314 230 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B36 size: DWORD  <||@
  Comment 322 block B7 null  <||@
  Comment 322 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 322 234 NOP  <||@
  Comment 323 236 NOP  <||@
  Comment 324 238 NOP  <||@
  Comment 325 240 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 325 block B8 null  <||@
  Comment 325 242 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 325 244 NOP  <||@
  Comment 326 246 NOP  <||@
  Comment 327 248 NOP  <||@
  Comment 328 250 NOP  <||@
  Comment 329 252 TESTBYTEBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B35  <||@
  Comment 338 block B9 null  <||@
  Comment 338 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 338 256 NOP  <||@
  Comment 339 258 NOP  <||@
  Comment 340 260 NOP  <||@
  Comment 341 262 NOP  <||@
  Comment 342 264 NOP  <||@
  Comment 343 266 NOP  <||@
  Comment 344 268 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1ef5a5ed encoding: base: 0 shift: 3  <||@
  Comment 348 270 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 357 block B11 null  <||@
  Comment 357 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 357 294 NOP  <||@
  Comment 358 296 NOP  <||@
  Comment 359 298 NOP  <||@
  Comment 360 300 NOP  <||@
  Comment 361 302 NOP  <||@
  Comment 362 304 NOP  <||@
  Comment 363 306 NOP  <||@
  Comment 364 308 NOP  <||@
  Comment 365 310 NOP  <||@
  Comment 366 312 NOP  <||@
  Comment 367 314 NOP  <||@
  Comment 368 316 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 371 318 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 378 320 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 381 322 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 387 324 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 390 326 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 390 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 395 328 r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 400 330 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 400 block B12 null  <||@
  Comment 400 332 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 400 334 NOP  <||@
  Comment 401 336 NOP  <||@
  Comment 402 338 NOP  <||@
  Comment 403 340 NOP  <||@
  Comment 404 342 NOP  <||@
  Comment 405 344 rsi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 409 346 CMPBRANCH (x: r13|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD  <||@
  Comment 418 block B18 null  <||@
  Comment 418 452 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 418 454 NOP  <||@
  Comment 419 456 NOP  <||@
  Comment 420 458 NOP  <||@
  Comment 421 460 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 421 block B19 null  <||@
  Comment 421 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 421 464 NOP  <||@
  Comment 422 466 NOP  <||@
  Comment 423 468 NOP  <||@
  Comment 424 470 NOP  <||@
  Comment 425 472 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B33 size: DWORD  <||@
  Comment 433 block B20 null  <||@
  Comment 433 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 433 476 NOP  <||@
  Comment 434 478 NOP  <||@
  Comment 435 480 NOP  <||@
  Comment 436 482 rbx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 438 490 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 438 block B21 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 438 492 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 448 484 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 453 486 rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 457 488 r10|DWORD[_] = MOVE input: stack:44|DWORD[_] moveKind: DWORD  <||@
  Comment 462 494 NOP  <||@
  Comment 463 496 NOP  <||@
  Comment 464 498 NOP  <||@
  Comment 465 500 NOP  <||@
  Comment 466 502 CMPBRANCH (x: r13|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9412690429720026 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B30 size: DWORD  <||@
  Comment 475 block B22 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 475 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 475 506 NOP  <||@
  Comment 476 508 NOP  <||@
  Comment 477 510 NOP  <||@
  Comment 478 512 NOP  <||@
  Comment 479 514 NOP  <||@
  Comment 480 516 r14|DWORD = MOVZXB input: [rbx|DWORD + r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 486 518 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD  <||@
  Comment 494 block B24 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 494 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 542 NOP  <||@
  Comment 495 544 NOP  <||@
  Comment 496 546 NOP  <||@
  Comment 497 548 NOP  <||@
  Comment 498 550 NOP  <||@
  Comment 499 552 NOP  <||@
  Comment 500 554 NOP  <||@
  Comment 501 556 NOP  <||@
  Comment 502 558 NOP  <||@
  Comment 503 560 NOP  <||@
  Comment 504 562 NOP  <||@
  Comment 505 564 NOP  <||@
  Comment 506 566 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 509 568 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 516 570 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 518 572 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 524 574 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 527 576 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 527 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 532 578 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B32 size: DWORD  <||@
  Comment 540 block B25 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 540 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 540 582 NOP  <||@
  Comment 541 584 NOP  <||@
  Comment 542 586 NOP  <||@
  Comment 543 588 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 543 block B26 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 543 590 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 543 592 NOP  <||@
  Comment 544 594 NOP  <||@
  Comment 545 596 NOP  <||@
  Comment 546 598 NOP  <||@
  Comment 547 600 NOP  <||@
  Comment 548 602 r10|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 554 604 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 3.285227216276443E-4 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 563 block B28 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 563 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 563 628 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 567 630 NOP  <||@
  Comment 568 632 NOP  <||@
  Comment 569 634 NOP  <||@
  Comment 570 636 NOP  <||@
  Comment 571 638 NOP  <||@
  Comment 572 640 NOP  <||@
  Comment 573 642 NOP  <||@
  Comment 574 644 NOP  <||@
  Comment 575 646 NOP  <||@
  Comment 576 648 NOP  <||@
  Comment 577 650 NOP  <||@
  Comment 578 652 NOP  <||@
  Comment 579 654 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 582 656 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 589 658 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 592 660 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 598 662 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 601 664 rbx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 603 666 stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 608 668 r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 611 670 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 611 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 616 672 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD  <||@
  Comment 624 block B29 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 624 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 624 676 NOP  <||@
  Comment 625 678 NOP  <||@
  Comment 626 680 NOP  <||@
  Comment 627 682 rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 630 690 JUMP ~outgoingValues: [] destination: B29 -> B21  <||@
  Comment 635 block B23 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 635 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 635 522 stack:32|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 640 524 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 644 526 NOP  <||@
  Comment 645 528 NOP  <||@
  Comment 646 530 NOP  <||@
  Comment 647 532 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 652 538 JUMP ~outgoingValues: [] destination: B23 -> B26  <||@
  Comment 654 block B27 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 654 606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 654 608 r14|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 657 610 NOP  <||@
  Comment 658 612 NOP  <||@
  Comment 659 614 NOP  <||@
  Comment 660 616 rbx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 663 624 JUMP ~outgoingValues: [] destination: B27 -> B21  <||@
  Comment 668 block B30 null  <||@
  Comment 668 692 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 668 694 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 672 696 NOP  <||@
  Comment 673 698 NOP  <||@
  Comment 674 700 NOP  <||@
  Comment 675 704 JUMP ~outgoingValues: [] destination: B30 -> B42  <||@
  Comment 675 block B42 null  <||@
  Comment 675 940 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 675 942 NOP  <||@
  Comment 676 944 NOP  <||@
  Comment 677 946 NOP  <||@
  Comment 678 948 NOP  <||@
  Comment 679 950 NOP  <||@
  Comment 680 952 NOP  <||@
  Comment 681 954 NOP  <||@
  Comment 682 956 NOP  <||@
  Comment 683 958 rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 685 960 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 694 POLL_RETURN_FAR  <||@
  Comment 711 block B13 null  <||@
  Comment 711 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 711 350 NOP  <||@
  Comment 712 352 NOP  <||@
  Comment 713 354 NOP  <||@
  Comment 714 356 NOP  <||@
  Comment 715 358 NOP  <||@
  Comment 716 360 NOP  <||@
  Comment 717 362 NOP  <||@
  Comment 718 364 NOP  <||@
  Comment 719 366 NOP  <||@
  Comment 720 368 NOP  <||@
  Comment 721 370 rdx|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 726 372 rdx|QWORD = MOVSXD value: rdx|DWORD size: QWORD  <||@
  Comment 729 374 rcx|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 731 376 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 734 378 rdx|QWORD = DEC value: rdx|QWORD size: QWORD  <||@
  Comment 737 380 rdi|QWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 741 382 CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 size: QWORD  <||@
  Comment 750 block B14 null  <||@
  Comment 750 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 750 386 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 754 388 NOP  <||@
  Comment 755 390 NOP  <||@
  Comment 756 392 NOP  <||@
  Comment 757 394 NOP  <||@
  Comment 758 396 CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 766 block B15 null  <||@
  Comment 766 398 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 766 400 NOP  <||@
  Comment 767 402 NOP  <||@
  Comment 768 404 NOP  <||@
  Comment 769 406 JUMP ~outgoingValues: [] destination: B15 -> B19  <||@
  Comment 774 block B41 null  <||@
  Comment 774 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 774 932 NOP  <||@
  Comment 775 934 NOP  <||@
  Comment 776 936 NOP  <||@
  Comment 777 938 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 779 block B5 null  <||@
  Comment 779 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 779 152 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 784 154 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 788 156 r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 791 158 r14|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 794 160 r13|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 797 162 rbp|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD  <||@
  Comment 800 164 NOP  <||@
  Comment 801 166 NOP  <||@
  Comment 802 168 NOP  <||@
  Comment 803 170 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 808 172 stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 812 174 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 817 176 JUMP ~outgoingValues: [] destination: B5 -> B8  <||@
  Comment 822 block B10 null  <||@
  Comment 822 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 822 274 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 826 276 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 831 278 NOP  <||@
  Comment 832 280 NOP  <||@
  Comment 833 282 NOP  <||@
  Comment 834 284 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 839 288 r13|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 842 290 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 847 block B35 null  <||@
  Comment 847 806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 847 808 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 852 810 NOP  <||@
  Comment 853 812 NOP  <||@
  Comment 854 814 NOP  <||@
  Comment 855 816 NOP  <||@
  Comment 856 818 NOP  <||@
  Comment 857 820 NOP  <||@
  Comment 858 822 NOP  <||@
  Comment 859 824 MOV x: [r15|QWORD + 1156] y: -86291 size: DWORD  <||@
  Comment 870 826 MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD  <||@
  Comment 881 828 DEOPT info [bci:20, 3, 23]  <||@
  Comment 881 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 886 [stack:0, stack:8, stack:24]at java.lang.String.indexOf(String.java:2461) [bci: 20, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |rax|DWORD  |   |  
  at java.lang.String.indexOf(String.java:2405) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.net.URI$Parser.scan(URI.java:3079) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2          |3                  |4                  |5          |6         
     locals:  |stack:56|QWORD[.]  |-  |r10|DWORD  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |rbx|DWORD  |r14|DWORD   <||@
  Comment 894 block B31 null  <||@
  Comment 894 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 894 708 rax|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 896 710 r14|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 901 712 rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 905 714 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 908 716 NOP  <||@
  Comment 909 718 NOP  <||@
  Comment 910 720 NOP  <||@
  Comment 911 722 NOP  <||@
  Comment 912 724 NOP  <||@
  Comment 913 726 NOP  <||@
  Comment 914 728 NOP  <||@
  Comment 915 730 MOV x: [r15|QWORD + 1156] y: -89363 size: DWORD  <||@
  Comment 926 732 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 937 734 DEOPT info [bci:20, 3, 23]  <||@
  Comment 937 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 942 [stack:0, stack:8, stack:24]at java.lang.String.indexOf(String.java:2461) [bci: 20, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |rax|DWORD  |   |  
  at java.lang.String.indexOf(String.java:2405) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.net.URI$Parser.scan(URI.java:3079) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2          |3                  |4                  |5          |6         
     locals:  |stack:56|QWORD[.]  |-  |r10|DWORD  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |rbx|DWORD  |r14|DWORD   <||@
  Comment 950 block B17 null  <||@
  Comment 950 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 950 432 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 953 434 NOP  <||@
  Comment 954 436 NOP  <||@
  Comment 955 438 NOP  <||@
  Comment 956 440 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 963 442 r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4]  <||@
  Comment 969 450 JUMP ~outgoingValues: [] destination: B17 -> B34  <||@
  Comment 969 block B34 null  <||@
  Comment 969 784 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 969 444 r9|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 974 446 r13|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 978 448 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 983 786 NOP  <||@
  Comment 984 788 NOP  <||@
  Comment 985 790 NOP  <||@
  Comment 986 792 NOP  <||@
  Comment 987 794 NOP  <||@
  Comment 988 796 NOP  <||@
  Comment 989 798 NOP  <||@
  Comment 990 800 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 997 802 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1004 804 DEOPT info [bci:20, 3, 35]  <||@
  Comment 1004 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1009 [rcx:0, r9:0, r13:0]at java.lang.String.indexOf(String.java:2461) [bci: 20, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |rax|DWORD  |   |  
  at java.lang.String.indexOf(String.java:2405) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.net.URI$Parser.scan(URI.java:3081) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2          |3             |4            |5          |6         
     locals:  |rcx|QWORD[.]  |-  |r10|DWORD  |r13|QWORD[.]  |r9|QWORD[.]  |rbx|DWORD  |r14|DWORD   <||@
  Comment 1017 block B33 null  <||@
  Comment 1017 762 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 764 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1020 766 NOP  <||@
  Comment 1021 768 NOP  <||@
  Comment 1022 770 NOP  <||@
  Comment 1023 772 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1030 774 r11|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed]  <||@
  Comment 1036 782 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1038 block B16 null  <||@
  Comment 1038 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 410 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1041 412 NOP  <||@
  Comment 1042 414 NOP  <||@
  Comment 1043 416 NOP  <||@
  Comment 1044 418 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1051 420 r11|DWORD = MOVE input: int[-63260|0xffffffffffff08e4]  <||@
  Comment 1057 428 JUMP ~outgoingValues: [] destination: B16 -> B34  <||@
  Comment 1059 block B38 null  <||@
  Comment 1059 866 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1059 868 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1064 870 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1068 872 r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1071 874 NOP  <||@
  Comment 1072 876 NOP  <||@
  Comment 1073 878 NOP  <||@
  Comment 1074 880 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1081 882 r11|DWORD = MOVE input: int[-83219|0xfffffffffffebaed]  <||@
  Comment 1087 884 JUMP ~outgoingValues: [] destination: B38 -> B40  <||@
  Comment 1087 block B40 null  <||@
  Comment 1087 908 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1087 910 NOP  <||@
  Comment 1088 912 NOP  <||@
  Comment 1089 914 NOP  <||@
  Comment 1090 916 NOP  <||@
  Comment 1091 918 NOP  <||@
  Comment 1092 920 NOP  <||@
  Comment 1093 922 NOP  <||@
  Comment 1094 924 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1101 926 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1108 928 DEOPT info [bci:0]  <||@
  Comment 1108 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1113 [stack:0, stack:8, stack:24]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3                  |4                  |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |r10|DWORD  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1121 block B37 null  <||@
  Comment 1121 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1121 848 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1126 850 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 852 r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1133 854 NOP  <||@
  Comment 1134 856 NOP  <||@
  Comment 1135 858 NOP  <||@
  Comment 1136 860 r8|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 1143 862 r11|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 1149 864 JUMP ~outgoingValues: [] destination: B37 -> B40  <||@
  Comment 1151 block B32 null  <||@
  Comment 1151 736 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1151 738 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1155 740 r10|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1158 742 NOP  <||@
  Comment 1159 744 NOP  <||@
  Comment 1160 746 NOP  <||@
  Comment 1161 748 NOP  <||@
  Comment 1162 750 NOP  <||@
  Comment 1163 752 NOP  <||@
  Comment 1164 754 NOP  <||@
  Comment 1165 756 MOV x: [r15|QWORD + 1156] y: -88339 size: DWORD  <||@
  Comment 1176 758 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1187 760 DEOPT info [bci:3]  <||@
  Comment 1187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1192 [stack:0, stack:8, stack:24]at java.net.URI$Parser.scan(URI.java:3077) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1  |2          |3                  |4                  |5               |6 
     locals:  |stack:56|QWORD[.]  |-  |r10|DWORD  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |stack:40|DWORD  |-   <||@
  Comment 1200 block B39 null  <||@
  Comment 1200 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1200 888 stack:72|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1205 890 stack:80|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1209 892 r10|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1212 894 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1217 896 NOP  <||@
  Comment 1218 898 NOP  <||@
  Comment 1219 900 NOP  <||@
  Comment 1220 902 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1227 904 r11|DWORD = MOVE input: int[-54044|0xffffffffffff2ce4]  <||@
  Comment 1233 906 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 1238 block B36 null  <||@
  Comment 1238 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1238 832 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1243 834 NOP  <||@
  Comment 1244 836 NOP  <||@
  Comment 1245 838 NOP  <||@
  Comment 1246 840 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1253 842 r11|DWORD = MOVE input: int[-85267|0xfffffffffffeb2ed]  <||@
  Comment 1259 844 JUMP ~outgoingValues: [] destination: B36 -> B40  <||@
  Comment 1269 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1294 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1322 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1327 [rsi:0, r11:0, r13:0, r14:0]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4             |5  |6 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1357 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1362 [r10:0, r11:0, r13:0, r14:0, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3             |4             |5  |6 
     locals:  |r11|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1397 [r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1427 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1432 [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1467 [rdx:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1497 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1502 [rdx:0, r9:0, r10:0, r13:0, r14:0, stack:24, stack:36]at java.net.URI$Parser.scan(URI.java:3076) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2          |3             |4             |5  |6 
     locals:  |stack:56|QWORD[.]  |rbx|DWORD  |rbp|DWORD  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 1510 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1510 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1516 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1516 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
