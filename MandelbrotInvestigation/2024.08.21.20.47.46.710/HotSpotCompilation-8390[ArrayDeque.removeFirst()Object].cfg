begin_compilation
  name " HotSpotCompilation-8390[java.util.ArrayDeque.removeFirst()]"
  method "HotSpotCompilation-8390[java.util.ArrayDeque.removeFirst()]"
  date 1724269759136
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a104 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a104  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.ArrayDeque
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v112 v111 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.elements
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 1]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
lastLocationAccess: - 
=== Succesors ===
next: i105 
=== Usages ===
a38 v113 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v111 lastLocationAccess: - #next: i105  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ArrayDeque.removeFirst()>
localsSize: 2
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 359
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v116 i105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a104 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-11019|0xffffffffffffd4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v113 
lastLocationAccess: - 
=== Succesors ===
next: i106 
=== Usages ===
v30 v59 
=== Predecessor ===
a104 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v113 lastLocationAccess: - #next: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i106 v69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 7]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v112 
lastLocationAccess: - 
=== Succesors ===
next: v87 
=== Usages ===
j70 v59 i29 
=== Predecessor ===
i105 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v112 lastLocationAccess: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 23]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i105 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i106 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i106 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v84 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a107 
=== Usages ===
v67 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a107  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 1]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a104 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a104  <|@  <|@
f <@~|@floating>@ <|@
tid j70 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i106 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a38 
index: j70 
=== Succesors ===
=== Usages ===
a107 v67 v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: j70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v114 
lastLocationAccess: - 
=== Succesors ===
next: v17 
=== Usages ===
a57 v71 v115 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v114 lastLocationAccess: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:379) [bci: 17]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a107 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a107  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:379) [bci: 17]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
profileData: PROFILED designatedSuccessorProbability: 1.721713455463324E-4
stamp: void
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
a107 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v16 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 20]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 23]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
precise: true
stamp: void
=== Inputs ===
address: v114 
value: - 
stateBefore: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v114 value: - stateBefore: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid a73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 23]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 23]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v84 
address: v114 
lastLocationAccess: - 
value: a73 
stateAfter: - 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v84 address: v114 lastLocationAccess: - value: a73 stateAfter: - #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 0]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 0]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: i32
=== Inputs ===
x: i106 
y: i28 
=== Succesors ===
=== Usages ===
v30 i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i106 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i105 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 8]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: i32
=== Inputs ===
condition: v30 
trueValue: i29 
falseValue: i31 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v30 trueValue: i29 falseValue: i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque.head
location: ArrayDeque.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 31]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v112 
lastLocationAccess: - 
value: i32 
stateAfter: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v112 lastLocationAccess: - value: i32 stateAfter: - #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v23 v25 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v23 v25 #next: v110  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ArrayDeque.removeFirst()>
localsSize: 2
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 359
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a107 
=== Succesors ===
=== Usages ===
v9 ?26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a107  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 34
bytecode: aload_3
code: ResolvedJavaMethodBytecode<ArrayDeque.pollFirst()>
localsSize: 4
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 383
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?33 
values: - - - a57 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?33 values: - - - a57  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a107 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?26 
object: v115 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?26 object: v115 #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.removeFirst(ArrayDeque.java:362) [bci: 18]
stamp: void
=== Inputs ===
memoryMap: - 
result: a57 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 48
mayConvertToGuard: true
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a104 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a104  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.ArrayDeque
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v112 v111 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a104 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.elements
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 1]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
lastLocationAccess: - 
=== Succesors ===
next: i105 
=== Usages ===
a38 v113 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v111 lastLocationAccess: - #next: i105  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ArrayDeque.removeFirst()>
localsSize: 2
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 359
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v116 i105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a104 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i105 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-11019|0xffffffffffffd4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v113 
lastLocationAccess: - 
=== Succesors ===
next: i106 
=== Usages ===
v30 v59 
=== Predecessor ===
a104 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v113 lastLocationAccess: - #next: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i106 v69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 7]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v112 
lastLocationAccess: - 
=== Succesors ===
next: v87 
=== Usages ===
j70 v59 i29 
=== Predecessor ===
i105 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v112 lastLocationAccess: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 23]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i105 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i106 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i106 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v84 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a107 
=== Usages ===
v67 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a107  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 1]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a104 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a104  <|@  <|@
f <@~|@floating>@ <|@
tid j70 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i106 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
result [v4|QWORD[.] + v3|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a38 
index: j70 
=== Succesors ===
=== Usages ===
a107 v67 v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: j70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a107 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v114 
lastLocationAccess: - 
=== Succesors ===
next: v17 
=== Usages ===
a57 v71 v115 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v114 lastLocationAccess: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:379) [bci: 17]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a107 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a107  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:379) [bci: 17]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
profileData: PROFILED designatedSuccessorProbability: 1.721713455463324E-4
stamp: void
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
a107 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v16 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 20]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 23]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
precise: true
stamp: void
=== Inputs ===
address: v114 
value: - 
stateBefore: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v114 value: - stateBefore: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid a73 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 23]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:380) [bci: 23]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v84 
address: v114 
lastLocationAccess: - 
value: a73 
stateAfter: - 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v84 address: v114 lastLocationAccess: - value: a73 stateAfter: - #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 0]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 0]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: i32
=== Inputs ===
x: i106 
y: i28 
=== Succesors ===
=== Usages ===
v30 i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i106 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i105 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 8]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 28]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: i32
=== Inputs ===
condition: v30 
trueValue: i29 
falseValue: i31 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v30 trueValue: i29 falseValue: i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque.head
location: ArrayDeque.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:381) [bci: 31]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v112 
lastLocationAccess: - 
value: i32 
stateAfter: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v112 lastLocationAccess: - value: i32 stateAfter: - #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v23 v25 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v23 v25 #next: v110  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ArrayDeque.removeFirst()>
localsSize: 2
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 359
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a107 
=== Succesors ===
=== Usages ===
v9 ?26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a107  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 34
bytecode: aload_3
code: ResolvedJavaMethodBytecode<ArrayDeque.pollFirst()>
localsSize: 4
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 383
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?33 
values: - - - a57 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?33 values: - - - a57  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result [v5|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a107 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?26 
object: v115 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?26 object: v115 #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.removeFirst(ArrayDeque.java:362) [bci: 18]
stamp: void
=== Inputs ===
memoryMap: - 
result: a57 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 48
mayConvertToGuard: true
nodeSourcePosition: at java.util.ArrayDeque.elementAt(ArrayDeque.java:258) [bci: 2]
at java.util.ArrayDeque.pollFirst(ArrayDeque.java:378) [bci: 12]
at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v10|q [0, 1[[144, 146[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 26[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [26, 112[[158, 179[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [28, 52[28 MustHaveRegister 30 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [30, 108[30 MustHaveRegister 34 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [32, 106[32 MustHaveRegister 34 ShouldHaveRegister 54 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v1|d [52, 104[52 MustHaveRegister 54 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [54, 142[[148, 158[54 MustHaveRegister 56 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[v7|q]" v7|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[v8|d]" v8|d v3|d [106, 111[106 MustHaveRegister 108 ShouldHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v5|d [140, 144[140 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v10|q [0, 1[[144, 146[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 26[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 112[[158, 179[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [28, 52[28 MustHaveRegister 30 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [30, 108[30 MustHaveRegister 34 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 106[32 MustHaveRegister 34 ShouldHaveRegister 54 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v1|d [52, 104[52 MustHaveRegister 54 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [54, 142[[148, 158[54 MustHaveRegister 56 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rcx|q]" v7|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r11|d]" v8|d v3|d [106, 111[106 MustHaveRegister 108 ShouldHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v5|d [140, 144[140 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v10|q [0, 1[[144, 146[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 26[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 112[[158, 179[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [28, 52[28 MustHaveRegister 30 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [30, 108[30 MustHaveRegister 34 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 106[32 MustHaveRegister 34 ShouldHaveRegister 54 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v1|d [52, 104[52 MustHaveRegister 54 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [54, 142[[148, 158[54 MustHaveRegister 56 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rcx|q]" v7|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r11|d]" v8|d v3|d [106, 111[106 MustHaveRegister 108 ShouldHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v5|d [140, 144[140 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v10|q [0, 1[[144, 146[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 26[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 112[[158, 179[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [28, 52[28 MustHaveRegister 30 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [30, 108[30 MustHaveRegister 34 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 106[32 MustHaveRegister 34 ShouldHaveRegister 54 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v1|d [52, 104[52 MustHaveRegister 54 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [54, 142[[148, 158[54 MustHaveRegister 56 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rcx|q]" v7|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r11|d]" v8|d v3|d [106, 111[106 MustHaveRegister 108 ShouldHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v5|d [140, 144[140 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction v5|DWORD[_] = MOV input: [v4|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|QWORD[.] + v3|DWORD * 4 + 16], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD[.] + v3|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction v8|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v9|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - v10|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607180868018402115
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943 <|@ <|@
      nr  104  <|@ instruction MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34]
locals: - - - rax|QWORD[.] 
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1] <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4550484025513069277
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #20         // pollFirst:()java.lang.Object
     4: astore_1      
     5: aload_1       
     6: ifnonnull     17
     9: new           #97         // java.util.NoSuchElementException
    12: dup           
    13: invokespecial #21         // java.util.NoSuchElementException.<init>:()void
    16: athrow        
    17: aload_1       
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f850a0100009090909090909090909048896c24108b4614448b14c50c000000448b5e0c453bd30f86b90000009090909090909048c1e003468b4498104585c00f849b00000090909090909090909090909090909090909090909041807f40000f842f000000428b4c981048c1e1034885c90f841d0000004d8b4f284983f9000f849a0000004983e9084d894f284d034f3849890942c74498100000000041ffc3453bd3b800000000410f4fc389460c9090909090909090909090418bc048c1e003428504c500000000488b6c24104883c418493ba7500400000f874f000000c3909090ebca9090909090909041c78784040000e5cfffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e9e7fefffff448890c24e800000000e967fffffff4488d0d9dffffff49898f68040000e98afefffff441c78784040000f5d4ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD  <||@
  Comment 73 28 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 76 30 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 76 [rax:0, rsi:0]at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 32 r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 88 34 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD  <||@
  Comment 97 block B1 null  <||@
  Comment 97 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 97 38 NOP  <||@
  Comment 98 40 NOP  <||@
  Comment 99 42 NOP  <||@
  Comment 100 44 NOP  <||@
  Comment 101 46 NOP  <||@
  Comment 102 48 NOP  <||@
  Comment 103 50 NOP  <||@
  Comment 104 52 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3  <||@
  Comment 108 54 r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 113 56 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 122 block B3 null  <||@
  Comment 122 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 122 60 NOP  <||@
  Comment 123 62 NOP  <||@
  Comment 124 64 NOP  <||@
  Comment 125 66 NOP  <||@
  Comment 126 68 NOP  <||@
  Comment 127 70 NOP  <||@
  Comment 128 72 NOP  <||@
  Comment 129 74 NOP  <||@
  Comment 130 76 NOP  <||@
  Comment 131 78 NOP  <||@
  Comment 132 80 NOP  <||@
  Comment 133 82 NOP  <||@
  Comment 134 84 NOP  <||@
  Comment 135 86 NOP  <||@
  Comment 136 88 NOP  <||@
  Comment 137 90 NOP  <||@
  Comment 138 92 NOP  <||@
  Comment 139 94 NOP  <||@
  Comment 140 96 NOP  <||@
  Comment 141 98 NOP  <||@
  Comment 142 100 NOP  <||@
  Comment 143 102 AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943  <||@
  Comment 201 104 MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 210 106 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 213 108 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 216 110 rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: >  <||@
  Comment 225 112 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 228 114 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 228 block B4 null  <||@
  Comment 228 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 228 118 NOP  <||@
  Comment 229 120 NOP  <||@
  Comment 230 122 NOP  <||@
  Comment 231 124 NOP  <||@
  Comment 232 126 NOP  <||@
  Comment 233 128 NOP  <||@
  Comment 234 130 NOP  <||@
  Comment 235 132 NOP  <||@
  Comment 236 134 NOP  <||@
  Comment 237 136 NOP  <||@
  Comment 238 138 NOP  <||@
  Comment 239 140 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3  <||@
  Comment 246 142 NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1]  <||@
  Comment 246 [rax:0]at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34, duringCall: false, rethrow: false]
              |0  |1  |2  |3            
     locals:  |-  |-  |-  |rax|QWORD[.] 
  at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 246 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 254 146 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 263 POLL_RETURN_FAR  <||@
  Comment 277 block B2 null  <||@
  Comment 277 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 277 150 NOP  <||@
  Comment 278 152 NOP  <||@
  Comment 279 154 NOP  <||@
  Comment 280 156 JUMP ~outgoingValues: [] destination: B2 -> B4  <||@
  Comment 282 block B5 null  <||@
  Comment 282 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 282 160 NOP  <||@
  Comment 283 162 NOP  <||@
  Comment 284 164 NOP  <||@
  Comment 285 166 NOP  <||@
  Comment 286 168 NOP  <||@
  Comment 287 170 NOP  <||@
  Comment 288 172 NOP  <||@
  Comment 289 174 MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD  <||@
  Comment 300 176 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 311 178 DEOPT info [bci:0]  <||@
  Comment 311 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 316 [rsi:0]at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 329 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 344 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 369 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 397 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 402 [rax:0, rsi:0]at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 410 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 410 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 416 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 416 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8390[java.util.ArrayDeque.removeFirst()]"
  method "HotSpotCompilation-8390[java.util.ArrayDeque.removeFirst()]"
  date 1724269759226
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af2f980 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e35685fe66669089842400c0feff4883ec189041817f20000000000f850a0100009090909090909090909048896c24108b4614448b14c50c000000448b5e0c453bd30f86b90000009090909090909048c1e003468b4498104585c00f849b00000090909090909090909090909090909090909090909041807f40000f842f000000428b4c981048c1e1034885c90f841d0000004d8b4f284983f9000f849a0000004983e9084d894f284d034f3849890942c74498100000000041ffc3453bd3b800000000410f4fc389460c9090909090909090909090418bc048c1e003428504c500000000488b6c24104883c418493ba7500400000f874f000000c3909090ebca9090909090909041c78784040000e5cfffff49c7879004000000000000e8beb685fe0f1f84000000000048896c2410e852b783fee9e7fefffff448890c24e8238799fee967fffffff4488d0d9dffffff49898f68040000e90ac585fef441c78784040000f5d4ffff49c7879004000000000000e868b685fe0f1f840000000000e8e15799fef4e8fbb385fef4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@603fc385 slotKind: QWORD  <||@
  Comment 73 28 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 76 30 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 76 [rax:0, rsi:0]at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 32 r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 88 34 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B5 size: DWORD  <||@
  Comment 97 block B1 null  <||@
  Comment 97 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 97 38 NOP  <||@
  Comment 98 40 NOP  <||@
  Comment 99 42 NOP  <||@
  Comment 100 44 NOP  <||@
  Comment 101 46 NOP  <||@
  Comment 102 48 NOP  <||@
  Comment 103 50 NOP  <||@
  Comment 104 52 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3  <||@
  Comment 108 54 r8|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 113 56 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 1.721713455463324E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 122 block B3 null  <||@
  Comment 122 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 122 60 NOP  <||@
  Comment 123 62 NOP  <||@
  Comment 124 64 NOP  <||@
  Comment 125 66 NOP  <||@
  Comment 126 68 NOP  <||@
  Comment 127 70 NOP  <||@
  Comment 128 72 NOP  <||@
  Comment 129 74 NOP  <||@
  Comment 130 76 NOP  <||@
  Comment 131 78 NOP  <||@
  Comment 132 80 NOP  <||@
  Comment 133 82 NOP  <||@
  Comment 134 84 NOP  <||@
  Comment 135 86 NOP  <||@
  Comment 136 88 NOP  <||@
  Comment 137 90 NOP  <||@
  Comment 138 92 NOP  <||@
  Comment 139 94 NOP  <||@
  Comment 140 96 NOP  <||@
  Comment 141 98 NOP  <||@
  Comment 142 100 NOP  <||@
  Comment 143 102 AMD64G1PREWRITEBARRIER (~address: [rax|QWORD[.] + r11|DWORD * 4 + 16], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@97ea943  <||@
  Comment 201 104 MOV x: [rax|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 210 106 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 213 108 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 216 110 rax|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r11|DWORD) condition: >  <||@
  Comment 225 112 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 228 114 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 228 block B4 null  <||@
  Comment 228 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 228 118 NOP  <||@
  Comment 229 120 NOP  <||@
  Comment 230 122 NOP  <||@
  Comment 231 124 NOP  <||@
  Comment 232 126 NOP  <||@
  Comment 233 128 NOP  <||@
  Comment 234 130 NOP  <||@
  Comment 235 132 NOP  <||@
  Comment 236 134 NOP  <||@
  Comment 237 136 NOP  <||@
  Comment 238 138 NOP  <||@
  Comment 239 140 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@595c5ccc encoding: base: 0 shift: 3  <||@
  Comment 246 142 NULLCHECK address: [r8|DWORD[_] * 8] state [bci:34, 1]  <||@
  Comment 246 [rax:0]at java.util.ArrayDeque.pollFirst(ArrayDeque.java:383) [bci: 34, duringCall: false, rethrow: false]
              |0  |1  |2  |3            
     locals:  |-  |-  |-  |rax|QWORD[.] 
  at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 246 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 254 146 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 263 POLL_RETURN_FAR  <||@
  Comment 277 block B2 null  <||@
  Comment 277 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 277 150 NOP  <||@
  Comment 278 152 NOP  <||@
  Comment 279 154 NOP  <||@
  Comment 280 156 JUMP ~outgoingValues: [] destination: B2 -> B4  <||@
  Comment 282 block B5 null  <||@
  Comment 282 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 282 160 NOP  <||@
  Comment 283 162 NOP  <||@
  Comment 284 164 NOP  <||@
  Comment 285 166 NOP  <||@
  Comment 286 168 NOP  <||@
  Comment 287 170 NOP  <||@
  Comment 288 172 NOP  <||@
  Comment 289 174 MOV x: [r15|QWORD + 1156] y: -12315 size: DWORD  <||@
  Comment 300 176 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 311 178 DEOPT info [bci:0]  <||@
  Comment 311 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 316 [rsi:0]at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 329 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 344 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 369 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 397 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 402 [rax:0, rsi:0]at java.util.ArrayDeque.removeFirst(ArrayDeque.java:359) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 410 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 410 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 416 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 416 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
