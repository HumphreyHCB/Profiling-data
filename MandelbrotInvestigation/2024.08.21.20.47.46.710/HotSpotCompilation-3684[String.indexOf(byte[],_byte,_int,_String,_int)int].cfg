begin_compilation
  name " HotSpotCompilation-3684[java.lang.String.indexOf(byte[], byte, int, String, int)]"
  method "HotSpotCompilation-3684[java.lang.String.indexOf(byte[], byte, int, String, int)]"
  date 1724269726496
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a216 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a216  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i101 i113 i89 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v30 v28 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v41 j219 i187 i15 i89 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v224 v222 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j7 v51 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload
code: ResolvedJavaMethodBytecode<String.indexOf(byte[], byte, int, String, int)>
localsSize: 8
locksSize: 0
sourceFile: String.java
sourceLine: 2683
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 a4 i5 
=== Succesors ===
=== Usages ===
v194 a216 i218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 a4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a216 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-16395|0xffffffffffffbff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v222 
lastLocationAccess: - 
=== Succesors ===
next: i217 
=== Usages ===
a68 v223 v225 v226 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v222 lastLocationAccess: - #next: i217  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v224 
lastLocationAccess: - 
=== Succesors ===
next: i218 
=== Usages ===
i78 
=== Predecessor ===
a216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v224 lastLocationAccess: - #next: i218  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a216 
=== Succesors ===
=== Usages ===
i218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17931|0xffffffffffffb9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v223 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
i57 
=== Predecessor ===
i217 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v223 lastLocationAccess: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2683) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 v22 v30 v51 v102 v114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2214) [bci: 2]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i8 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2214) [bci: 2]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
i218 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2214) [bci: 2]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: -42771
stableDimension: 0
stamp: i32 [-42771]
stampKind: i32
value: int[-42771|0xffffffffffff58ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 36]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2034) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 41]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 40]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j7 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.String.indexOf(String.java:2683) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i5 
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i5  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2034) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 41]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v51 
trueValue: j46 
falseValue: j7 
=== Succesors ===
=== Usages ===
v221 j50 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v51 trueValue: j46 falseValue: j7  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v221 j50 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.min(Math.java:2129) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 44]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j48 
y: j219 
=== Succesors ===
=== Usages ===
j50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j48 y: j219  <|@  <|@
f <@~|@floating>@ <|@
tid j50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2129) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 44]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v221 
trueValue: j48 
falseValue: j219 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v221 trueValue: j48 falseValue: j219  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 47]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
resultBits: 32
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: j50 
=== Succesors ===
=== Usages ===
i89 i100 i15 v94 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j50  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 21]
stamp: i32
=== Inputs ===
x: i3 
y: i44 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i217 
=== Succesors ===
=== Usages ===
i57 v28 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i217  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i218 
y: i78 
=== Succesors ===
=== Usages ===
i187 i113 v16 v22 v106 v85 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i218 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i57 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i15 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 25]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 i136 i136 i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.025878803406172435
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v18 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 26]
stamp: void
=== Inputs ===
memoryMap: - 
result: i20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i8 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid j65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: -43795
stableDimension: 0
stamp: i32 [-43795]
stampKind: i32
value: int[-43795|0xffffffffffff54ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2692) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i78 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i78  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2696) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:71) [bci: 2] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 58] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i79 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a216 
=== Succesors ===
=== Usages ===
i126 i127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a216  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i113 i89 i101 j112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 69] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 72] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 91] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v225 
lastLocationAccess: - 
=== Succesors ===
next: i89 
=== Usages ===
i130 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v225 lastLocationAccess: - #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 94] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i126 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 97] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j75 
arrayLength: i3 
fromIndex: i44 
searchValues: i130 
=== Succesors ===
next: v137 
=== Usages ===
i136 
=== Predecessor ===
i126 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j75 arrayLength: i3 fromIndex: i44 searchValues: i130 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
i89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 101] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i57 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 103] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 i188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i187 
y: i90 
=== Succesors ===
=== Usages ===
v94 i101 v120 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 119] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i188 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i44 y: i188  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 130] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v94 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v94 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 133] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i127 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 135] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v225 
lastLocationAccess: - 
=== Succesors ===
next: i129 
=== Usages ===
i131 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v225 lastLocationAccess: - #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a216 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:85) [bci: 142] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v226 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
i133 
=== Predecessor ===
i127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v226 lastLocationAccess: - #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:89) [bci: 172] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i129 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:88) [bci: 167] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 210] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i90 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
i129 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v99 
values: i44 i119 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v99 values: i44 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v98 
=== Succesors ===
next: i101 
=== Usages ===
i100 v103 v107 v115 v121 v122 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v98 #next: i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 175] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: FindTwoConsecutive
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j75 
arrayLength: i188 
fromIndex: i100 
searchValues: i131 i133 
=== Succesors ===
next: v105 
=== Usages ===
v102 i136 j220 i136 i119 
=== Predecessor ===
v99 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j75 arrayLength: i188 fromIndex: i100 searchValues: i131 i133 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 185] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i8 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 196] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
i101 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:93) [bci: 201] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 221] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v107 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 227] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i113 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i113  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i101 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i101  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 15]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 234] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j220 
y: j75 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j220 y: j75  <|@  <|@
f <@~|@floating>@ <|@
tid a68 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a216 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode.regionEquals(Object, long, Object, long, int, JavaKind, Stride, Stride) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 252] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 1] bits:0...0x
strideA: S1
strideB: S1
=== Inputs ===
lastLocationAccess: - 
arrayA: a1 
offsetA: j112 
arrayB: a68 
offsetB: j75 
length: i57 
dynamicStrides: - 
=== Succesors ===
next: v118 
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@ArrayRegionEquals|@jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode>@ lastLocationAccess: - arrayA: a1 offsetA: j112 arrayB: a68 offsetB: j75 length: i57 dynamicStrides: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i8 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i113 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
i113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v117 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i32
=== Inputs ===
x: i101 
y: i79 
=== Succesors ===
=== Usages ===
i100 v120 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i101 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 274] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i188 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i188  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 285] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v123 #falseSuccessor: v122  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
loopBegin: v99 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:99) [bci: 261] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:95) [bci: 224] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:91) [bci: 199] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v134 
values: i89 i20 i101 i101 i20 i20 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v134 values: i89 i20 i101 i101 i20 i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v137 v138 v139 v140 v141 v143 
=== Succesors ===
next: v39 
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v137 v138 v139 v140 v141 v143 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 82]
stamp: void
=== Inputs ===
memoryMap: - 
result: i136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid j207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: -45843
stableDimension: 0
stamp: i32 [-45843]
stampKind: i32
value: int[-45843|0xffffffffffff4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: -44819
stableDimension: 0
stamp: i32 [-44819]
stampKind: i32
value: int[-44819|0xffffffffffff50ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i32 [-45843 - -42771] bits:1...1010xxx0011101101
valueDescription: i32
=== Inputs ===
merge: v189 
values: i198 i201 i203 i206 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v189 values: i198 i201 i203 i206  <|@  <|@
f <@~|@floating>@ <|@
tid j193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i64 [20 - 1940] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v189 
values: j199 j65 j204 j207 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v189 values: j199 j65 j204 j207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v197 v200 v202 v205 
=== Succesors ===
next: v194 
=== Usages ===
i192 j193 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v197 v200 v202 v205 #next: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i192 
speculation: j193 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i192 speculation: j193  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a216 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a216  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i101 i113 i89 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v30 v28 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v41 j219 i187 i15 i89 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v224 v222 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j7 v51 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload
code: ResolvedJavaMethodBytecode<String.indexOf(byte[], byte, int, String, int)>
localsSize: 8
locksSize: 0
sourceFile: String.java
sourceLine: 2683
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 a4 i5 
=== Succesors ===
=== Usages ===
v194 a216 i218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 a4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
result [v3|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a216 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-16395|0xffffffffffffbff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v222 
lastLocationAccess: - 
=== Succesors ===
next: i217 
=== Usages ===
a68 v223 v225 v226 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v222 lastLocationAccess: - #next: i217  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i217 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v224 
lastLocationAccess: - 
=== Succesors ===
next: i218 
=== Usages ===
i78 
=== Predecessor ===
a216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v224 lastLocationAccess: - #next: i218  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a216 
=== Succesors ===
=== Usages ===
i218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i218 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17931|0xffffffffffffb9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v223 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
i57 
=== Predecessor ===
i217 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v223 lastLocationAccess: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2683) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 v22 v30 v51 v102 v114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2214) [bci: 2]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i8 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2214) [bci: 2]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
i218 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2214) [bci: 2]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[-42771|0xffffffffffff58ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: -42771
stableDimension: 0
stamp: i32 [-42771]
stampKind: i32
value: int[-42771|0xffffffffffff58ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 36]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2034) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 41]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 40]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j7 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.String.indexOf(String.java:2683) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i5 
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i5  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2034) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 41]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v51 
trueValue: j46 
falseValue: j7 
=== Succesors ===
=== Usages ===
v221 j50 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v51 trueValue: j46 falseValue: j7  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v221 j50 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.min(Math.java:2129) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 44]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j48 
y: j219 
=== Succesors ===
=== Usages ===
j50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j48 y: j219  <|@  <|@
f <@~|@floating>@ <|@
tid j50 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2129) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 44]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v221 
trueValue: j48 
falseValue: j219 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v221 trueValue: j48 falseValue: j219  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 47]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
resultBits: 32
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: j50 
=== Succesors ===
=== Usages ===
i89 i100 i15 v94 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j50  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 21]
stamp: i32
=== Inputs ===
x: i3 
y: i44 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i217 
=== Succesors ===
=== Usages ===
i57 v28 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i217  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i218 
y: i78 
=== Succesors ===
=== Usages ===
i187 i113 v16 v22 v106 v85 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i218 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i57 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i15 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 25]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 i136 i136 i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 22]
profileData: PROFILED designatedSuccessorProbability: 0.025878803406172435
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v18 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 26]
stamp: void
=== Inputs ===
memoryMap: - 
result: i20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i8 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid j65 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result int[-43795|0xffffffffffff54ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: -43795
stableDimension: 0
stamp: i32 [-43795]
stampKind: i32
value: int[-43795|0xffffffffffff54ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2692) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i78 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i78  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2696) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:71) [bci: 2] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 58] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i79 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
result [v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a216 
=== Succesors ===
=== Usages ===
i126 i127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a216  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i113 i89 i101 j112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 69] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 72] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 91] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v225 
lastLocationAccess: - 
=== Succesors ===
next: i89 
=== Usages ===
i130 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v225 lastLocationAccess: - #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 94] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i126 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 97] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j75 
arrayLength: i3 
fromIndex: i44 
searchValues: i130 
=== Succesors ===
next: v137 
=== Usages ===
i136 
=== Predecessor ===
i126 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j75 arrayLength: i3 fromIndex: i44 searchValues: i130 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
i89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 101] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i57 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 103] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 i188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i187 
y: i90 
=== Succesors ===
=== Usages ===
v94 i101 v120 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 119] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i188 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i44 y: i188  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 130] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v94 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v94 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 133] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i127 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 135] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v225 
lastLocationAccess: - 
=== Succesors ===
next: i129 
=== Usages ===
i131 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v225 lastLocationAccess: - #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
result [v5|DWORD[_] * 8 + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a216 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:85) [bci: 142] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v226 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
i133 
=== Predecessor ===
i127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v226 lastLocationAccess: - #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:89) [bci: 172] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i129 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:88) [bci: 167] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 210] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i90 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
i129 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i100 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v99 
values: i44 i119 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v99 values: i44 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v98 
=== Succesors ===
next: i101 
=== Usages ===
i100 v103 v107 v115 v121 v122 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v98 #next: i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i101 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 175] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: FindTwoConsecutive
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j75 
arrayLength: i188 
fromIndex: i100 
searchValues: i131 i133 
=== Succesors ===
next: v105 
=== Usages ===
v102 i136 j220 i136 i119 
=== Predecessor ===
v99 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j75 arrayLength: i188 fromIndex: i100 searchValues: i131 i133 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 185] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i8 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 196] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
i101 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:93) [bci: 201] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 221] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v107 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 227] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i113 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i113  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i101 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i101  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 15]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 234] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j220 
y: j75 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j220 y: j75  <|@  <|@
f <@~|@floating>@ <|@
tid a68 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a216 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i113 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode.regionEquals(Object, long, Object, long, int, JavaKind, Stride, Stride) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 252] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 1] bits:0...0x
strideA: S1
strideB: S1
=== Inputs ===
lastLocationAccess: - 
arrayA: a1 
offsetA: j112 
arrayB: a68 
offsetB: j75 
length: i57 
dynamicStrides: - 
=== Succesors ===
next: v118 
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@ArrayRegionEquals|@jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode>@ lastLocationAccess: - arrayA: a1 offsetA: j112 arrayB: a68 offsetB: j75 length: i57 dynamicStrides: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i8 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i113 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
i113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v117 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i32
=== Inputs ===
x: i101 
y: i79 
=== Succesors ===
=== Usages ===
i100 v120 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i101 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 274] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i188 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i188  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 285] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v123 #falseSuccessor: v122  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
loopBegin: v99 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:99) [bci: 261] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:95) [bci: 224] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:91) [bci: 199] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i136 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v134 
values: i89 i20 i101 i101 i20 i20 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v134 values: i89 i20 i101 i101 i20 i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v137 v138 v139 v140 v141 v143 
=== Succesors ===
next: v39 
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v137 v138 v139 v140 v141 v143 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 82]
stamp: void
=== Inputs ===
memoryMap: - 
result: i136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid j207 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result int[-45843|0xffffffffffff4ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: -45843
stableDimension: 0
stamp: i32 [-45843]
stampKind: i32
value: int[-45843|0xffffffffffff4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result int[-44819|0xffffffffffff50ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
rawvalue: -44819
stableDimension: 0
stamp: i32 [-44819]
stampKind: i32
value: int[-44819|0xffffffffffff50ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i192 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i32 [-45843 - -42771] bits:1...1010xxx0011101101
valueDescription: i32
=== Inputs ===
merge: v189 
values: i198 i201 i203 i206 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v189 values: i198 i201 i203 i206  <|@  <|@
f <@~|@floating>@ <|@
tid j193 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: i64 [20 - 1940] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v189 
values: j199 j65 j204 j207 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v189 values: j199 j65 j204 j207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v197 v200 v202 v205 
=== Succesors ===
next: v194 
=== Usages ===
i192 j193 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v197 v200 v202 v205 #next: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2684) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i192 
speculation: j193 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i192 speculation: j193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  198  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  240  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr  298  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  312  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  382  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  436  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  478  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  520  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  198  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  240  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr  298  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  312  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  382  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  436  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  478  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  520  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v29|d [0, 1[[238, 240[[310, 312[[380, 382[[454, 456[[476, 478[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v6|d [0, 38[[102, 105[[230, 239[[304, 311[[374, 381[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v25|q [0, 36[[228, 239[[302, 311[[372, 381[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 34[[226, 239[[300, 311[[370, 381[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v21|d [0, 1[[236, 239[[310, 311[[380, 381[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v22|d [0, 40[[232, 239[[306, 310[[376, 380[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v20|d [0, 42[[234, 238[[308, 310[[378, 380[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[238, 239[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [34, 370[[480, 541[34 MustHaveRegister 226 ShouldHaveRegister 300 ShouldHaveRegister 341 LiveAtLoopEnd 370 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [36, 144[[480, 541[36 MustHaveRegister 130 ShouldHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [38, 174[[342, 374[[480, 541[38 MustHaveRegister 50 MustHaveRegister 92 ShouldHaveRegister 100 MustHaveRegister 174 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|d [40, 144[[480, 541[40 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|d [42, 144[[480, 541[42 MustHaveRegister 84 ShouldHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [44, 368[44 MustHaveRegister 48 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 298 MustHaveRegister 341 LiveAtLoopEnd 368 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [46, 130[46 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [48, 104[48 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [84, 90[84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [90, 97[90 MustHaveRegister 94 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [88, 91[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [92, 96[92 MustHaveRegister 94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|q [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v22|d [98, 197[[342, 376[98 MustHaveRegister 100 ShouldHaveRegister 178 ShouldHaveRegister 196 ShouldHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v2|d [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v7|d [104, 342[104 MustHaveRegister 106 MustHaveRegister 118 MustHaveRegister 154 ShouldHaveRegister 174 ShouldHaveRegister 254 ShouldHaveRegister 308 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [368, 378[368 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d rax|d [382, 385[382 MustHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v2|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [176, 342[176 MustHaveRegister 178 MustHaveRegister 230 ShouldHaveRegister 330 MustHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [192, 342[192 MustHaveRegister 234 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [194, 342[194 MustHaveRegister 236 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v13|d [198, 232[232 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d rax|d [240, 328[[406, 415[[416, 425[240 MustHaveRegister 242 MustHaveRegister 294 ShouldHaveRegister 328 ShouldHaveRegister 414 ShouldHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v23|d [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [296, 302[296 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v5|d [298, 304[298 MustHaveRegister 304 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d rax|d [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v23|d [328, 341[328 MustHaveRegister 330 ShouldHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v17|d [436, 454[454 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [520, 536[536 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [520, 538[538 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v29|d [0, 1[[238, 240[[310, 312[[380, 382[[454, 456[[476, 478[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v6|d [0, 38[[102, 105[[230, 239[[304, 311[[374, 381[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v25|q [0, 36[[228, 239[[302, 311[[372, 381[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 34[[226, 239[[300, 311[[370, 381[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v21|d [0, 1[[236, 239[[310, 311[[380, 381[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v22|d [0, 40[[232, 239[[306, 310[[376, 380[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v20|d [0, 42[[234, 238[[308, 310[[378, 380[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[238, 239[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [34, 309[34 MustHaveRegister 226 ShouldHaveRegister 300 ShouldHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [36, 144[[480, 541[36 MustHaveRegister 130 ShouldHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|- [38, 174[[342, 374[[480, 541[38 MustHaveRegister 50 MustHaveRegister 92 ShouldHaveRegister 100 MustHaveRegister 174 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|d [40, 144[[480, 541[40 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [42, 144[[480, 541[42 MustHaveRegister 84 ShouldHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [44, 368[44 MustHaveRegister 48 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 298 MustHaveRegister 341 LiveAtLoopEnd 368 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [46, 130[46 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [48, 104[48 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rcx|q]" v8|q -1 [84, 90[84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v8|q [90, 97[90 MustHaveRegister 94 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [88, 91[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [92, 96[92 MustHaveRegister 94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v22|d [98, 197[[342, 376[98 MustHaveRegister 100 ShouldHaveRegister 178 ShouldHaveRegister 196 ShouldHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d v2|d [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v7|d [104, 342[104 MustHaveRegister 106 MustHaveRegister 118 MustHaveRegister 154 ShouldHaveRegister 174 ShouldHaveRegister 254 ShouldHaveRegister 308 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [368, 378[368 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|d [382, 385[382 MustHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v2|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbp|d]" v19|d -1 [176, 342[176 MustHaveRegister 178 MustHaveRegister 230 ShouldHaveRegister 330 MustHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d -1 [192, 342[192 MustHaveRegister 234 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [194, 237[194 MustHaveRegister 236 ShouldHaveRegister  "SpillInDominator"
  v22|d DWORD "[rax|d]" v22|d v13|d [198, 232[232 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d rax|d [240, 309[240 MustHaveRegister 242 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v23|d [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [296, 302[296 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v5|d [298, 304[298 MustHaveRegister 304 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|d [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d v23|d [328, 341[328 MustHaveRegister 330 ShouldHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v17|d [436, 454[454 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d -1 [520, 536[536 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rcx|q]" v31|q -1 [520, 538[538 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[vstack:0|d]" v21|d v21|d [237, 342[341 LiveAtLoopEnd  "SpillInDominator"
  v33|d DWORD "[r11|d]" v23|d v23|d [309, 328[[406, 415[[416, 425[328 ShouldHaveRegister 414 ShouldHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rbx|q]" v0|q v0|q [520, 541[ "SpillInDominator"
  v35|q QWORD "[vstack:1|q]" v0|q v0|q [309, 370[[480, 520[341 LiveAtLoopEnd 370 ShouldHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  198  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  240  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr  298  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  312  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  382  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  436  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  478  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  520  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v29|d [0, 1[[238, 240[[310, 312[[380, 382[[454, 456[[476, 478[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v6|d [0, 38[[102, 105[[230, 239[[304, 311[[374, 381[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v25|q [0, 36[[228, 239[[302, 311[[372, 381[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 34[[226, 239[[300, 311[[370, 381[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v21|d [0, 1[[236, 239[[310, 311[[380, 381[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v22|d [0, 40[[232, 239[[306, 310[[376, 380[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v20|d [0, 42[[234, 238[[308, 310[[378, 380[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[238, 239[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [34, 309[34 MustHaveRegister 226 ShouldHaveRegister 300 ShouldHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [36, 144[[480, 541[36 MustHaveRegister 130 ShouldHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|- [38, 174[[342, 374[[480, 541[38 MustHaveRegister 50 MustHaveRegister 92 ShouldHaveRegister 100 MustHaveRegister 174 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|d [40, 144[[480, 541[40 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [42, 144[[480, 541[42 MustHaveRegister 84 ShouldHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [44, 368[44 MustHaveRegister 48 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 298 MustHaveRegister 341 LiveAtLoopEnd 368 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [46, 130[46 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [48, 104[48 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rcx|q]" v8|q -1 [84, 90[84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v8|q [90, 97[90 MustHaveRegister 94 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [88, 91[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [92, 96[92 MustHaveRegister 94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v22|d [98, 197[[342, 376[98 MustHaveRegister 100 ShouldHaveRegister 178 ShouldHaveRegister 196 ShouldHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d v2|d [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v7|d [104, 342[104 MustHaveRegister 106 MustHaveRegister 118 MustHaveRegister 154 ShouldHaveRegister 174 ShouldHaveRegister 254 ShouldHaveRegister 308 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [368, 378[368 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|d [382, 385[382 MustHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v2|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbp|d]" v19|d -1 [176, 342[176 MustHaveRegister 178 MustHaveRegister 230 ShouldHaveRegister 330 MustHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d -1 [192, 342[192 MustHaveRegister 234 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [194, 237[194 MustHaveRegister 236 ShouldHaveRegister  "StoreAtDefinition"
  v22|d DWORD "[rax|d]" v22|d v13|d [198, 232[232 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d rax|d [240, 309[240 MustHaveRegister 242 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v23|d [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [296, 302[296 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v5|d [298, 304[298 MustHaveRegister 304 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|d [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d v23|d [328, 341[328 MustHaveRegister 330 ShouldHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v17|d [436, 454[454 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d -1 [520, 536[536 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rcx|q]" v31|q -1 [520, 538[538 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[vstack:0|d]" v21|d v21|d [237, 342[341 LiveAtLoopEnd  "StoreAtDefinition"
  v33|d DWORD "[r11|d]" v23|d v23|d [309, 328[[406, 415[[416, 425[328 ShouldHaveRegister 414 ShouldHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rbx|q]" v0|q v0|q [520, 541[ "StoreAtDefinition"
  v35|q QWORD "[vstack:1|q]" v0|q v0|q [309, 370[[480, 520[341 LiveAtLoopEnd 370 ShouldHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  198  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  240  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr  298  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  312  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  382  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  436  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  478  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [int[-43795|0xffffffffffff54ed], long[20|0x14]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[1300|0x514]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[1940|0x794]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[660|0x294]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  520  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v29|d [0, 1[[238, 240[[310, 312[[380, 382[[454, 456[[476, 478[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v6|d [0, 38[[102, 105[[230, 239[[304, 311[[374, 381[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v25|q [0, 36[[228, 239[[302, 311[[372, 381[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 34[[226, 239[[300, 311[[370, 381[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v21|d [0, 1[[236, 239[[310, 311[[380, 381[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v22|d [0, 40[[232, 239[[306, 310[[376, 380[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v20|d [0, 42[[234, 238[[308, 310[[378, 380[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[238, 239[[310, 311[[380, 381[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[238, 239[[380, 381[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[238, 239[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [34, 309[34 MustHaveRegister 226 ShouldHaveRegister 300 ShouldHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [36, 144[[480, 541[36 MustHaveRegister 130 ShouldHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|- [38, 174[[342, 374[[480, 541[38 MustHaveRegister 50 MustHaveRegister 92 ShouldHaveRegister 100 MustHaveRegister 174 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|d [40, 144[[480, 541[40 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [42, 144[[480, 541[42 MustHaveRegister 84 ShouldHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [44, 368[44 MustHaveRegister 48 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 298 MustHaveRegister 341 LiveAtLoopEnd 368 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [46, 130[46 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [48, 104[48 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rcx|q]" v8|q -1 [84, 90[84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v8|q [90, 97[90 MustHaveRegister 94 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [88, 91[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [92, 96[92 MustHaveRegister 94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v22|d [98, 197[[342, 376[98 MustHaveRegister 100 ShouldHaveRegister 178 ShouldHaveRegister 196 ShouldHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d v2|d [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v7|d [104, 342[104 MustHaveRegister 106 MustHaveRegister 118 MustHaveRegister 154 ShouldHaveRegister 174 ShouldHaveRegister 254 ShouldHaveRegister 308 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [368, 378[368 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|d [382, 385[382 MustHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v2|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbp|d]" v19|d -1 [176, 342[176 MustHaveRegister 178 MustHaveRegister 230 ShouldHaveRegister 330 MustHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d -1 [192, 342[192 MustHaveRegister 234 ShouldHaveRegister 341 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [194, 237[194 MustHaveRegister 236 ShouldHaveRegister  "StoreAtDefinition"
  v22|d DWORD "[rax|d]" v22|d v13|d [198, 232[232 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d rax|d [240, 309[240 MustHaveRegister 242 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v23|d [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [296, 302[296 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q v5|d [298, 304[298 MustHaveRegister 304 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|d [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d v23|d [328, 341[328 MustHaveRegister 330 ShouldHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v17|d [436, 454[454 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d -1 [520, 536[536 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rcx|q]" v31|q -1 [520, 538[538 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[vstack:0|d]" v21|d v21|d [237, 342[341 LiveAtLoopEnd  "StoreAtDefinition"
  v33|d DWORD "[r11|d]" v23|d v23|d [309, 328[[406, 415[[416, 425[328 ShouldHaveRegister 414 ShouldHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rbx|q]" v0|q v0|q [520, 541[ "StoreAtDefinition"
  v35|q QWORD "[vstack:1|q]" v0|q v0|q [309, 370[[480, 520[341 LiveAtLoopEnd 370 ShouldHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  198  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  240  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr  298  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  312  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  382  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  436  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  478  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  520  <|@ instruction [v30|DWORD, v31|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v8|QWORD = MOVSXD value: v4|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v9|QWORD = CMOVE (falseValue: v8|QWORD, ~trueValue: v10|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v11|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v11|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = CMOVE (falseValue: v11|QWORD, ~trueValue: v9|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v13|DWORD = MOV value: v12|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v14|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction v19|DWORD = LEA address: [v18|DWORD + 2] size: DWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v13|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v20|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE input: v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  238  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  240  <|@ instruction v23|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v23|DWORD, y: v23|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v15|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction v24|QWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 16] size: QWORD <|@ <|@
      nr  298  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  312  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v28|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v28|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction v16|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  382  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  478  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v30|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v31|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  298  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  478  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  298  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  478  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  166  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  526  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [286, 431[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [36, 542[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [286, 431[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [36, 542[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  166  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  166  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [r8:0, r11:0, stack:8]
live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rbx:0, r8:0, r11:0, stack:8]
live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [rbx:0, r8:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [r8:0, r11:0, stack:8]
live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rbx:0, r8:0, r11:0, stack:8]
live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: r11|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: < <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOV value: rax|QWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606949323261263743
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4604755797332266911
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4603110652885519287
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  286  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603590094981428594
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601793933072134187
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3 <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599763354783577120
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598240421067159320
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605395053460145987
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  332  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597942124006522751
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B20" "B19" "B18" "B21" "B17" 
    successors 
    xhandlers
    flags 
    probability 4606949323261263742
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596387854205404995
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595748598077525919
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594582895726687602
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4592786733817393195
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590756155528836128
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4583116278648541216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [rbx:0, r8:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2683) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  540  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: i2l           
     3: iconst_0      
     4: iload_2       
     5: invokestatic  #180        // java.lang.Math.clamp:(long, int, int)int
     8: istore        4
    10: aload_3       
    11: invokevirtual #127        // length:()int
    14: istore        5
    16: iload         5
    18: iload_2       
    19: iload         4
    21: isub          
    22: if_icmple     27
    25: iconst_m1     
    26: ireturn       
    27: iload         5
    29: ifne          35
    32: iload         4
    34: ireturn       
    35: aload_3       
    36: getfield      #1          // value:byte[]
    39: astore        6
    41: aload_3       
    42: invokevirtual #77         // coder:()byte
    45: istore        7
    47: iload_1       
    48: iload         7
    50: if_icmpne     83
    53: iload_1       
    54: ifne          71
    57: aload_0       
    58: iload_2       
    59: aload         6
    61: iload         5
    63: iload         4
    65: invokestatic  #181        // java.lang.StringLatin1.indexOf:(byte[], int, byte[], int, int)int
    68: goto          82
    71: aload_0       
    72: iload_2       
    73: aload         6
    75: iload         5
    77: iload         4
    79: invokestatic  #182        // java.lang.StringUTF16.indexOf:(byte[], int, byte[], int, int)int
    82: ireturn       
    83: iload_1       
    84: ifne          89
    87: iconst_m1     
    88: ireturn       
    89: aload_0       
    90: iload_2       
    91: aload         6
    93: iload         5
    95: iload         4
    97: invokestatic  #183        // java.lang.StringUTF16.indexOfLatin1:(byte[], int, byte[], int, int)int
   100: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec289041817f20000000000f8592020000909090909090909090909090909048896c24204c8bde4c895c2408448bd1418b5814410fbe70108b3cdd0c0000004585d20f8c370200009090909090909090909090909090904963c94585c948c7c000000000480f4cc8418bc2483bc1480f47c18bc0418bea2be88bce448bef41d3ed443bed0f8f85010000909090904585ed0f849f010000909090903bf20f85ee0100009090909085d20f85be010000909090904183fd010f84d60000009090909090909090452bd5418d6a023be80f8e170100009090909090440fb634dd10000000440fb614dd110000004489542414e96a0000006690909090904183fd020f84f00000009090909090909090909090909090909090908bf0488d56108bcb48c1e103498bf349c7c010000000458bcd448bd8e80000000085c00f85bd0000009090909090418bc3ffc03be80f8eb3000000909090448b5424144c8b5c240890909090909090909090909090498bf348c7c2100000008bcd448bc0458bce418bfae80000000085c00f8d69ffffffe94e000000909090909090909090909090440fb60cdd10000000488b74240848c7c210000000418bca448bc0e8000000009090909090909090488b6c24204883c428493ba7500400000f87d6000000c5f877c3909090b8ffffffffebd4909090b8ffffffffebca448bd8909090ebc2909090418bc3ebba909090b8ffffffffebb09090909090909090b8ffffffff488b6c24204883c428493ba7500400000f8795000000c5f877c390909048c7c11400000041bbed54ffff488b5c24089090909090909045899f8404000049898f90040000e8000000000f1f84000000000090909048c7c11405000041bbed4cffffebc790909048c7c19407000041bbed58ffffebb590909048c7c19402000041bbed50ffffeba348896c2420e800000000e95ffdfffff4488d0d16ffffff49898f68040000e931fdfffff4488d0d57ffffff49898f68040000e91dfdfffff441c78784040000f5bfffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b9ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 NOP  <||@
  Comment 40 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 45 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD  <||@
  Comment 45 34 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 48 36 stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 53 38 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 56 40 rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 56 [r8:0, r11:0, stack:8]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |r11|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 42 rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 65 44 rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 65 [rbx:0, r8:0, r11:0, stack:8]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |r11|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 65 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 46 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 81 block B2 null  <||@
  Comment 81 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 81 66 NOP  <||@
  Comment 82 68 NOP  <||@
  Comment 83 70 NOP  <||@
  Comment 84 72 NOP  <||@
  Comment 85 74 NOP  <||@
  Comment 86 76 NOP  <||@
  Comment 87 78 NOP  <||@
  Comment 88 80 NOP  <||@
  Comment 89 82 NOP  <||@
  Comment 90 84 NOP  <||@
  Comment 91 86 NOP  <||@
  Comment 92 88 NOP  <||@
  Comment 93 90 NOP  <||@
  Comment 94 92 NOP  <||@
  Comment 95 94 NOP  <||@
  Comment 96 96 rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 99 98 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 102 100 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 109 102 rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: <  <||@
  Comment 113 104 rax|QWORD = MOV value: r10|DWORD size: DWORD  <||@
  Comment 116 106 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 119 108 rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>|  <||@
  Comment 123 110 rax|DWORD = MOV value: rax|QWORD size: DWORD  <||@
  Comment 125 112 rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 130 114 rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 132 116 r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 138 118 CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 147 block B4 null  <||@
  Comment 147 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 147 144 NOP  <||@
  Comment 148 146 NOP  <||@
  Comment 149 148 NOP  <||@
  Comment 150 150 NOP  <||@
  Comment 151 152 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 160 block B6 null  <||@
  Comment 160 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 160 172 NOP  <||@
  Comment 161 174 NOP  <||@
  Comment 162 176 NOP  <||@
  Comment 163 178 NOP  <||@
  Comment 164 180 CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD  <||@
  Comment 172 block B7 null  <||@
  Comment 172 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 184 NOP  <||@
  Comment 173 186 NOP  <||@
  Comment 174 188 NOP  <||@
  Comment 175 190 NOP  <||@
  Comment 176 192 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD  <||@
  Comment 184 block B8 null  <||@
  Comment 184 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 184 196 NOP  <||@
  Comment 185 198 NOP  <||@
  Comment 186 200 NOP  <||@
  Comment 187 202 NOP  <||@
  Comment 188 204 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null  <||@
  Comment 198 block B10 null  <||@
  Comment 198 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 198 248 NOP  <||@
  Comment 199 250 NOP  <||@
  Comment 200 252 NOP  <||@
  Comment 201 254 NOP  <||@
  Comment 202 256 NOP  <||@
  Comment 203 258 NOP  <||@
  Comment 204 260 NOP  <||@
  Comment 205 262 NOP  <||@
  Comment 206 264 r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 209 266 rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD  <||@
  Comment 213 268 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD  <||@
  Comment 221 block B11 null  <||@
  Comment 221 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 221 272 NOP  <||@
  Comment 222 274 NOP  <||@
  Comment 223 276 NOP  <||@
  Comment 224 278 NOP  <||@
  Comment 225 280 NOP  <||@
  Comment 226 282 r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 235 284 r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD  <||@
  Comment 244 286 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 249 288 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 254 block B13 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 254 334 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 336 NOP  <||@
  Comment 257 338 NOP  <||@
  Comment 258 340 NOP  <||@
  Comment 259 342 NOP  <||@
  Comment 260 344 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null  <||@
  Comment 270 block B14 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 270 346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 270 348 NOP  <||@
  Comment 271 350 NOP  <||@
  Comment 272 352 NOP  <||@
  Comment 273 354 NOP  <||@
  Comment 274 356 NOP  <||@
  Comment 275 358 NOP  <||@
  Comment 276 360 NOP  <||@
  Comment 277 362 NOP  <||@
  Comment 278 364 NOP  <||@
  Comment 279 366 NOP  <||@
  Comment 280 368 NOP  <||@
  Comment 281 370 NOP  <||@
  Comment 282 372 NOP  <||@
  Comment 283 374 NOP  <||@
  Comment 284 376 NOP  <||@
  Comment 285 378 NOP  <||@
  Comment 286 380 NOP  <||@
  Comment 287 382 NOP  <||@
  Comment 288 384 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 290 386 rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 294 388 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3  <||@
  Comment 300 390 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 303 392 r8|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 310 394 r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 313 396 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 316 398 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL  <||@
  Comment 316 {Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 321 400 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD  <||@
  Comment 329 block B15 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 329 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 329 404 NOP  <||@
  Comment 330 406 NOP  <||@
  Comment 331 408 NOP  <||@
  Comment 332 410 NOP  <||@
  Comment 333 412 NOP  <||@
  Comment 334 414 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 339 416 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 347 block B16 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 347 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 347 420 NOP  <||@
  Comment 348 422 NOP  <||@
  Comment 349 424 NOP  <||@
  Comment 350 426 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 355 428 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 360 430 JUMP ~outgoingValues: [] destination: B16 -> B12  <||@
  Comment 360 block B12 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 360 290 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 360 292 NOP  <||@
  Comment 361 294 NOP  <||@
  Comment 362 296 NOP  <||@
  Comment 363 298 NOP  <||@
  Comment 364 300 NOP  <||@
  Comment 365 302 NOP  <||@
  Comment 366 304 NOP  <||@
  Comment 367 306 NOP  <||@
  Comment 368 308 NOP  <||@
  Comment 369 310 NOP  <||@
  Comment 370 312 NOP  <||@
  Comment 371 314 NOP  <||@
  Comment 372 316 NOP  <||@
  Comment 373 318 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 376 320 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 383 322 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 385 324 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 388 326 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 391 328 rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 394 330 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL  <||@
  Comment 394 {Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL}  <||@
  Comment 399 332 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD  <||@
  Comment 412 block B9 null  <||@
  Comment 412 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 208 NOP  <||@
  Comment 413 210 NOP  <||@
  Comment 414 212 NOP  <||@
  Comment 415 214 NOP  <||@
  Comment 416 216 NOP  <||@
  Comment 417 218 NOP  <||@
  Comment 418 220 NOP  <||@
  Comment 419 222 NOP  <||@
  Comment 420 224 NOP  <||@
  Comment 421 226 NOP  <||@
  Comment 422 228 NOP  <||@
  Comment 423 230 NOP  <||@
  Comment 424 232 r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 433 234 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 438 236 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 445 238 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 448 240 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 451 242 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 451 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 456 244 JUMP ~outgoingValues: [] destination: B9 -> B22  <||@
  Comment 456 block B22 null  <||@
  Comment 456 494 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 456 496 NOP  <||@
  Comment 457 498 NOP  <||@
  Comment 458 500 NOP  <||@
  Comment 459 502 NOP  <||@
  Comment 460 504 NOP  <||@
  Comment 461 506 NOP  <||@
  Comment 462 508 NOP  <||@
  Comment 463 510 NOP  <||@
  Comment 464 512 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 473 POLL_RETURN_FAR  <||@
  Comment 490 block B20 null  <||@
  Comment 490 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 490 472 NOP  <||@
  Comment 491 474 NOP  <||@
  Comment 492 476 NOP  <||@
  Comment 493 478 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 498 480 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 500 block B21 null  <||@
  Comment 500 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 500 484 NOP  <||@
  Comment 501 486 NOP  <||@
  Comment 502 488 NOP  <||@
  Comment 503 490 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 508 492 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 510 block B19 null  <||@
  Comment 510 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 510 458 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 513 460 NOP  <||@
  Comment 514 462 NOP  <||@
  Comment 515 464 NOP  <||@
  Comment 516 468 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 518 block B18 null  <||@
  Comment 518 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 518 446 NOP  <||@
  Comment 519 448 NOP  <||@
  Comment 520 450 NOP  <||@
  Comment 521 452 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 524 454 JUMP ~outgoingValues: [] destination: B18 -> B22  <||@
  Comment 526 block B17 null  <||@
  Comment 526 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 526 434 NOP  <||@
  Comment 527 436 NOP  <||@
  Comment 528 438 NOP  <||@
  Comment 529 440 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 534 442 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 536 block B3 null  <||@
  Comment 536 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 536 122 NOP  <||@
  Comment 537 124 NOP  <||@
  Comment 538 126 NOP  <||@
  Comment 539 128 NOP  <||@
  Comment 540 130 NOP  <||@
  Comment 541 132 NOP  <||@
  Comment 542 134 NOP  <||@
  Comment 543 136 NOP  <||@
  Comment 544 138 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 549 140 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 558 POLL_RETURN_FAR  <||@
  Comment 575 block B5 null  <||@
  Comment 575 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 575 156 NOP  <||@
  Comment 576 158 NOP  <||@
  Comment 577 160 NOP  <||@
  Comment 578 162 rcx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 585 164 r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed]  <||@
  Comment 591 168 JUMP ~outgoingValues: [] destination: B5 -> B25  <||@
  Comment 591 block B25 null  <||@
  Comment 591 546 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 591 60 rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 596 548 NOP  <||@
  Comment 597 550 NOP  <||@
  Comment 598 552 NOP  <||@
  Comment 599 554 NOP  <||@
  Comment 600 556 NOP  <||@
  Comment 601 558 NOP  <||@
  Comment 602 560 NOP  <||@
  Comment 603 562 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 610 564 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 617 566 DEOPT info [bci:0]  <||@
  Comment 617 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 622 [rbx:0, r8:0]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 630 block B23 null  <||@
  Comment 630 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 630 516 NOP  <||@
  Comment 631 518 NOP  <||@
  Comment 632 520 NOP  <||@
  Comment 633 522 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 640 524 r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced]  <||@
  Comment 646 528 JUMP ~outgoingValues: [] destination: B23 -> B25  <||@
  Comment 648 block B1 null  <||@
  Comment 648 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 648 50 NOP  <||@
  Comment 649 52 NOP  <||@
  Comment 650 54 NOP  <||@
  Comment 651 56 rcx|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 658 58 r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed]  <||@
  Comment 664 62 JUMP ~outgoingValues: [] destination: B1 -> B25  <||@
  Comment 666 block B24 null  <||@
  Comment 666 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 532 NOP  <||@
  Comment 667 534 NOP  <||@
  Comment 668 536 NOP  <||@
  Comment 669 538 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 676 540 r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed]  <||@
  Comment 682 544 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 689 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 714 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 734 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 767 [r8:0, r11:0, stack:8]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |r11|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 797 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 802 [rbx:0, r8:0, r11:0, stack:8]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |r11|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 810 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 810 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 816 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 816 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3684[java.lang.String.indexOf(byte[], byte, int, String, int)]"
  method "HotSpotCompilation-3684[java.lang.String.indexOf(byte[], byte, int, String, int)]"
  date 1724269726840
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad3d7a0 89842400c0feff4883ec289041817f20000000000f8592020000909090909090909090909090909048896c24204c8bde4c895c2408448bd1418b5814410fbe70108b3cdd0c0000004585d20f8c370200009090909090909090909090909090904963c94585c948c7c000000000480f4cc8418bc2483bc1480f47c18bc0418bea2be88bce448bef41d3ed443bed0f8f85010000909090904585ed0f849f010000909090903bf20f85ee0100009090909085d20f85be010000909090904183fd010f84d60000009090909090909090452bd5418d6a023be80f8e170100009090909090440fb634dd10000000440fb614dd110000004489542414e96a0000006690909090904183fd020f84f00000009090909090909090909090909090909090908bf0488d56108bcb48c1e103498bf349c7c010000000458bcd448bd8e89f04bafe85c00f85bd0000009090909090418bc3ffc03be80f8eb3000000909090448b5424144c8b5c240890909090909090909090909090498bf348c7c2100000008bcd448bc0458bce418bfae851b9b9fe85c00f8d69ffffffe94e000000909090909090909090909090440fb60cdd10000000488b74240848c7c210000000418bca448bc0e898b5b9fe9090909090909090488b6c24204883c428493ba7500400000f87d6000000c5f877c3909090b8ffffffffebd4909090b8ffffffffebca448bd8909090ebc2909090418bc3ebba909090b8ffffffffebb09090909090909090b8ffffffff488b6c24204883c428493ba7500400000f8795000000c5f877c390909048c7c11400000041bbed54ffff488b5c24089090909090909045899f8404000049898f90040000e86cd7a4fe0f1f84000000000090909048c7c11405000041bbed4cffffebc790909048c7c19407000041bbed58ffffebb590909048c7c19402000041bbed50ffffeba348896c2420e8cad7a2fee95ffdfffff4488d0d16ffffff49898f68040000e991e5a4fef4488d0d57ffffff49898f68040000e97de5a4fef441c78784040000f5bfffff49c7879004000000000000e8dbd6a4fe0f1f84000000000041c78784040000f5b9ffff49c7879004000000000000e8b8d6a4fe0f1f840000000000e83178b8fef4e84bd4a4fef4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 NOP  <||@
  Comment 40 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 45 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1146a796 slotKind: QWORD  <||@
  Comment 45 34 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 48 36 stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 53 38 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 56 40 rbx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 56 [r8:0, r11:0, stack:8]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |r11|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 42 rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 65 44 rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 65 [rbx:0, r8:0, r11:0, stack:8]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |r11|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 65 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 46 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 81 block B2 null  <||@
  Comment 81 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 81 66 NOP  <||@
  Comment 82 68 NOP  <||@
  Comment 83 70 NOP  <||@
  Comment 84 72 NOP  <||@
  Comment 85 74 NOP  <||@
  Comment 86 76 NOP  <||@
  Comment 87 78 NOP  <||@
  Comment 88 80 NOP  <||@
  Comment 89 82 NOP  <||@
  Comment 90 84 NOP  <||@
  Comment 91 86 NOP  <||@
  Comment 92 88 NOP  <||@
  Comment 93 90 NOP  <||@
  Comment 94 92 NOP  <||@
  Comment 95 94 NOP  <||@
  Comment 96 96 rcx|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 99 98 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 102 100 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 109 102 rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rax|QWORD) condition: <  <||@
  Comment 113 104 rax|QWORD = MOV value: r10|DWORD size: DWORD  <||@
  Comment 116 106 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 119 108 rax|QWORD = CMOVE (falseValue: rax|QWORD, ~trueValue: rcx|QWORD) condition: |>|  <||@
  Comment 123 110 rax|DWORD = MOV value: rax|QWORD size: DWORD  <||@
  Comment 125 112 rbp|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 130 114 rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 132 116 r13|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 138 118 CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.025878803406172435 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 147 block B4 null  <||@
  Comment 147 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 147 144 NOP  <||@
  Comment 148 146 NOP  <||@
  Comment 149 148 NOP  <||@
  Comment 150 150 NOP  <||@
  Comment 151 152 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 160 block B6 null  <||@
  Comment 160 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 160 172 NOP  <||@
  Comment 161 174 NOP  <||@
  Comment 162 176 NOP  <||@
  Comment 163 178 NOP  <||@
  Comment 164 180 CMPBRANCH (x: rsi|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B24 size: DWORD  <||@
  Comment 172 block B7 null  <||@
  Comment 172 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 184 NOP  <||@
  Comment 173 186 NOP  <||@
  Comment 174 188 NOP  <||@
  Comment 175 190 NOP  <||@
  Comment 176 192 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 size: DWORD  <||@
  Comment 184 block B8 null  <||@
  Comment 184 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 184 196 NOP  <||@
  Comment 185 198 NOP  <||@
  Comment 186 200 NOP  <||@
  Comment 187 202 NOP  <||@
  Comment 188 204 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null  <||@
  Comment 198 block B10 null  <||@
  Comment 198 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 198 248 NOP  <||@
  Comment 199 250 NOP  <||@
  Comment 200 252 NOP  <||@
  Comment 201 254 NOP  <||@
  Comment 202 256 NOP  <||@
  Comment 203 258 NOP  <||@
  Comment 204 260 NOP  <||@
  Comment 205 262 NOP  <||@
  Comment 206 264 r10|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 209 266 rbp|DWORD = LEA address: [r10|DWORD + 2] size: DWORD  <||@
  Comment 213 268 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B21 size: DWORD  <||@
  Comment 221 block B11 null  <||@
  Comment 221 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 221 272 NOP  <||@
  Comment 222 274 NOP  <||@
  Comment 223 276 NOP  <||@
  Comment 224 278 NOP  <||@
  Comment 225 280 NOP  <||@
  Comment 226 282 r14|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 235 284 r10|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 17] size: DWORD  <||@
  Comment 244 286 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 249 288 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 254 block B13 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 254 334 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 336 NOP  <||@
  Comment 257 338 NOP  <||@
  Comment 258 340 NOP  <||@
  Comment 259 342 NOP  <||@
  Comment 260 344 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null  <||@
  Comment 270 block B14 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 270 346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 270 348 NOP  <||@
  Comment 271 350 NOP  <||@
  Comment 272 352 NOP  <||@
  Comment 273 354 NOP  <||@
  Comment 274 356 NOP  <||@
  Comment 275 358 NOP  <||@
  Comment 276 360 NOP  <||@
  Comment 277 362 NOP  <||@
  Comment 278 364 NOP  <||@
  Comment 279 366 NOP  <||@
  Comment 280 368 NOP  <||@
  Comment 281 370 NOP  <||@
  Comment 282 372 NOP  <||@
  Comment 283 374 NOP  <||@
  Comment 284 376 NOP  <||@
  Comment 285 378 NOP  <||@
  Comment 286 380 NOP  <||@
  Comment 287 382 NOP  <||@
  Comment 288 384 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 290 386 rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 294 388 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@31e3b6ae encoding: base: 0 shift: 3  <||@
  Comment 300 390 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 303 392 r8|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 310 394 r9|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 313 396 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 316 398 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL  <||@
  Comment 316 {Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 321 400 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD  <||@
  Comment 329 block B15 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 329 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 329 404 NOP  <||@
  Comment 330 406 NOP  <||@
  Comment 331 408 NOP  <||@
  Comment 332 410 NOP  <||@
  Comment 333 412 NOP  <||@
  Comment 334 414 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 339 416 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 347 block B16 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 347 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 347 420 NOP  <||@
  Comment 348 422 NOP  <||@
  Comment 349 424 NOP  <||@
  Comment 350 426 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 355 428 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 360 430 JUMP ~outgoingValues: [] destination: B16 -> B12  <||@
  Comment 360 block B12 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 360 290 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 360 292 NOP  <||@
  Comment 361 294 NOP  <||@
  Comment 362 296 NOP  <||@
  Comment 363 298 NOP  <||@
  Comment 364 300 NOP  <||@
  Comment 365 302 NOP  <||@
  Comment 366 304 NOP  <||@
  Comment 367 306 NOP  <||@
  Comment 368 308 NOP  <||@
  Comment 369 310 NOP  <||@
  Comment 370 312 NOP  <||@
  Comment 371 314 NOP  <||@
  Comment 372 316 NOP  <||@
  Comment 373 318 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 376 320 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 383 322 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 385 324 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 388 326 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 391 328 rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 394 330 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL  <||@
  Comment 394 {Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL}  <||@
  Comment 399 332 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD  <||@
  Comment 412 block B9 null  <||@
  Comment 412 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 208 NOP  <||@
  Comment 413 210 NOP  <||@
  Comment 414 212 NOP  <||@
  Comment 415 214 NOP  <||@
  Comment 416 216 NOP  <||@
  Comment 417 218 NOP  <||@
  Comment 418 220 NOP  <||@
  Comment 419 222 NOP  <||@
  Comment 420 224 NOP  <||@
  Comment 421 226 NOP  <||@
  Comment 422 228 NOP  <||@
  Comment 423 230 NOP  <||@
  Comment 424 232 r9|DWORD = MOVZXB input: [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 433 234 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 438 236 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 445 238 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 448 240 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 451 242 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 451 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 456 244 JUMP ~outgoingValues: [] destination: B9 -> B22  <||@
  Comment 456 block B22 null  <||@
  Comment 456 494 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 456 496 NOP  <||@
  Comment 457 498 NOP  <||@
  Comment 458 500 NOP  <||@
  Comment 459 502 NOP  <||@
  Comment 460 504 NOP  <||@
  Comment 461 506 NOP  <||@
  Comment 462 508 NOP  <||@
  Comment 463 510 NOP  <||@
  Comment 464 512 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 473 POLL_RETURN_FAR  <||@
  Comment 490 block B20 null  <||@
  Comment 490 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 490 472 NOP  <||@
  Comment 491 474 NOP  <||@
  Comment 492 476 NOP  <||@
  Comment 493 478 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 498 480 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 500 block B21 null  <||@
  Comment 500 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 500 484 NOP  <||@
  Comment 501 486 NOP  <||@
  Comment 502 488 NOP  <||@
  Comment 503 490 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 508 492 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 510 block B19 null  <||@
  Comment 510 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 510 458 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 513 460 NOP  <||@
  Comment 514 462 NOP  <||@
  Comment 515 464 NOP  <||@
  Comment 516 468 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 518 block B18 null  <||@
  Comment 518 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 518 446 NOP  <||@
  Comment 519 448 NOP  <||@
  Comment 520 450 NOP  <||@
  Comment 521 452 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 524 454 JUMP ~outgoingValues: [] destination: B18 -> B22  <||@
  Comment 526 block B17 null  <||@
  Comment 526 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 526 434 NOP  <||@
  Comment 527 436 NOP  <||@
  Comment 528 438 NOP  <||@
  Comment 529 440 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 534 442 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 536 block B3 null  <||@
  Comment 536 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 536 122 NOP  <||@
  Comment 537 124 NOP  <||@
  Comment 538 126 NOP  <||@
  Comment 539 128 NOP  <||@
  Comment 540 130 NOP  <||@
  Comment 541 132 NOP  <||@
  Comment 542 134 NOP  <||@
  Comment 543 136 NOP  <||@
  Comment 544 138 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 549 140 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 558 POLL_RETURN_FAR  <||@
  Comment 575 block B5 null  <||@
  Comment 575 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 575 156 NOP  <||@
  Comment 576 158 NOP  <||@
  Comment 577 160 NOP  <||@
  Comment 578 162 rcx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 585 164 r11|DWORD = MOVE input: int[-43795|0xffffffffffff54ed]  <||@
  Comment 591 168 JUMP ~outgoingValues: [] destination: B5 -> B25  <||@
  Comment 591 block B25 null  <||@
  Comment 591 546 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 591 60 rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 596 548 NOP  <||@
  Comment 597 550 NOP  <||@
  Comment 598 552 NOP  <||@
  Comment 599 554 NOP  <||@
  Comment 600 556 NOP  <||@
  Comment 601 558 NOP  <||@
  Comment 602 560 NOP  <||@
  Comment 603 562 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 610 564 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 617 566 DEOPT info [bci:0]  <||@
  Comment 617 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 622 [rbx:0, r8:0]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 630 block B23 null  <||@
  Comment 630 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 630 516 NOP  <||@
  Comment 631 518 NOP  <||@
  Comment 632 520 NOP  <||@
  Comment 633 522 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 640 524 r11|DWORD = MOVE input: int[-45843|0xffffffffffff4ced]  <||@
  Comment 646 528 JUMP ~outgoingValues: [] destination: B23 -> B25  <||@
  Comment 648 block B1 null  <||@
  Comment 648 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 648 50 NOP  <||@
  Comment 649 52 NOP  <||@
  Comment 650 54 NOP  <||@
  Comment 651 56 rcx|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 658 58 r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed]  <||@
  Comment 664 62 JUMP ~outgoingValues: [] destination: B1 -> B25  <||@
  Comment 666 block B24 null  <||@
  Comment 666 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 532 NOP  <||@
  Comment 667 534 NOP  <||@
  Comment 668 536 NOP  <||@
  Comment 669 538 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 676 540 r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed]  <||@
  Comment 682 544 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 689 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 714 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 734 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 767 [r8:0, r11:0, stack:8]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |r11|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 797 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 802 [rbx:0, r8:0, r11:0, stack:8]at java.lang.String.indexOf(String.java:2683) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4         |5  |6  |7 
     locals:  |r11|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD  |-  |-  |-   <||@
  Comment 810 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 810 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 816 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 816 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
