begin_compilation
  name " HotSpotCompilation-6830[java.util.ArrayList.get(int)]"
  method "HotSpotCompilation-6830[java.util.ArrayList.get(int)]"
  date 1724269729773
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i79 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i79  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.ArrayList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v83 v84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.get(ArrayList.java:427) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v11 v8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i7 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j43 v11 v33 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ArrayList.get(int)>
localsSize: 2
locksSize: 0
sourceFile: ArrayList.java
sourceLine: 427
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v72 i81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
i79 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v50 #falseSuccessor: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: -5404
stableDimension: 0
stamp: i32 [-5404]
stampKind: i32
value: int[-5404|0xffffffffffffeae4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i79 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v52 #falseSuccessor: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a80 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a80  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a80 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 1]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v84 
lastLocationAccess: - 
=== Succesors ===
next: i81 
=== Usages ===
a26 v85 
=== Predecessor ===
v52 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v84 lastLocationAccess: - #next: i81  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a80 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-7179|0xffffffffffffe3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
v33 
=== Predecessor ===
a80 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v85 lastLocationAccess: - #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i81 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i81  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
i81 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v60 #falseSuccessor: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a82 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a82  <|@  <|@
f <@~|@floating>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 1]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a80 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a80  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a26 
index: j43 
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: j43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
lastLocationAccess: - 
=== Succesors ===
next: v17 
=== Usages ===
a42 
=== Predecessor ===
v60 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 lastLocationAccess: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a82 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a82  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.get(ArrayList.java:428) [bci: 14]
stamp: void
=== Inputs ===
memoryMap: - 
result: a42 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a82 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: -8731
stableDimension: 0
stamp: i32 [-8731]
stampKind: i32
value: int[-8731|0xffffffffffffdde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: -5660
stableDimension: 0
stamp: i32 [-5660]
stampKind: i32
value: int[-5660|0xffffffffffffe9e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: i32 [-8731 - -5404] bits:1...1xx1xxx1110010x
valueDescription: i32
=== Inputs ===
merge: v66 
values: i68 i76 i78 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v66 values: i68 i76 i78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v75 v77 
=== Succesors ===
next: v72 
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v75 v77 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i70 
speculation: j69 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i70 speculation: j69  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i79 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i79  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.ArrayList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v83 v84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.get(ArrayList.java:427) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v11 v8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i7 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j43 v11 v33 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ArrayList.get(int)>
localsSize: 2
locksSize: 0
sourceFile: ArrayList.java
sourceLine: 427
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v72 i81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
i79 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v50 #falseSuccessor: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result int[-5404|0xffffffffffffeae4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: -5404
stableDimension: 0
stamp: i32 [-5404]
stampKind: i32
value: int[-5404|0xffffffffffffeae4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i79 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v52 #falseSuccessor: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a80 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a80  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a80 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a80 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 1]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v84 
lastLocationAccess: - 
=== Succesors ===
next: i81 
=== Usages ===
a26 v85 
=== Predecessor ===
v52 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v84 lastLocationAccess: - #next: i81  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a80 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-7179|0xffffffffffffe3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
v33 
=== Predecessor ===
a80 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v85 lastLocationAccess: - #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i81 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i81  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
i81 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v60 #falseSuccessor: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a82 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a82  <|@  <|@
f <@~|@floating>@ <|@
tid a26 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 1]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a80 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a80  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
result [v4|QWORD[.] + v5|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a26 
index: j43 
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: j43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
lastLocationAccess: - 
=== Succesors ===
next: v17 
=== Usages ===
a42 
=== Predecessor ===
v60 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 lastLocationAccess: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a82 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a82  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.get(ArrayList.java:428) [bci: 14]
stamp: void
=== Inputs ===
memoryMap: - 
result: a42 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a82 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:411) [bci: 5]
at java.util.ArrayList.get(ArrayList.java:428) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result int[-8731|0xffffffffffffdde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: -8731
stableDimension: 0
stamp: i32 [-8731]
stampKind: i32
value: int[-8731|0xffffffffffffdde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result int[-5660|0xffffffffffffe9e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: -5660
stableDimension: 0
stamp: i32 [-5660]
stampKind: i32
value: int[-5660|0xffffffffffffe9e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i70 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: i32 [-8731 - -5404] bits:1...1xx1xxx1110010x
valueDescription: i32
=== Inputs ===
merge: v66 
values: i68 i76 i78 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v66 values: i68 i76 i78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v75 v77 
=== Succesors ===
next: v72 
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v75 v77 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.util.Objects.checkIndex(Objects.java:385) [bci: 3]
at java.util.ArrayList.get(ArrayList.java:427) [bci: 5]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i70 
speculation: j69 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i70 speculation: j69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[98, 100[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [24, 60[[102, 153[24 MustHaveRegister 28 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [26, 92[[102, 153[26 MustHaveRegister 42 ShouldHaveRegister 58 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [28, 42[28 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [56, 90[56 MustHaveRegister 58 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [90, 94[90 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [132, 148[148 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[98, 100[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 60[[102, 153[24 MustHaveRegister 28 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 92[[102, 153[26 MustHaveRegister 42 ShouldHaveRegister 58 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 42[28 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 90[56 MustHaveRegister 58 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [90, 94[90 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [132, 148[148 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[98, 100[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 60[[102, 153[24 MustHaveRegister 28 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 92[[102, 153[26 MustHaveRegister 42 ShouldHaveRegister 58 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 42[28 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 90[56 MustHaveRegister 58 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [90, 94[90 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [132, 148[148 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [int[-5404|0xffffffffffffeae4]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [int[-5660|0xffffffffffffe9e4]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [int[-8731|0xffffffffffffdde5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[98, 100[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 60[[102, 153[24 MustHaveRegister 28 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 92[[102, 153[26 MustHaveRegister 42 ShouldHaveRegister 58 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 42[28 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 90[56 MustHaveRegister 58 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [90, 94[90 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [132, 148[148 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.get(ArrayList.java:427) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: aload_0       
     2: getfield      #10         // size:int
     5: invokestatic  #26         // java.util.Objects.checkIndex:(int, int)int
     8: pop           
     9: aload_0       
    10: iload_1       
    11: invokevirtual #27         // elementData:(int)java.lang.Object
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85b400000090909090909090909048896c24108b461085c00f8c56000000909090903bc20f867900000090909090908b46143b14c50c0000000f836f000000909090909090909090909090909048c1e003448bd2428b44901048c1e003488b6c24104883c418493ba7500400000f8756000000c390909041bae4eaffff909090909090904589978404000049c7879004000000000000e8000000000f1f84000000000090909041bae4e9ffffebcf90909041bae5ddffffebc448896c2410e800000000e93dfffffff4488d0d96ffffff49898f68040000e9effefffff441c78784040000f5e3ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD  <||@
  Comment 72 28 rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 75 30 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 83 block B2 null  <||@
  Comment 83 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 83 34 NOP  <||@
  Comment 84 36 NOP  <||@
  Comment 85 38 NOP  <||@
  Comment 86 40 NOP  <||@
  Comment 87 42 CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD  <||@
  Comment 95 block B3 null  <||@
  Comment 95 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 95 46 NOP  <||@
  Comment 96 48 NOP  <||@
  Comment 97 50 NOP  <||@
  Comment 98 52 NOP  <||@
  Comment 99 54 NOP  <||@
  Comment 100 56 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 103 58 CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0]  <||@
  Comment 103 [rax:0, rsi:0]at java.util.ArrayList.get(ArrayList.java:427) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 116 block B4 null  <||@
  Comment 116 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 62 NOP  <||@
  Comment 117 64 NOP  <||@
  Comment 118 66 NOP  <||@
  Comment 119 68 NOP  <||@
  Comment 120 70 NOP  <||@
  Comment 121 72 NOP  <||@
  Comment 122 74 NOP  <||@
  Comment 123 76 NOP  <||@
  Comment 124 78 NOP  <||@
  Comment 125 80 NOP  <||@
  Comment 126 82 NOP  <||@
  Comment 127 84 NOP  <||@
  Comment 128 86 NOP  <||@
  Comment 129 88 NOP  <||@
  Comment 130 90 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3  <||@
  Comment 134 92 r10|QWORD = MOV value: rdx|DWORD size: DWORD  <||@
  Comment 137 94 rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD  <||@
  Comment 142 96 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3  <||@
  Comment 146 100 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 155 POLL_RETURN_FAR  <||@
  Comment 169 block B1 null  <||@
  Comment 169 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 169 104 NOP  <||@
  Comment 170 106 NOP  <||@
  Comment 171 108 NOP  <||@
  Comment 172 -1 r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4]  <||@
  Comment 178 110 JUMP ~outgoingValues: [] destination: B1 -> B7  <||@
  Comment 178 block B7 null  <||@
  Comment 178 132 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 178 134 NOP  <||@
  Comment 179 136 NOP  <||@
  Comment 180 138 NOP  <||@
  Comment 181 140 NOP  <||@
  Comment 182 142 NOP  <||@
  Comment 183 144 NOP  <||@
  Comment 184 146 NOP  <||@
  Comment 185 148 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 192 150 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 203 152 DEOPT info [bci:0]  <||@
  Comment 203 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 208 [rsi:0]at java.util.ArrayList.get(ArrayList.java:427) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 216 block B6 null  <||@
  Comment 216 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 216 114 NOP  <||@
  Comment 217 116 NOP  <||@
  Comment 218 118 NOP  <||@
  Comment 219 -1 r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4]  <||@
  Comment 225 120 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 227 block B5 null  <||@
  Comment 227 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 227 124 NOP  <||@
  Comment 228 126 NOP  <||@
  Comment 229 128 NOP  <||@
  Comment 230 -1 r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5]  <||@
  Comment 236 130 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 243 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 268 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 296 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 301 [rax:0, rsi:0]at java.util.ArrayList.get(ArrayList.java:427) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 309 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 309 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 315 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6830[java.util.ArrayList.get(int)]"
  method "HotSpotCompilation-6830[java.util.ArrayList.get(int)]"
  date 1724269729868
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad82300 448b560849bc0000002b787f00004d03d44d33e4493bc20f85632da0fe66669089842400c0feff4883ec189041817f20030000000f85b400000090909090909090909048896c24108b461085c00f8c56000000909090903bc20f867900000090909090908b46143b14c50c0000000f836f000000909090909090909090909090909048c1e003448bd2428b44901048c1e003488b6c24104883c418493ba7500400000f8756000000c390909041bae4eaffff909090909090904589978404000049c7879004000000000000e8aa8da0fe0f1f84000000000090909041bae4e9ffffebcf90909041bae5ddffffebc448896c2410e8288e9efee93dfffffff4488d0d96ffffff49898f68040000e9ef9ba0fef441c78784040000f5e3ffff49c7879004000000000000e84d8da0fe0f1f840000000000e8c62eb4fef4e8e08aa0fef4f4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@591f05e5 slotKind: QWORD  <||@
  Comment 72 28 rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 75 30 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 83 block B2 null  <||@
  Comment 83 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 83 34 NOP  <||@
  Comment 84 36 NOP  <||@
  Comment 85 38 NOP  <||@
  Comment 86 40 NOP  <||@
  Comment 87 42 CMPBRANCH (x: rax|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD  <||@
  Comment 95 block B3 null  <||@
  Comment 95 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 95 46 NOP  <||@
  Comment 96 48 NOP  <||@
  Comment 97 50 NOP  <||@
  Comment 98 52 NOP  <||@
  Comment 99 54 NOP  <||@
  Comment 100 56 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 103 58 CMPBRANCH (x: rdx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0]  <||@
  Comment 103 [rax:0, rsi:0]at java.util.ArrayList.get(ArrayList.java:427) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 116 block B4 null  <||@
  Comment 116 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 62 NOP  <||@
  Comment 117 64 NOP  <||@
  Comment 118 66 NOP  <||@
  Comment 119 68 NOP  <||@
  Comment 120 70 NOP  <||@
  Comment 121 72 NOP  <||@
  Comment 122 74 NOP  <||@
  Comment 123 76 NOP  <||@
  Comment 124 78 NOP  <||@
  Comment 125 80 NOP  <||@
  Comment 126 82 NOP  <||@
  Comment 127 84 NOP  <||@
  Comment 128 86 NOP  <||@
  Comment 129 88 NOP  <||@
  Comment 130 90 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3  <||@
  Comment 134 92 r10|QWORD = MOV value: rdx|DWORD size: DWORD  <||@
  Comment 137 94 rax|DWORD[_] = MOV input: [rax|QWORD[.] + r10|QWORD * 4 + 16] size: DWORD  <||@
  Comment 142 96 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3e0d7f99 encoding: base: 0 shift: 3  <||@
  Comment 146 100 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 155 POLL_RETURN_FAR  <||@
  Comment 169 block B1 null  <||@
  Comment 169 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 169 104 NOP  <||@
  Comment 170 106 NOP  <||@
  Comment 171 108 NOP  <||@
  Comment 172 -1 r10|DWORD = MOVE input: int[-5404|0xffffffffffffeae4]  <||@
  Comment 178 110 JUMP ~outgoingValues: [] destination: B1 -> B7  <||@
  Comment 178 block B7 null  <||@
  Comment 178 132 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 178 134 NOP  <||@
  Comment 179 136 NOP  <||@
  Comment 180 138 NOP  <||@
  Comment 181 140 NOP  <||@
  Comment 182 142 NOP  <||@
  Comment 183 144 NOP  <||@
  Comment 184 146 NOP  <||@
  Comment 185 148 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 192 150 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 203 152 DEOPT info [bci:0]  <||@
  Comment 203 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 208 [rsi:0]at java.util.ArrayList.get(ArrayList.java:427) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 216 block B6 null  <||@
  Comment 216 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 216 114 NOP  <||@
  Comment 217 116 NOP  <||@
  Comment 218 118 NOP  <||@
  Comment 219 -1 r10|DWORD = MOVE input: int[-5660|0xffffffffffffe9e4]  <||@
  Comment 225 120 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 227 block B5 null  <||@
  Comment 227 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 227 124 NOP  <||@
  Comment 228 126 NOP  <||@
  Comment 229 128 NOP  <||@
  Comment 230 -1 r10|DWORD = MOVE input: int[-8731|0xffffffffffffdde5]  <||@
  Comment 236 130 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 243 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 268 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 296 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 301 [rax:0, rsi:0]at java.util.ArrayList.get(ArrayList.java:427) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 309 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 309 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 315 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
