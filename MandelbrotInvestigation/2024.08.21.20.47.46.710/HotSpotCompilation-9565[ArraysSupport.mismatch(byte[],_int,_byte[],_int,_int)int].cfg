begin_compilation
  name " HotSpotCompilation-9565[jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int)]"
  method "HotSpotCompilation-9565[jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int)]"
  date 1724269716415
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 v270 v258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 i28 v29 i40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v292 j275 ?41 ?45 v294 v296 v291 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i280 i284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v290 j273 ?41 ?45 v293 v295 v289 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i279 i283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j174 i22 ?41 ?45 i52 i73 v102 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j176 i23 ?41 ?45 i54 i75 v117 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v10 i28 i36 ?41 ?45 v46 v69 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i9 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9425538533621627
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i279 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i279  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 387
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 
=== Succesors ===
=== Usages ===
v246 i279 i280 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i279 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-24843|0xffffffffffff9ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v289 
lastLocationAccess: - 
=== Succesors ===
next: v202 
=== Usages ===
v102 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v289 lastLocationAccess: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i279 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i279  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v201 
=== Usages ===
=== Predecessor ===
i279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v199 #falseSuccessor: v201  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: i280 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-28939|0xffffffffffff8ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v291 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
v117 
=== Predecessor ===
v199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v291 lastLocationAccess: - #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i280 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
i280 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v207 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: i281 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i281  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j174 
=== Succesors ===
=== Usages ===
i281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i281 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v290 
lastLocationAccess: - 
=== Succesors ===
next: i282 
=== Usages ===
v175 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v290 lastLocationAccess: - #next: i282  <|@  <|@
f <@~|@floating>@ <|@
tid j176 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: j176 
=== Succesors ===
=== Usages ===
i282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v292 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
v175 
=== Predecessor ===
i281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v292 lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i281 
y: i282 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i281 y: i282  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.0873111378526541
stamp: void
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
i282 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v18 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j273 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j275 
=== Usages ===
j274 
=== Predecessor ===
v18 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1 #next: j275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
stamp: i64
=== Inputs ===
object: a3 
=== Succesors ===
next: i28 
=== Usages ===
j276 
=== Predecessor ===
j273 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a3 #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 21]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 25]
stamp: i32
=== Inputs ===
x: i2 
y: i21 
=== Succesors ===
=== Usages ===
j24 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j24 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i22 
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i22  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
stamp: i64
=== Inputs ===
x: j24 
y: j273 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j24 y: j273  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:392) [bci: 32]
stamp: i32
=== Inputs ===
x: i4 
y: i21 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 42]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i23 
=== Succesors ===
=== Usages ===
j276 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i23  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
stamp: i64
=== Inputs ===
x: j25 
y: j275 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j25 y: j275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
runtimeCheckedCPUFeatures: [null]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
arrayA: j274 
arrayB: j276 
length: i5 
stride: i7 
=== Succesors ===
next: v32 
=== Usages ===
v29 v33 i35 
=== Predecessor ===
j275 >@ <|@
instruction <@VectorizedMismatch|@jdk.graal.compiler.replacements.nodes.VectorizedMismatchNode>@ lastLocationAccess: - arrayA: j274 arrayB: j276 length: i5 stride: i7 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:397) [bci: 55]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i7 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i28 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:397) [bci: 55]
profileData: PROFILED designatedSuccessorProbability: 0.6748278500382555
stamp: void
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v31 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 66]
stamp: i32
=== Inputs ===
value: i28 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Not|@jdk.graal.compiler.nodes.calc.NotNode>@ value: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 67]
stamp: i32
=== Inputs ===
x: i5 
y: i35 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i5 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v38 
values: i7 i36 
=== Succesors ===
=== Usages ===
?41 i237 v69 i73 i75 i81 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v38 values: i7 i36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v37 v39 
=== Succesors ===
next: v72 
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v37 v39 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i5 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i40 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9346802133208767
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v71 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i283 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i283  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: iload
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 i40 
=== Succesors ===
=== Usages ===
v258 i283 i284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5 i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-32267|0xffffffffffff81f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?41 
guard: - 
address: v289 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
v130 v153 
=== Predecessor ===
v71 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?41 guard: - address: v289 lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 81]
stamp: i32
=== Inputs ===
x: i2 
y: i40 
=== Succesors ===
=== Usages ===
j177 v130 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i283 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i73 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v217 
=== Usages ===
=== Predecessor ===
i283 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v215 #falseSuccessor: v217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i284 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-35595|0xffffffffffff74f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?41 
guard: - 
address: v291 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
v143 v163 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?41 guard: - address: v291 lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 87]
stamp: i32
=== Inputs ===
x: i4 
y: i40 
=== Succesors ===
=== Usages ===
j179 v143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i284 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i75 y: i284  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v223 
falseSuccessor: v225 
=== Usages ===
=== Predecessor ===
i284 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v223 #falseSuccessor: v225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: i285 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i285  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i73 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j177 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v293 
lastLocationAccess: - 
=== Succesors ===
next: i286 
=== Usages ===
v178 
=== Predecessor ===
v223 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v293 lastLocationAccess: - #next: i286  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i75 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i75  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: j179 
=== Succesors ===
=== Usages ===
i286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v294 
lastLocationAccess: - 
=== Succesors ===
next: v80 
=== Usages ===
v178 
=== Predecessor ===
i285 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v294 lastLocationAccess: - #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i286 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i285 y: i286  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
profileData: PROFILED designatedSuccessorProbability: 0.386015570338616
stamp: void
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v78 
=== Usages ===
=== Predecessor ===
i286 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v79 #falseSuccessor: v78  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i64 i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
stamp: i32
=== Inputs ===
x: i40 
y: i63 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i40 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v43 
values: i81 i64 
=== Succesors ===
=== Usages ===
?45 v46 i52 i54 i237 i64 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: i81 i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v42 
=== Succesors ===
next: v51 
=== Usages ===
i95 v48 v58 v65 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v42 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i5 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i95 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v50 #falseSuccessor: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 81]
stamp: i32
=== Inputs ===
x: i2 
y: i95 
=== Succesors ===
=== Usages ===
j180 v153 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i52 
y: i283 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i52 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v227 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v227 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 87]
stamp: i32
=== Inputs ===
x: i4 
y: i95 
=== Succesors ===
=== Usages ===
j182 v163 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i284 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i284  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v231 #falseSuccessor: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: i287 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i287  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i52  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j180 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v295 
lastLocationAccess: - 
=== Succesors ===
next: i288 
=== Usages ===
v181 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v295 lastLocationAccess: - #next: i288  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: j182 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v296 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
v181 
=== Predecessor ===
i287 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v296 lastLocationAccess: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i288 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i287 y: i288  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
profileData: PROFILED designatedSuccessorProbability: 0.386015570338616
stamp: void
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
i288 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v61 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
stamp: i32
=== Inputs ===
x: i95 
y: i63 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i95 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
rawvalue: -42011
stableDimension: 0
stamp: i32 [-42011]
stampKind: i32
value: int[-42011|0xffffffffffff5be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
rawvalue: -39451
stableDimension: 0
stamp: i32 [-39451]
stampKind: i32
value: int[-39451|0xffffffffffff65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i32 [-42011 - -39451] bits:1...101xxxxx111100101
valueDescription: i32
=== Inputs ===
merge: v265 
values: i267 i272 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v265 values: i267 i272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v266 v271 
=== Succesors ===
next: v270 
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v266 v271 #next: v270  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: iload
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 i95 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5 i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
stateBefore: ?45 
actionAndReason: i268 
speculation: j243 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?45 actionAndReason: i268 speculation: j243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: i32 [-2147483648 - 2147483646]
valueDescription: i32
=== Inputs ===
merge: v84 
values: i95 i40 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v84 values: i95 i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v86 
=== Succesors ===
next: v66 
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v86 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 94]
stamp: void
=== Inputs ===
memoryMap: - 
result: i237 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
rawvalue: -36891
stableDimension: 0
stamp: i32 [-36891]
stampKind: i32
value: int[-36891|0xffffffffffff6fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
rawvalue: -33563
stableDimension: 0
stamp: i32 [-33563]
stampKind: i32
value: int[-33563|0xffffffffffff7ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i32 [-36891 - -33563] bits:1...1011x11xx11100101
valueDescription: i32
=== Inputs ===
merge: v253 
values: i262 i264 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v253 values: i262 i264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v261 v263 
=== Succesors ===
next: v258 
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v261 v263 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
stateBefore: ?41 
actionAndReason: i256 
speculation: j243 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?41 actionAndReason: i256 speculation: j243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v92 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v92 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 65]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 102]
stamp: void
=== Inputs ===
memoryMap: - 
result: i34 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:398) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:398) [bci: 60]
stamp: void
=== Inputs ===
memoryMap: - 
result: i28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:390) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:390) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: i7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
rawvalue: -30235
stableDimension: 0
stamp: i32 [-30235]
stampKind: i32
value: int[-30235|0xffffffffffff89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
rawvalue: -26395
stableDimension: 0
stamp: i32 [-26395]
stampKind: i32
value: int[-26395|0xffffffffffff98e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
v201 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: i32 [-30235 - -26395] bits:1...100x100x11100101
valueDescription: i32
=== Inputs ===
merge: v240 
values: i250 i252 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v240 values: i250 i252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v249 v251 
=== Succesors ===
next: v246 
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v249 v251 #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i244 
speculation: j243 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i244 speculation: j243  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 v270 v258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 i28 v29 i40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v292 j275 ?41 ?45 v294 v296 v291 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i280 i284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v290 j273 ?41 ?45 v293 v295 v289 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i279 i283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j174 i22 ?41 ?45 i52 i73 v102 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j176 i23 ?41 ?45 i54 i75 v117 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v10 i28 i36 ?41 ?45 v46 v69 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i9 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9425538533621627
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i279 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i279  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 387
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 
=== Succesors ===
=== Usages ===
v246 i279 i280 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i279 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-24843|0xffffffffffff9ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v289 
lastLocationAccess: - 
=== Succesors ===
next: v202 
=== Usages ===
v102 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v289 lastLocationAccess: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i279 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i279  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v201 
=== Usages ===
=== Predecessor ===
i279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v199 #falseSuccessor: v201  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: i280 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-28939|0xffffffffffff8ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v291 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
v117 
=== Predecessor ===
v199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v291 lastLocationAccess: - #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i280 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
i280 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v207 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: i281 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i281  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
result [v0|QWORD[.] + v5|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j174 
=== Succesors ===
=== Usages ===
i281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i281 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v290 
lastLocationAccess: - 
=== Succesors ===
next: i282 
=== Usages ===
v175 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v290 lastLocationAccess: - #next: i282  <|@  <|@
f <@~|@floating>@ <|@
tid j176 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
result [v2|QWORD[.] + v7|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: j176 
=== Succesors ===
=== Usages ===
i282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v292 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
v175 
=== Predecessor ===
i281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v292 lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i281 
y: i282 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i281 y: i282  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.0873111378526541
stamp: void
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
i282 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v18 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j273 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j273 <|@
result v8|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j275 
=== Usages ===
j274 
=== Predecessor ===
v18 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1 #next: j275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j275 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
stamp: i64
=== Inputs ===
object: a3 
=== Succesors ===
next: i28 
=== Usages ===
j276 
=== Predecessor ===
j273 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a3 #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 21]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 25]
stamp: i32
=== Inputs ===
x: i2 
y: i21 
=== Succesors ===
=== Usages ===
j24 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j24 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i22 
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i22  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
result v12|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
stamp: i64
=== Inputs ===
x: j24 
y: j273 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j24 y: j273  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:392) [bci: 32]
stamp: i32
=== Inputs ===
x: i4 
y: i21 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 42]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i23 
=== Succesors ===
=== Usages ===
j276 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i23  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
result v15|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
stamp: i64
=== Inputs ===
x: j25 
y: j275 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j25 y: j275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
runtimeCheckedCPUFeatures: [null]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
arrayA: j274 
arrayB: j276 
length: i5 
stride: i7 
=== Succesors ===
next: v32 
=== Usages ===
v29 v33 i35 
=== Predecessor ===
j275 >@ <|@
instruction <@VectorizedMismatch|@jdk.graal.compiler.replacements.nodes.VectorizedMismatchNode>@ lastLocationAccess: - arrayA: j274 arrayB: j276 length: i5 stride: i7 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:397) [bci: 55]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i7 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i28 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:397) [bci: 55]
profileData: PROFILED designatedSuccessorProbability: 0.6748278500382555
stamp: void
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v31 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 66]
stamp: i32
=== Inputs ===
value: i28 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Not|@jdk.graal.compiler.nodes.calc.NotNode>@ value: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 67]
stamp: i32
=== Inputs ===
x: i5 
y: i35 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i5 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i40 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v38 
values: i7 i36 
=== Succesors ===
=== Usages ===
?41 i237 v69 i73 i75 i81 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v38 values: i7 i36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v37 v39 
=== Succesors ===
next: v72 
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v37 v39 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i5 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i40 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9346802133208767
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v71 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i283 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i283  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: iload
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 i40 
=== Succesors ===
=== Usages ===
v258 i283 i284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5 i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i283 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-32267|0xffffffffffff81f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?41 
guard: - 
address: v289 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
v130 v153 
=== Predecessor ===
v71 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?41 guard: - address: v289 lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 81]
stamp: i32
=== Inputs ===
x: i2 
y: i40 
=== Succesors ===
=== Usages ===
j177 v130 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i283 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i73 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v217 
=== Usages ===
=== Predecessor ===
i283 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v215 #falseSuccessor: v217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i284 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i284 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-35595|0xffffffffffff74f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?41 
guard: - 
address: v291 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
v143 v163 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?41 guard: - address: v291 lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 87]
stamp: i32
=== Inputs ===
x: i4 
y: i40 
=== Succesors ===
=== Usages ===
j179 v143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i284 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i75 y: i284  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v223 
falseSuccessor: v225 
=== Usages ===
=== Predecessor ===
i284 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v223 #falseSuccessor: v225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: i285 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i285  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i73 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
result [v0|QWORD[.] + v21|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j177 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i285 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v293 
lastLocationAccess: - 
=== Succesors ===
next: i286 
=== Usages ===
v178 
=== Predecessor ===
v223 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v293 lastLocationAccess: - #next: i286  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i75 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i75  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
result [v2|QWORD[.] + v23|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: j179 
=== Succesors ===
=== Usages ===
i286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v294 
lastLocationAccess: - 
=== Succesors ===
next: v80 
=== Usages ===
v178 
=== Predecessor ===
i285 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v294 lastLocationAccess: - #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i286 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i285 y: i286  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
profileData: PROFILED designatedSuccessorProbability: 0.386015570338616
stamp: void
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v78 
=== Usages ===
=== Predecessor ===
i286 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v79 #falseSuccessor: v78  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i64 i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
stamp: i32
=== Inputs ===
x: i40 
y: i63 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i40 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i95 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v43 
values: i81 i64 
=== Succesors ===
=== Usages ===
?45 v46 i52 i54 i237 i64 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: i81 i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v42 
=== Succesors ===
next: v51 
=== Usages ===
i95 v48 v58 v65 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v42 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i5 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i95 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v50 #falseSuccessor: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 81]
stamp: i32
=== Inputs ===
x: i2 
y: i95 
=== Succesors ===
=== Usages ===
j180 v153 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i52 
y: i283 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i52 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v227 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v227 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 87]
stamp: i32
=== Inputs ===
x: i4 
y: i95 
=== Succesors ===
=== Usages ===
j182 v163 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i284 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i284  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v231 #falseSuccessor: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: i287 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i287  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i52  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
result [v0|QWORD[.] + v27|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j180 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i287 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v295 
lastLocationAccess: - 
=== Succesors ===
next: i288 
=== Usages ===
v181 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v295 lastLocationAccess: - #next: i288  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
result [v2|QWORD[.] + v28|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: j182 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v296 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
v181 
=== Predecessor ===
i287 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v296 lastLocationAccess: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i288 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i287 y: i288  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
profileData: PROFILED designatedSuccessorProbability: 0.386015570338616
stamp: void
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
i288 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v61 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
stamp: i32
=== Inputs ===
x: i95 
y: i63 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i95 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
result int[-42011|0xffffffffffff5be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
rawvalue: -42011
stableDimension: 0
stamp: i32 [-42011]
stampKind: i32
value: int[-42011|0xffffffffffff5be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result int[-39451|0xffffffffffff65e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
rawvalue: -39451
stableDimension: 0
stamp: i32 [-39451]
stampKind: i32
value: int[-39451|0xffffffffffff65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i268 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i32 [-42011 - -39451] bits:1...101xxxxx111100101
valueDescription: i32
=== Inputs ===
merge: v265 
values: i267 i272 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v265 values: i267 i272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v266 v271 
=== Succesors ===
next: v270 
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v266 v271 #next: v270  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: iload
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 i95 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5 i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
stateBefore: ?45 
actionAndReason: i268 
speculation: j243 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?45 actionAndReason: i268 speculation: j243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i237 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: i32 [-2147483648 - 2147483646]
valueDescription: i32
=== Inputs ===
merge: v84 
values: i95 i40 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v84 values: i95 i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v86 
=== Succesors ===
next: v66 
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v86 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 94]
stamp: void
=== Inputs ===
memoryMap: - 
result: i237 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result int[-36891|0xffffffffffff6fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
rawvalue: -36891
stableDimension: 0
stamp: i32 [-36891]
stampKind: i32
value: int[-36891|0xffffffffffff6fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
result int[-33563|0xffffffffffff7ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
rawvalue: -33563
stableDimension: 0
stamp: i32 [-33563]
stampKind: i32
value: int[-33563|0xffffffffffff7ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i256 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: i32 [-36891 - -33563] bits:1...1011x11xx11100101
valueDescription: i32
=== Inputs ===
merge: v253 
values: i262 i264 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v253 values: i262 i264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v261 v263 
=== Succesors ===
next: v258 
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v261 v263 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
stamp: void
=== Inputs ===
stateBefore: ?41 
actionAndReason: i256 
speculation: j243 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?41 actionAndReason: i256 speculation: j243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v92 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v92 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 65]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 102]
stamp: void
=== Inputs ===
memoryMap: - 
result: i34 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:398) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:398) [bci: 60]
stamp: void
=== Inputs ===
memoryMap: - 
result: i28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:390) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:390) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: i7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
result int[-30235|0xffffffffffff89e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
rawvalue: -30235
stableDimension: 0
stamp: i32 [-30235]
stampKind: i32
value: int[-30235|0xffffffffffff89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
result int[-26395|0xffffffffffff98e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
rawvalue: -26395
stableDimension: 0
stamp: i32 [-26395]
stampKind: i32
value: int[-26395|0xffffffffffff98e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
v201 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i244 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: i32 [-30235 - -26395] bits:1...100x100x11100101
valueDescription: i32
=== Inputs ===
merge: v240 
values: i250 i252 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v240 values: i250 i252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v249 v251 
=== Succesors ===
next: v246 
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v249 v251 #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i244 
speculation: j243 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i244 speculation: j243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  424  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  424  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v32|d [0, 1[[146, 148[[276, 278[[346, 348[[422, 424[[474, 476[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v4|d [0, 32[[418, 423[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v15|q [0, 30[[416, 423[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v12|q [0, 28[[414, 423[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[[420, 422[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d -1 [0, 36[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [28, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[28 MustHaveRegister 76 MustHaveRegister 114 MustHaveRegister 220 MustHaveRegister 237 LiveAtLoopEnd 290 MustHaveRegister 322 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [30, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[30 MustHaveRegister 78 ShouldHaveRegister 188 ShouldHaveRegister 237 LiveAtLoopEnd 290 MustHaveRegister 320 ShouldHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [32, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[32 MustHaveRegister 96 MustHaveRegister 116 MustHaveRegister 222 MustHaveRegister 237 LiveAtLoopEnd 302 MustHaveRegister 326 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|d [34, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[34 MustHaveRegister 98 ShouldHaveRegister 204 ShouldHaveRegister 237 LiveAtLoopEnd 302 MustHaveRegister 324 ShouldHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|d [36, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[36 MustHaveRegister 38 ShouldHaveRegister 60 MustHaveRegister 174 MustHaveRegister 237 LiveAtLoopEnd 418 ShouldHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [320, 322[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [322, 326[322 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v0|q [398, 406[398 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v2|q [400, 412[400 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [402, 404[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [404, 406[404 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|q [406, 414[406 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [408, 410[408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [410, 412[410 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v14|q [412, 416[412 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d rax|d [424, 440[[456, 474[424 MustHaveRegister 426 MustHaveRegister 440 ShouldHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v16|d [440, 443[440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v4|d [442, 445[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v18|d [50, 127[[150, 160[[478, 488[[530, 561[60 ShouldHaveRegister 78 ShouldHaveRegister 98 ShouldHaveRegister 126 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [76, 118[[150, 238[76 MustHaveRegister 80 MustHaveRegister 190 MustHaveRegister 237 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v19|d [78, 114[78 MustHaveRegister 80 ShouldHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [96, 118[[150, 238[96 MustHaveRegister 100 MustHaveRegister 206 MustHaveRegister 237 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v3|d [98, 116[98 MustHaveRegister 100 ShouldHaveRegister 116 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [114, 116[114 MustHaveRegister 116 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v19|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v25|d [164, 234[[446, 455[[562, 603[174 ShouldHaveRegister 188 ShouldHaveRegister 204 ShouldHaveRegister 234 ShouldHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v26|d [188, 220[188 MustHaveRegister 190 ShouldHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v3|d [204, 222[204 MustHaveRegister 206 ShouldHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v26|d [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [582, 598[598 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v19|d [128, 146[146 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [540, 556[556 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [508, 524[524 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v32|d [0, 1[[146, 148[[276, 278[[346, 348[[422, 424[[474, 476[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v4|d [0, 32[[418, 423[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v15|q [0, 30[[416, 423[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v12|q [0, 28[[414, 423[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[[420, 422[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d -1 [0, 36[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [28, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[28 MustHaveRegister 76 MustHaveRegister 114 MustHaveRegister 220 MustHaveRegister 237 LiveAtLoopEnd 290 MustHaveRegister 322 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rbp|d]" v1|d rdx|- [30, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[30 MustHaveRegister 78 ShouldHaveRegister 188 ShouldHaveRegister 237 LiveAtLoopEnd 290 MustHaveRegister 320 ShouldHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r13|q]" v2|q rcx|- [32, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[32 MustHaveRegister 96 MustHaveRegister 116 MustHaveRegister 222 MustHaveRegister 237 LiveAtLoopEnd 302 MustHaveRegister 326 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r14|d]" v3|d r8|d [34, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[34 MustHaveRegister 98 ShouldHaveRegister 204 ShouldHaveRegister 237 LiveAtLoopEnd 302 MustHaveRegister 324 ShouldHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [36, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[36 MustHaveRegister 38 ShouldHaveRegister 60 MustHaveRegister 174 MustHaveRegister 237 LiveAtLoopEnd 418 ShouldHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [320, 322[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [322, 326[322 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v0|q [398, 406[398 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q v2|q [400, 412[400 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [402, 404[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q -1 [404, 406[404 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rcx|q]" v12|q v11|q [406, 414[406 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [408, 410[408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [410, 412[410 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v14|q [412, 416[412 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [424, 440[[456, 474[424 MustHaveRegister 426 MustHaveRegister 440 ShouldHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [440, 443[440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v4|d [442, 445[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v18|d [50, 127[[150, 160[[478, 488[[530, 561[60 ShouldHaveRegister 78 ShouldHaveRegister 98 ShouldHaveRegister 126 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [76, 118[[150, 238[76 MustHaveRegister 80 MustHaveRegister 190 MustHaveRegister 237 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v19|d [78, 114[78 MustHaveRegister 80 ShouldHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rdx|d]" v22|d -1 [96, 118[[150, 238[96 MustHaveRegister 100 MustHaveRegister 206 MustHaveRegister 237 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v3|d [98, 116[98 MustHaveRegister 100 ShouldHaveRegister 116 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [114, 116[114 MustHaveRegister 116 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d v19|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d v25|d [164, 234[[446, 455[[562, 603[174 ShouldHaveRegister 188 ShouldHaveRegister 204 ShouldHaveRegister 234 ShouldHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [188, 220[188 MustHaveRegister 190 ShouldHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v3|d [204, 222[204 MustHaveRegister 206 ShouldHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d -1 [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d v26|d [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [582, 598[598 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v19|d [128, 146[146 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [540, 556[556 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [508, 524[524 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  424  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v32|d [0, 1[[146, 148[[276, 278[[346, 348[[422, 424[[474, 476[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v4|d [0, 32[[418, 423[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v15|q [0, 30[[416, 423[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v12|q [0, 28[[414, 423[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[[420, 422[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d -1 [0, 36[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [28, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[28 MustHaveRegister 76 MustHaveRegister 114 MustHaveRegister 220 MustHaveRegister 237 LiveAtLoopEnd 290 MustHaveRegister 322 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rbp|d]" v1|d rdx|- [30, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[30 MustHaveRegister 78 ShouldHaveRegister 188 ShouldHaveRegister 237 LiveAtLoopEnd 290 MustHaveRegister 320 ShouldHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r13|q]" v2|q rcx|- [32, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[32 MustHaveRegister 96 MustHaveRegister 116 MustHaveRegister 222 MustHaveRegister 237 LiveAtLoopEnd 302 MustHaveRegister 326 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r14|d]" v3|d r8|d [34, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[34 MustHaveRegister 98 ShouldHaveRegister 204 ShouldHaveRegister 237 LiveAtLoopEnd 302 MustHaveRegister 324 ShouldHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [36, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[36 MustHaveRegister 38 ShouldHaveRegister 60 MustHaveRegister 174 MustHaveRegister 237 LiveAtLoopEnd 418 ShouldHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [320, 322[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [322, 326[322 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v0|q [398, 406[398 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q v2|q [400, 412[400 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [402, 404[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q -1 [404, 406[404 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rcx|q]" v12|q v11|q [406, 414[406 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [408, 410[408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [410, 412[410 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v14|q [412, 416[412 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [424, 440[[456, 474[424 MustHaveRegister 426 MustHaveRegister 440 ShouldHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [440, 443[440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v4|d [442, 445[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v18|d [50, 127[[150, 160[[478, 488[[530, 561[60 ShouldHaveRegister 78 ShouldHaveRegister 98 ShouldHaveRegister 126 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [76, 118[[150, 238[76 MustHaveRegister 80 MustHaveRegister 190 MustHaveRegister 237 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v19|d [78, 114[78 MustHaveRegister 80 ShouldHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rdx|d]" v22|d -1 [96, 118[[150, 238[96 MustHaveRegister 100 MustHaveRegister 206 MustHaveRegister 237 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v3|d [98, 116[98 MustHaveRegister 100 ShouldHaveRegister 116 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [114, 116[114 MustHaveRegister 116 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d v19|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d v25|d [164, 234[[446, 455[[562, 603[174 ShouldHaveRegister 188 ShouldHaveRegister 204 ShouldHaveRegister 234 ShouldHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [188, 220[188 MustHaveRegister 190 ShouldHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v3|d [204, 222[204 MustHaveRegister 206 ShouldHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d -1 [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d v26|d [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [582, 598[598 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v19|d [128, 146[146 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [540, 556[556 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [508, 524[524 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  424  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [int[-33563|0xffffffffffff7ce5]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [int[-26395|0xffffffffffff98e5]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [int[-30235|0xffffffffffff89e5]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [int[-36891|0xffffffffffff6fe5]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [int[-42011|0xffffffffffff5be5]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [int[-39451|0xffffffffffff65e5]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v32|d [0, 1[[146, 148[[276, 278[[346, 348[[422, 424[[474, 476[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v4|d [0, 32[[418, 423[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v15|q [0, 30[[416, 423[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v12|q [0, 28[[414, 423[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[[420, 422[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d -1 [0, 36[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[422, 423[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [28, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[28 MustHaveRegister 76 MustHaveRegister 114 MustHaveRegister 220 MustHaveRegister 237 LiveAtLoopEnd 290 MustHaveRegister 322 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rbp|d]" v1|d rdx|- [30, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[30 MustHaveRegister 78 ShouldHaveRegister 188 ShouldHaveRegister 237 LiveAtLoopEnd 290 MustHaveRegister 320 ShouldHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r13|q]" v2|q rcx|- [32, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[32 MustHaveRegister 96 MustHaveRegister 116 MustHaveRegister 222 MustHaveRegister 237 LiveAtLoopEnd 302 MustHaveRegister 326 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r14|d]" v3|d r8|d [34, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[34 MustHaveRegister 98 ShouldHaveRegister 204 ShouldHaveRegister 237 LiveAtLoopEnd 302 MustHaveRegister 324 ShouldHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [36, 118[[150, 238[[280, 328[[350, 446[[478, 529[[530, 561[[562, 603[36 MustHaveRegister 38 ShouldHaveRegister 60 MustHaveRegister 174 MustHaveRegister 237 LiveAtLoopEnd 418 ShouldHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [320, 322[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [322, 326[322 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v0|q [398, 406[398 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q v2|q [400, 412[400 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [402, 404[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q -1 [404, 406[404 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rcx|q]" v12|q v11|q [406, 414[406 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [408, 410[408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [410, 412[410 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v14|q [412, 416[412 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [424, 440[[456, 474[424 MustHaveRegister 426 MustHaveRegister 440 ShouldHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [440, 443[440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v4|d [442, 445[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v18|d [50, 127[[150, 160[[478, 488[[530, 561[60 ShouldHaveRegister 78 ShouldHaveRegister 98 ShouldHaveRegister 126 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [76, 118[[150, 238[76 MustHaveRegister 80 MustHaveRegister 190 MustHaveRegister 237 LiveAtLoopEnd  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v19|d [78, 114[78 MustHaveRegister 80 ShouldHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rdx|d]" v22|d -1 [96, 118[[150, 238[96 MustHaveRegister 100 MustHaveRegister 206 MustHaveRegister 237 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v3|d [98, 116[98 MustHaveRegister 100 ShouldHaveRegister 116 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [114, 116[114 MustHaveRegister 116 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d v19|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d v25|d [164, 234[[446, 455[[562, 603[174 ShouldHaveRegister 188 ShouldHaveRegister 204 ShouldHaveRegister 234 ShouldHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [188, 220[188 MustHaveRegister 190 ShouldHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v3|d [204, 222[204 MustHaveRegister 206 ShouldHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d -1 [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d v26|d [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [582, 598[598 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v19|d [128, 146[146 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [540, 556[556 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [508, 524[524 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [v19|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  424  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction v22|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction v23|DWORD = ADD (x: v3|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v24|DWORD = MOVSXB input: [v0|QWORD[.] + v21|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: v24|DWORD, y: [v2|QWORD[.] + v23|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v25|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction v28|DWORD = ADD (x: v3|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v29|DWORD = MOVSXB input: [v0|QWORD[.] + v27|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v2|QWORD[.] + v28|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction v30|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v2|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v6|DWORD = MOVSXB input: [v0|QWORD[.] + v5|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction v7|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v2|QWORD[.] + v7|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v8|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction v9|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction v10|DWORD = LEA address: [v1|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v11|QWORD = MOVSXD value: v10|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction v12|QWORD[*] = ADD (x: v11|QWORD, y: v8|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction v13|DWORD = LEA address: [v3|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction v14|QWORD = MOVSXD value: v13|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v15|QWORD[*] = ADD (x: v14|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  424  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v17|DWORD = NOT value: v16|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction v18|DWORD = SUB (x: v4|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606664989910833338
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" 
    successors "B8" "B27" 
    xhandlers
    flags 
    probability 4606695476814485933
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B25" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B24" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4606138935427209918
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603064817099030663
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 4603083764848176984
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599819856574264430
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570046661599367308
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563742053482135334
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B13" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599843681693730029
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599781961075971788
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" 
    successors 
    xhandlers
    flags 
    probability 4600895043850523819
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589065483232210677
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B32" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B31" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4588439683262739552
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV value: rbp|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV value: r14|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587716846381579616
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4572432717202962434
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4569951069861376733
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4566997046307770617
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565164308425931343
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5] // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5] // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ st <@st|@reference-map: [rbx:0, r13:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: rbx|QWORD[.] rbp|DWORD r13|QWORD[.] r14|DWORD r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5] // MoveResolver resolve mapping <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         4
     5: bipush        7
     7: if_icmple     70
    10: aload_0       
    11: iload_1       
    12: baload        
    13: aload_2       
    14: iload_3       
    15: baload        
    16: if_icmpeq     21
    19: iconst_0      
    20: ireturn       
    21: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    24: iload_1       
    25: iadd          
    26: istore        6
    28: getstatic     #29         // jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET:int
    31: iload_3       
    32: iadd          
    33: istore        7
    35: aload_0       
    36: iload         6
    38: i2l           
    39: aload_2       
    40: iload         7
    42: i2l           
    43: iload         4
    45: getstatic     #30         // LOG2_ARRAY_BYTE_INDEX_SCALE:int
    48: invokestatic  #28         // vectorizedMismatch:(java.lang.Object, long, java.lang.Object, long, int, int)int
    51: istore        5
    53: iload         5
    55: iflt          61
    58: iload         5
    60: ireturn       
    61: iload         4
    63: iload         5
    65: iconst_m1     
    66: ixor          
    67: isub          
    68: istore        5
    70: iload         5
    72: iload         4
    74: if_icmpge     101
    77: aload_0       
    78: iload_1       
    79: iload         5
    81: iadd          
    82: baload        
    83: aload_2       
    84: iload_3       
    85: iload         5
    87: iadd          
    88: baload        
    89: if_icmpeq     95
    92: iload         5
    94: ireturn       
    95: iinc          
    98: goto          70
   101: iconst_m1     
   102: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85d0020000909090909090909090909048896c2410488bde8bea4c8be9458bf04183f9080f8d1a01000090909041ba0000000090909090453bca0f8eff0000009090909090908b730c418bc203c53bf00f86d1010000909090909090418b550c418bce4103ca3bd10f862202000090909090900fbe440310413a440d100f84280000009090909090909090909090418bc2488b6c24104883c418493ba7500400000f873e020000c5f877c39090909041ffc2e9550000006666660f1f840000000000666666900f1f4400009090909090418bc203c53bf00f86ed0100009090909090418bce4103ca3bd10f86ab01000090909090900fbe440310413a440d100f85f80000009090909041ffc290909090453bca7fb69090909090909090909090b8ffffffff488b6c24104883c418493ba7500400000f87be010000c5f877c3909090ebd4909090903b6b0c0f830501000090909090453b750c0f8326010000909090909090908bc50fbe440310418bf6413a4435100f84270000009090909090909090b800000000488b6c24104883c418493ba7500400000f876f010000c5f877c39090909090909090909090909090909090909090909090488bf3498bd58d4d104863c94803ce418d76104863f64803d6488bf1418bc941b800000000e80000000085c00f8d1a0000009090909090f7d0458bd1442bd0e936feffff909090e981feffff9090909090909090488b6c24104883c418493ba7500400000f87fe000000c5f877c390909041bbe57cffff9090909090909045899f8404000049c7879004000000000000e8000000000f1f84000000000090909041bae598ffff909090909090904589978404000049c7879004000000000000e8000000000f1f84000000000090909041bae589ffffebcf90909041bbe56fffffeb9590909041bbe55bffff9090909090909045899f8404000049c7879004000000000000e8000000000f1f84000000000090909041bbe565ffffebcf48896c2410e800000000e921fdfffff4488d0daefdffff49898f68040000e9f3fcfffff4488d0d2efeffff49898f68040000e9dffcfffff4488d0d7dfeffff49898f68040000e9cbfcfffff4488d0deefeffff49898f68040000e9b7fcfffff441c78784040000f581ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f574ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59effff49c7879004000000000000e8000000000f1f84000000000041c78784040000f58effff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 42 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD  <||@
  Comment 42 28 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 45 30 rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 47 32 r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 50 34 r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 53 38 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null  <||@
  Comment 63 block B1 null  <||@
  Comment 63 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 63 42 NOP  <||@
  Comment 64 44 NOP  <||@
  Comment 65 46 NOP  <||@
  Comment 66 -1 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 72 48 JUMP ~outgoingValues: [] destination: B1 -> B7  <||@
  Comment 72 block B7 null  <||@
  Comment 72 50 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 72 52 NOP  <||@
  Comment 73 54 NOP  <||@
  Comment 74 56 NOP  <||@
  Comment 75 58 NOP  <||@
  Comment 76 60 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD  <||@
  Comment 85 block B8 null  <||@
  Comment 85 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 85 64 NOP  <||@
  Comment 86 66 NOP  <||@
  Comment 87 68 NOP  <||@
  Comment 88 70 NOP  <||@
  Comment 89 72 NOP  <||@
  Comment 90 74 NOP  <||@
  Comment 91 76 rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70]  <||@
  Comment 91 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 91 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 78 rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 99 80 CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD  <||@
  Comment 107 block B9 null  <||@
  Comment 107 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 107 84 NOP  <||@
  Comment 108 86 NOP  <||@
  Comment 109 88 NOP  <||@
  Comment 110 90 NOP  <||@
  Comment 111 92 NOP  <||@
  Comment 112 94 NOP  <||@
  Comment 113 96 rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70]  <||@
  Comment 113 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 98 rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 123 100 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD  <||@
  Comment 131 block B10 null  <||@
  Comment 131 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 131 104 NOP  <||@
  Comment 132 106 NOP  <||@
  Comment 133 108 NOP  <||@
  Comment 134 110 NOP  <||@
  Comment 135 112 NOP  <||@
  Comment 136 114 rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD  <||@
  Comment 141 116 CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE  <||@
  Comment 152 block B22 null  <||@
  Comment 152 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 152 120 NOP  <||@
  Comment 153 122 NOP  <||@
  Comment 154 124 NOP  <||@
  Comment 155 126 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 155 block B23 null  <||@
  Comment 155 128 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 155 130 NOP  <||@
  Comment 156 132 NOP  <||@
  Comment 157 134 NOP  <||@
  Comment 158 136 NOP  <||@
  Comment 159 138 NOP  <||@
  Comment 160 140 NOP  <||@
  Comment 161 142 NOP  <||@
  Comment 162 144 NOP  <||@
  Comment 163 146 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 166 148 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 175 POLL_RETURN_FAR  <||@
  Comment 192 block B11 null  <||@
  Comment 192 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 152 NOP  <||@
  Comment 193 154 NOP  <||@
  Comment 194 156 NOP  <||@
  Comment 195 158 NOP  <||@
  Comment 196 160 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 199 162 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 204 block B13 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 204 176 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 178 NOP  <||@
  Comment 225 180 NOP  <||@
  Comment 226 182 NOP  <||@
  Comment 227 184 NOP  <||@
  Comment 228 186 NOP  <||@
  Comment 229 188 rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 234 190 CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD  <||@
  Comment 242 block B14 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 242 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 242 194 NOP  <||@
  Comment 243 196 NOP  <||@
  Comment 244 198 NOP  <||@
  Comment 245 200 NOP  <||@
  Comment 246 202 NOP  <||@
  Comment 247 204 rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 253 206 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD  <||@
  Comment 261 block B15 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 261 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 261 210 NOP  <||@
  Comment 262 212 NOP  <||@
  Comment 263 214 NOP  <||@
  Comment 264 216 NOP  <||@
  Comment 265 218 NOP  <||@
  Comment 266 220 rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD  <||@
  Comment 271 222 CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE  <||@
  Comment 282 block B16 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 282 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 282 226 NOP  <||@
  Comment 283 228 NOP  <||@
  Comment 284 230 NOP  <||@
  Comment 285 232 NOP  <||@
  Comment 286 234 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 289 236 JUMP ~outgoingValues: [] destination: B16 -> B12  <||@
  Comment 289 block B12 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 289 164 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 289 166 NOP  <||@
  Comment 290 168 NOP  <||@
  Comment 291 170 NOP  <||@
  Comment 292 172 NOP  <||@
  Comment 293 174 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD  <||@
  Comment 298 block B18 null  <||@
  Comment 298 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 298 240 NOP  <||@
  Comment 299 242 NOP  <||@
  Comment 300 244 NOP  <||@
  Comment 301 246 JUMP ~outgoingValues: [] destination: B18 -> B28  <||@
  Comment 301 block B28 null  <||@
  Comment 301 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 301 260 NOP  <||@
  Comment 302 262 NOP  <||@
  Comment 303 264 NOP  <||@
  Comment 304 266 NOP  <||@
  Comment 305 268 NOP  <||@
  Comment 306 270 NOP  <||@
  Comment 307 272 NOP  <||@
  Comment 308 274 NOP  <||@
  Comment 309 276 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 314 278 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 323 POLL_RETURN_FAR  <||@
  Comment 340 block B27 null  <||@
  Comment 340 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 250 NOP  <||@
  Comment 341 252 NOP  <||@
  Comment 342 254 NOP  <||@
  Comment 343 256 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 345 block B2 null  <||@
  Comment 345 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 345 282 NOP  <||@
  Comment 346 284 NOP  <||@
  Comment 347 286 NOP  <||@
  Comment 348 288 NOP  <||@
  Comment 349 290 CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0]  <||@
  Comment 349 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 349 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 358 block B3 null  <||@
  Comment 358 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 358 294 NOP  <||@
  Comment 359 296 NOP  <||@
  Comment 360 298 NOP  <||@
  Comment 361 300 NOP  <||@
  Comment 362 302 CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0]  <||@
  Comment 362 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 362 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 372 block B4 null  <||@
  Comment 372 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 372 306 NOP  <||@
  Comment 373 308 NOP  <||@
  Comment 374 310 NOP  <||@
  Comment 375 312 NOP  <||@
  Comment 376 314 NOP  <||@
  Comment 377 316 NOP  <||@
  Comment 378 318 NOP  <||@
  Comment 379 320 rax|QWORD = MOV value: rbp|DWORD size: DWORD  <||@
  Comment 381 322 rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD  <||@
  Comment 386 324 rsi|QWORD = MOV value: r14|DWORD size: DWORD  <||@
  Comment 389 326 CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE  <||@
  Comment 400 block B30 null  <||@
  Comment 400 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 400 330 NOP  <||@
  Comment 401 332 NOP  <||@
  Comment 402 334 NOP  <||@
  Comment 403 336 NOP  <||@
  Comment 404 338 NOP  <||@
  Comment 405 340 NOP  <||@
  Comment 406 342 NOP  <||@
  Comment 407 344 NOP  <||@
  Comment 408 346 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 413 348 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 422 POLL_RETURN_FAR  <||@
  Comment 439 block B5 null  <||@
  Comment 439 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 439 352 NOP  <||@
  Comment 440 354 NOP  <||@
  Comment 441 356 NOP  <||@
  Comment 442 358 NOP  <||@
  Comment 443 360 NOP  <||@
  Comment 444 362 NOP  <||@
  Comment 445 364 NOP  <||@
  Comment 446 366 NOP  <||@
  Comment 447 368 NOP  <||@
  Comment 448 370 NOP  <||@
  Comment 449 372 NOP  <||@
  Comment 450 374 NOP  <||@
  Comment 451 376 NOP  <||@
  Comment 452 378 NOP  <||@
  Comment 453 380 NOP  <||@
  Comment 454 382 NOP  <||@
  Comment 455 384 NOP  <||@
  Comment 456 386 NOP  <||@
  Comment 457 388 NOP  <||@
  Comment 458 390 NOP  <||@
  Comment 459 392 NOP  <||@
  Comment 460 394 NOP  <||@
  Comment 461 396 NOP  <||@
  Comment 462 398 rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 465 400 rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 468 402 rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD  <||@
  Comment 471 404 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 474 406 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 477 408 rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD  <||@
  Comment 481 410 rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD  <||@
  Comment 484 412 rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 487 414 rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 490 416 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 490 418 rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 493 420 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 499 422 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL  <||@
  Comment 499 {Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 504 426 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD  <||@
  Comment 512 block B6 null  <||@
  Comment 512 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 512 430 NOP  <||@
  Comment 513 432 NOP  <||@
  Comment 514 434 NOP  <||@
  Comment 515 436 NOP  <||@
  Comment 516 438 NOP  <||@
  Comment 517 440 rax|DWORD = NOT value: rax|DWORD size: DWORD  <||@
  Comment 519 442 r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 525 444 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 530 block B17 null  <||@
  Comment 530 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 448 NOP  <||@
  Comment 531 450 NOP  <||@
  Comment 532 452 NOP  <||@
  Comment 533 454 JUMP ~outgoingValues: [] destination: B17 -> B23  <||@
  Comment 538 block B29 null  <||@
  Comment 538 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 538 458 NOP  <||@
  Comment 539 460 NOP  <||@
  Comment 540 462 NOP  <||@
  Comment 541 464 NOP  <||@
  Comment 542 466 NOP  <||@
  Comment 543 468 NOP  <||@
  Comment 544 470 NOP  <||@
  Comment 545 472 NOP  <||@
  Comment 546 476 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 555 POLL_RETURN_FAR  <||@
  Comment 572 block B25 null  <||@
  Comment 572 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 572 480 NOP  <||@
  Comment 573 482 NOP  <||@
  Comment 574 484 NOP  <||@
  Comment 575 -1 r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5]  <||@
  Comment 581 486 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 581 block B26 null  <||@
  Comment 581 540 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 581 542 NOP  <||@
  Comment 582 544 NOP  <||@
  Comment 583 546 NOP  <||@
  Comment 584 548 NOP  <||@
  Comment 585 550 NOP  <||@
  Comment 586 552 NOP  <||@
  Comment 587 554 NOP  <||@
  Comment 588 556 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 595 558 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 606 560 DEOPT info [bci:70]  <||@
  Comment 606 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 611 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 619 block B32 null  <||@
  Comment 619 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 619 490 NOP  <||@
  Comment 620 492 NOP  <||@
  Comment 621 494 NOP  <||@
  Comment 622 -1 r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5]  <||@
  Comment 628 496 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 628 block B33 null  <||@
  Comment 628 508 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 628 510 NOP  <||@
  Comment 629 512 NOP  <||@
  Comment 630 514 NOP  <||@
  Comment 631 516 NOP  <||@
  Comment 632 518 NOP  <||@
  Comment 633 520 NOP  <||@
  Comment 634 522 NOP  <||@
  Comment 635 524 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 642 526 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 653 528 DEOPT info [bci:0]  <||@
  Comment 653 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 658 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 666 block B31 null  <||@
  Comment 666 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 500 NOP  <||@
  Comment 667 502 NOP  <||@
  Comment 668 504 NOP  <||@
  Comment 669 -1 r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5]  <||@
  Comment 675 506 JUMP ~outgoingValues: [] destination: B31 -> B33  <||@
  Comment 677 block B24 null  <||@
  Comment 677 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 677 532 NOP  <||@
  Comment 678 534 NOP  <||@
  Comment 679 536 NOP  <||@
  Comment 680 -1 r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5]  <||@
  Comment 686 538 JUMP ~outgoingValues: [] destination: B24 -> B26  <||@
  Comment 688 block B19 null  <||@
  Comment 688 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 688 564 NOP  <||@
  Comment 689 566 NOP  <||@
  Comment 690 568 NOP  <||@
  Comment 691 -1 r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5]  <||@
  Comment 697 570 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 697 block B21 null  <||@
  Comment 697 582 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 697 584 NOP  <||@
  Comment 698 586 NOP  <||@
  Comment 699 588 NOP  <||@
  Comment 700 590 NOP  <||@
  Comment 701 592 NOP  <||@
  Comment 702 594 NOP  <||@
  Comment 703 596 NOP  <||@
  Comment 704 598 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 711 600 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 722 602 DEOPT info [bci:70]  <||@
  Comment 722 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 727 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 735 block B20 null  <||@
  Comment 735 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 735 574 NOP  <||@
  Comment 736 576 NOP  <||@
  Comment 737 578 NOP  <||@
  Comment 738 -1 r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5]  <||@
  Comment 744 580 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 751 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 776 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 796 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 816 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 836 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 864 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 869 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 904 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 934 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 939 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 969 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 974 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 982 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 982 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 988 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9565[jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int)]"
  method "HotSpotCompilation-9565[jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int)]"
  date 1724269717041
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ab3f220 89842400c0feff4883ec189041817f20000000000f85d0020000909090909090909090909048896c2410488bde8bea4c8be9458bf04183f9080f8d1a01000090909041ba0000000090909090453bca0f8eff0000009090909090908b730c418bc203c53bf00f86d1010000909090909090418b550c418bce4103ca3bd10f862202000090909090900fbe440310413a440d100f84280000009090909090909090909090418bc2488b6c24104883c418493ba7500400000f873e020000c5f877c39090909041ffc2e9550000006666660f1f840000000000666666900f1f4400009090909090418bc203c53bf00f86ed0100009090909090418bce4103ca3bd10f86ab01000090909090900fbe440310413a440d100f85f80000009090909041ffc290909090453bca7fb69090909090909090909090b8ffffffff488b6c24104883c418493ba7500400000f87be010000c5f877c3909090ebd4909090903b6b0c0f830501000090909090453b750c0f8326010000909090909090908bc50fbe440310418bf6413a4435100f84270000009090909090909090b800000000488b6c24104883c418493ba7500400000f876f010000c5f877c39090909090909090909090909090909090909090909090488bf3498bd58d4d104863c94803ce418d76104863f64803d6488bf1418bc941b800000000e868d9d9fe85c00f8d1a0000009090909090f7d0458bd1442bd0e936feffff909090e981feffff9090909090909090488b6c24104883c418493ba7500400000f87fe000000c5f877c390909041bbe57cffff9090909090909045899f8404000049c7879004000000000000e8f7bcc4fe0f1f84000000000090909041bae598ffff909090909090904589978404000049c7879004000000000000e8c8bcc4fe0f1f84000000000090909041bae589ffffebcf90909041bbe56fffffeb9590909041bbe55bffff9090909090909045899f8404000049c7879004000000000000e883bcc4fe0f1f84000000000090909041bbe565ffffebcf48896c2410e80cbdc2fee921fdfffff4488d0daefdffff49898f68040000e9d3cac4fef4488d0d2efeffff49898f68040000e9bfcac4fef4488d0d7dfeffff49898f68040000e9abcac4fef4488d0deefeffff49898f68040000e997cac4fef441c78784040000f581ffff49c7879004000000000000e8f5bbc4fe0f1f84000000000041c78784040000f574ffff49c7879004000000000000e8d2bbc4fe0f1f84000000000041c78784040000f59effff49c7879004000000000000e8afbbc4fe0f1f84000000000041c78784040000f58effff49c7879004000000000000e88cbbc4fe0f1f840000000000e8055dd8fef4e81fb9c4fef4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 42 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69a0a9ea slotKind: QWORD  <||@
  Comment 42 28 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 45 30 rbp|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 47 32 r13|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 50 34 r14|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 53 38 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9425538533621627 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 8 size: DWORD inlinedY: null  <||@
  Comment 63 block B1 null  <||@
  Comment 63 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 63 42 NOP  <||@
  Comment 64 44 NOP  <||@
  Comment 65 46 NOP  <||@
  Comment 66 -1 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 72 48 JUMP ~outgoingValues: [] destination: B1 -> B7  <||@
  Comment 72 block B7 null  <||@
  Comment 72 50 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 72 52 NOP  <||@
  Comment 73 54 NOP  <||@
  Comment 74 56 NOP  <||@
  Comment 75 58 NOP  <||@
  Comment 76 60 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9346802133208767 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B27 size: DWORD  <||@
  Comment 85 block B8 null  <||@
  Comment 85 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 85 64 NOP  <||@
  Comment 86 66 NOP  <||@
  Comment 87 68 NOP  <||@
  Comment 88 70 NOP  <||@
  Comment 89 72 NOP  <||@
  Comment 90 74 NOP  <||@
  Comment 91 76 rsi|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:70]  <||@
  Comment 91 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 91 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 78 rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 99 80 CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B25 size: DWORD  <||@
  Comment 107 block B9 null  <||@
  Comment 107 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 107 84 NOP  <||@
  Comment 108 86 NOP  <||@
  Comment 109 88 NOP  <||@
  Comment 110 90 NOP  <||@
  Comment 111 92 NOP  <||@
  Comment 112 94 NOP  <||@
  Comment 113 96 rdx|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD state [bci:70]  <||@
  Comment 113 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 98 rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 123 100 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B24 size: DWORD  <||@
  Comment 131 block B10 null  <||@
  Comment 131 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 131 104 NOP  <||@
  Comment 132 106 NOP  <||@
  Comment 133 108 NOP  <||@
  Comment 134 110 NOP  <||@
  Comment 135 112 NOP  <||@
  Comment 136 114 rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD  <||@
  Comment 141 116 CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 size: BYTE  <||@
  Comment 152 block B22 null  <||@
  Comment 152 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 152 120 NOP  <||@
  Comment 153 122 NOP  <||@
  Comment 154 124 NOP  <||@
  Comment 155 126 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 155 block B23 null  <||@
  Comment 155 128 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 155 130 NOP  <||@
  Comment 156 132 NOP  <||@
  Comment 157 134 NOP  <||@
  Comment 158 136 NOP  <||@
  Comment 159 138 NOP  <||@
  Comment 160 140 NOP  <||@
  Comment 161 142 NOP  <||@
  Comment 162 144 NOP  <||@
  Comment 163 146 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 166 148 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 175 POLL_RETURN_FAR  <||@
  Comment 192 block B11 null  <||@
  Comment 192 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 152 NOP  <||@
  Comment 193 154 NOP  <||@
  Comment 194 156 NOP  <||@
  Comment 195 158 NOP  <||@
  Comment 196 160 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 199 162 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 204 block B13 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 204 176 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 178 NOP  <||@
  Comment 225 180 NOP  <||@
  Comment 226 182 NOP  <||@
  Comment 227 184 NOP  <||@
  Comment 228 186 NOP  <||@
  Comment 229 188 rax|DWORD = ADD (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 234 190 CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B20 size: DWORD  <||@
  Comment 242 block B14 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 242 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 242 194 NOP  <||@
  Comment 243 196 NOP  <||@
  Comment 244 198 NOP  <||@
  Comment 245 200 NOP  <||@
  Comment 246 202 NOP  <||@
  Comment 247 204 rcx|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 253 206 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B19 size: DWORD  <||@
  Comment 261 block B15 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 261 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 261 210 NOP  <||@
  Comment 262 212 NOP  <||@
  Comment 263 214 NOP  <||@
  Comment 264 216 NOP  <||@
  Comment 265 218 NOP  <||@
  Comment 266 220 rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD  <||@
  Comment 271 222 CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rcx|DWORD * 1 + 16]) trueDestinationProbability: 0.386015570338616 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: BYTE  <||@
  Comment 282 block B16 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 282 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 282 226 NOP  <||@
  Comment 283 228 NOP  <||@
  Comment 284 230 NOP  <||@
  Comment 285 232 NOP  <||@
  Comment 286 234 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 289 236 JUMP ~outgoingValues: [] destination: B16 -> B12  <||@
  Comment 289 block B12 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 289 164 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 289 166 NOP  <||@
  Comment 290 168 NOP  <||@
  Comment 291 170 NOP  <||@
  Comment 292 172 NOP  <||@
  Comment 293 174 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B18 size: DWORD  <||@
  Comment 298 block B18 null  <||@
  Comment 298 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 298 240 NOP  <||@
  Comment 299 242 NOP  <||@
  Comment 300 244 NOP  <||@
  Comment 301 246 JUMP ~outgoingValues: [] destination: B18 -> B28  <||@
  Comment 301 block B28 null  <||@
  Comment 301 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 301 260 NOP  <||@
  Comment 302 262 NOP  <||@
  Comment 303 264 NOP  <||@
  Comment 304 266 NOP  <||@
  Comment 305 268 NOP  <||@
  Comment 306 270 NOP  <||@
  Comment 307 272 NOP  <||@
  Comment 308 274 NOP  <||@
  Comment 309 276 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 314 278 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 323 POLL_RETURN_FAR  <||@
  Comment 340 block B27 null  <||@
  Comment 340 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 250 NOP  <||@
  Comment 341 252 NOP  <||@
  Comment 342 254 NOP  <||@
  Comment 343 256 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 345 block B2 null  <||@
  Comment 345 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 345 282 NOP  <||@
  Comment 346 284 NOP  <||@
  Comment 347 286 NOP  <||@
  Comment 348 288 NOP  <||@
  Comment 349 290 CMPBRANCH (x: rbp|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B32 size: DWORD state [bci:0]  <||@
  Comment 349 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 349 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 358 block B3 null  <||@
  Comment 358 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 358 294 NOP  <||@
  Comment 359 296 NOP  <||@
  Comment 360 298 NOP  <||@
  Comment 361 300 NOP  <||@
  Comment 362 302 CMPBRANCH (x: r14|DWORD, y: [r13|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B31 size: DWORD state [bci:0]  <||@
  Comment 362 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 362 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 372 block B4 null  <||@
  Comment 372 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 372 306 NOP  <||@
  Comment 373 308 NOP  <||@
  Comment 374 310 NOP  <||@
  Comment 375 312 NOP  <||@
  Comment 376 314 NOP  <||@
  Comment 377 316 NOP  <||@
  Comment 378 318 NOP  <||@
  Comment 379 320 rax|QWORD = MOV value: rbp|DWORD size: DWORD  <||@
  Comment 381 322 rax|DWORD = MOVSXB input: [rbx|QWORD[.] + rax|QWORD * 1 + 16] size: DWORD  <||@
  Comment 386 324 rsi|QWORD = MOV value: r14|DWORD size: DWORD  <||@
  Comment 389 326 CMPBRANCH (x: rax|DWORD, y: [r13|QWORD[.] + rsi|QWORD * 1 + 16]) trueDestinationProbability: 0.0873111378526541 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: BYTE  <||@
  Comment 400 block B30 null  <||@
  Comment 400 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 400 330 NOP  <||@
  Comment 401 332 NOP  <||@
  Comment 402 334 NOP  <||@
  Comment 403 336 NOP  <||@
  Comment 404 338 NOP  <||@
  Comment 405 340 NOP  <||@
  Comment 406 342 NOP  <||@
  Comment 407 344 NOP  <||@
  Comment 408 346 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 413 348 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 422 POLL_RETURN_FAR  <||@
  Comment 439 block B5 null  <||@
  Comment 439 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 439 352 NOP  <||@
  Comment 440 354 NOP  <||@
  Comment 441 356 NOP  <||@
  Comment 442 358 NOP  <||@
  Comment 443 360 NOP  <||@
  Comment 444 362 NOP  <||@
  Comment 445 364 NOP  <||@
  Comment 446 366 NOP  <||@
  Comment 447 368 NOP  <||@
  Comment 448 370 NOP  <||@
  Comment 449 372 NOP  <||@
  Comment 450 374 NOP  <||@
  Comment 451 376 NOP  <||@
  Comment 452 378 NOP  <||@
  Comment 453 380 NOP  <||@
  Comment 454 382 NOP  <||@
  Comment 455 384 NOP  <||@
  Comment 456 386 NOP  <||@
  Comment 457 388 NOP  <||@
  Comment 458 390 NOP  <||@
  Comment 459 392 NOP  <||@
  Comment 460 394 NOP  <||@
  Comment 461 396 NOP  <||@
  Comment 462 398 rsi|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 465 400 rdx|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 468 402 rcx|DWORD = LEA address: [rbp|DWORD + 16] size: DWORD  <||@
  Comment 471 404 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 474 406 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 477 408 rsi|DWORD = LEA address: [r14|DWORD + 16] size: DWORD  <||@
  Comment 481 410 rsi|QWORD = MOVSXD value: rsi|DWORD size: QWORD  <||@
  Comment 484 412 rdx|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 487 414 rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 490 416 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 490 418 rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 493 420 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 499 422 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL  <||@
  Comment 499 {Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 504 426 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748278500382555 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD  <||@
  Comment 512 block B6 null  <||@
  Comment 512 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 512 430 NOP  <||@
  Comment 513 432 NOP  <||@
  Comment 514 434 NOP  <||@
  Comment 515 436 NOP  <||@
  Comment 516 438 NOP  <||@
  Comment 517 440 rax|DWORD = NOT value: rax|DWORD size: DWORD  <||@
  Comment 519 442 r10|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 525 444 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 530 block B17 null  <||@
  Comment 530 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 448 NOP  <||@
  Comment 531 450 NOP  <||@
  Comment 532 452 NOP  <||@
  Comment 533 454 JUMP ~outgoingValues: [] destination: B17 -> B23  <||@
  Comment 538 block B29 null  <||@
  Comment 538 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 538 458 NOP  <||@
  Comment 539 460 NOP  <||@
  Comment 540 462 NOP  <||@
  Comment 541 464 NOP  <||@
  Comment 542 466 NOP  <||@
  Comment 543 468 NOP  <||@
  Comment 544 470 NOP  <||@
  Comment 545 472 NOP  <||@
  Comment 546 476 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 555 POLL_RETURN_FAR  <||@
  Comment 572 block B25 null  <||@
  Comment 572 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 572 480 NOP  <||@
  Comment 573 482 NOP  <||@
  Comment 574 484 NOP  <||@
  Comment 575 -1 r11|DWORD = MOVE input: int[-33563|0xffffffffffff7ce5]  <||@
  Comment 581 486 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 581 block B26 null  <||@
  Comment 581 540 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 581 542 NOP  <||@
  Comment 582 544 NOP  <||@
  Comment 583 546 NOP  <||@
  Comment 584 548 NOP  <||@
  Comment 585 550 NOP  <||@
  Comment 586 552 NOP  <||@
  Comment 587 554 NOP  <||@
  Comment 588 556 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 595 558 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 606 560 DEOPT info [bci:70]  <||@
  Comment 606 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 611 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 619 block B32 null  <||@
  Comment 619 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 619 490 NOP  <||@
  Comment 620 492 NOP  <||@
  Comment 621 494 NOP  <||@
  Comment 622 -1 r10|DWORD = MOVE input: int[-26395|0xffffffffffff98e5]  <||@
  Comment 628 496 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 628 block B33 null  <||@
  Comment 628 508 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 628 510 NOP  <||@
  Comment 629 512 NOP  <||@
  Comment 630 514 NOP  <||@
  Comment 631 516 NOP  <||@
  Comment 632 518 NOP  <||@
  Comment 633 520 NOP  <||@
  Comment 634 522 NOP  <||@
  Comment 635 524 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 642 526 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 653 528 DEOPT info [bci:0]  <||@
  Comment 653 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 658 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 666 block B31 null  <||@
  Comment 666 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 500 NOP  <||@
  Comment 667 502 NOP  <||@
  Comment 668 504 NOP  <||@
  Comment 669 -1 r10|DWORD = MOVE input: int[-30235|0xffffffffffff89e5]  <||@
  Comment 675 506 JUMP ~outgoingValues: [] destination: B31 -> B33  <||@
  Comment 677 block B24 null  <||@
  Comment 677 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 677 532 NOP  <||@
  Comment 678 534 NOP  <||@
  Comment 679 536 NOP  <||@
  Comment 680 -1 r11|DWORD = MOVE input: int[-36891|0xffffffffffff6fe5]  <||@
  Comment 686 538 JUMP ~outgoingValues: [] destination: B24 -> B26  <||@
  Comment 688 block B19 null  <||@
  Comment 688 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 688 564 NOP  <||@
  Comment 689 566 NOP  <||@
  Comment 690 568 NOP  <||@
  Comment 691 -1 r11|DWORD = MOVE input: int[-42011|0xffffffffffff5be5]  <||@
  Comment 697 570 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 697 block B21 null  <||@
  Comment 697 582 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 697 584 NOP  <||@
  Comment 698 586 NOP  <||@
  Comment 699 588 NOP  <||@
  Comment 700 590 NOP  <||@
  Comment 701 592 NOP  <||@
  Comment 702 594 NOP  <||@
  Comment 703 596 NOP  <||@
  Comment 704 598 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 711 600 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 722 602 DEOPT info [bci:70]  <||@
  Comment 722 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 727 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 735 block B20 null  <||@
  Comment 735 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 735 574 NOP  <||@
  Comment 736 576 NOP  <||@
  Comment 737 578 NOP  <||@
  Comment 738 -1 r11|DWORD = MOVE input: int[-39451|0xffffffffffff65e5]  <||@
  Comment 744 580 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 751 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 776 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 796 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 816 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 836 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 864 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 869 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 904 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5          |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 934 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 939 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 969 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 974 [rbx:0, r13:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:387) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3          |4         |5  |6  |7 
     locals:  |rbx|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r14|DWORD  |r9|DWORD  |-  |-  |-   <||@
  Comment 982 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 982 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 988 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
