begin_compilation
  name " HotSpotCompilation-11116[org.graalvm.collections.EconomicMapImpl.setRawValue(int, Object)]"
  method "HotSpotCompilation-11116[org.graalvm.collections.EconomicMapImpl.setRawValue(int, Object)]"
  date 1724269754919
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a189 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a189  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v196 ?152 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a189 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
lastLocationAccess: - 
=== Succesors ===
next: i190 
=== Usages ===
a15 v197 v206 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v196 lastLocationAccess: - #next: i190  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i7 ?152 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a38 v207 ?152 v29 v180 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 816
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
v208 i190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a189 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-4363|0xffffffffffffeef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v197 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
v22 
=== Predecessor ===
a189 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v197 lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a189 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v183 
=== Predecessor ===
i190 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i7 i8 i101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 6]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i2 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 8]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i7 
y: i6 
=== Succesors ===
=== Usages ===
j41 v22 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i7 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i190 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i8 y: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v48 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
v39 
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:200) [bci: 15] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v58 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:201) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v147  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:208) [bci: 35] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v191 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v183 
index: - 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v183 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v198 
lastLocationAccess: - 
=== Succesors ===
next: i110 
=== Usages ===
v114 v97 v200 v72 v79 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v198 lastLocationAccess: - #next: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v192 
index: - 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v192 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v200 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
v69 j70 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v200 lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
=== Succesors ===
next: v194 
=== Usages ===
v186 
=== Predecessor ===
i110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v193 
=== Succesors ===
=== Usages ===
v201 v79 v202 v205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v193  <|@  <|@
f <@~|@floating>@ <|@
tid j70 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i110 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v186 
index: j70 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v186 index: j70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v201 
lastLocationAccess: - 
=== Succesors ===
next: v75 
=== Usages ===
v72 
=== Predecessor ===
v193 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v201 lastLocationAccess: - #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v192 
y: v194 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v192 y: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v74 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i68 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i110 y: i68  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v77 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v186 
y: v192 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v186 y: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v81 #falseSuccessor: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j111 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j111  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: v186 
index: - 
=== Succesors ===
=== Usages ===
j111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j111 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
lastLocationAccess: - 
=== Succesors ===
next: i112 
=== Usages ===
v203 v204 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v202 lastLocationAccess: - #next: i112  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j111 
index: - 
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: MetaspaceArrayLength:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:112) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v203 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
v88 
=== Predecessor ===
j111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v203 lastLocationAccess: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
i112 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i56 i101 
=== Succesors ===
=== Usages ===
v88 j92 i101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v86 values: i56 i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v85 
=== Succesors ===
next: v91 
=== Usages ===
i87 v89 v98 v102 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v85 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i112 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i112  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v90 #falseSuccessor: v89  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j113 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j113  <|@  <|@
f <@~|@floating>@ <|@
tid j92 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i87 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: j111 
index: j92 
=== Succesors ===
=== Usages ===
j113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j111 index: j92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j113 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v204 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
v96 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v204 lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*
=== Inputs ===
input: j113 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j113  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 73]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v96 
y: v192 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v96 y: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 79]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
j113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32
=== Inputs ===
x: i87 
y: i6 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i87 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 82]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v186 
index: - 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 93]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
lastLocationAccess: - 
value: v192 
stateAfter: - 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v205 lastLocationAccess: - value: v192 stateAfter: - #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v114 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:120) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v147 v120 v126 v127 
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v147 v120 v126 v127 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 1]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a189 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a189  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i8 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a15 
index: j41 
=== Succesors ===
=== Usages ===
v39 v178 v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a15 index: j41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
precise: true
stamp: void
=== Inputs ===
address: v199 
value: - 
stateBefore: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v199 value: - stateBefore: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v48 
address: v199 
lastLocationAccess: - 
value: a38 
stateAfter: - 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v48 address: v199 lastLocationAccess: - value: a38 stateAfter: - #next: v180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
precise: true
stamp: void
=== Inputs ===
address: v199 
value: a3 
object: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v199 value: a3 object: - #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:817) [bci: 11]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v158 v163 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v158 v163 #next: v53  <|@  <|@
tid ?152 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
sourceFile: EconomicMapImpl.java
sourceLine: 816
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 40
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?152 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?152  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 23
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?4  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a189 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a189  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v196 ?152 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a189 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
lastLocationAccess: - 
=== Succesors ===
next: i190 
=== Usages ===
a15 v197 v206 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v196 lastLocationAccess: - #next: i190  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i7 ?152 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a38 v207 ?152 v29 v180 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 816
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
v208 i190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a189 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i190 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-4363|0xffffffffffffeef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v197 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
v22 
=== Predecessor ===
a189 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v197 lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
result [v3|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a189 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v183 
=== Predecessor ===
i190 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i7 i8 i101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 6]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i2 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 8]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i7 
y: i6 
=== Succesors ===
=== Usages ===
j41 v22 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i7 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i190 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i8 y: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v48 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
v39 
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:200) [bci: 15] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v58 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:201) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v147  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:208) [bci: 35] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v191 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
result [v8|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v183 
index: - 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v183 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v198 
lastLocationAccess: - 
=== Succesors ===
next: i110 
=== Usages ===
v114 v97 v200 v72 v79 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v198 lastLocationAccess: - #next: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
result [v10|QWORD + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v192 
index: - 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v192 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i110 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v200 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
v69 j70 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v200 lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
lastLocationAccess: - 
=== Succesors ===
next: v194 
=== Usages ===
v186 
=== Predecessor ===
i110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 lastLocationAccess: - #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v193 
=== Succesors ===
=== Usages ===
v201 v79 v202 v205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v193  <|@  <|@
f <@~|@floating>@ <|@
tid j70 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i110 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
result [v13|QWORD + v15|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v186 
index: j70 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v186 index: j70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v201 
lastLocationAccess: - 
=== Succesors ===
next: v75 
=== Usages ===
v72 
=== Predecessor ===
v193 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v201 lastLocationAccess: - #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v192 
y: v194 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v192 y: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v74 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i68 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i110 y: i68  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v77 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v186 
y: v192 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v186 y: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v81 #falseSuccessor: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j111 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j111  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
result [v13|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: v186 
index: - 
=== Succesors ===
=== Usages ===
j111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j111 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
lastLocationAccess: - 
=== Succesors ===
next: i112 
=== Usages ===
v203 v204 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v202 lastLocationAccess: - #next: i112  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
result [v16|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j111 
index: - 
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i112 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: MetaspaceArrayLength:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:112) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v203 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
v88 
=== Predecessor ===
j111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v203 lastLocationAccess: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
i112 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i56 i101 
=== Succesors ===
=== Usages ===
v88 j92 i101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v86 values: i56 i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v85 
=== Succesors ===
next: v91 
=== Usages ===
i87 v89 v98 v102 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v85 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i112 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i112  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v90 #falseSuccessor: v89  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j113 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j113  <|@  <|@
f <@~|@floating>@ <|@
tid j92 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i87 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
result [v16|QWORD + v19|QWORD * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: j111 
index: j92 
=== Succesors ===
=== Usages ===
j113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j111 index: j92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j113 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v204 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
v96 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v204 lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: Klass*
=== Inputs ===
input: j113 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j113  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 73]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v96 
y: v192 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v96 y: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 79]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
j113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: i32
=== Inputs ===
x: i87 
y: i6 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i87 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 82]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
result [v13|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v186 
index: - 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 93]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
lastLocationAccess: - 
value: v192 
stateAfter: - 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v205 lastLocationAccess: - value: v192 stateAfter: - #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v114 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:120) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v147 v120 v126 v127 
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v147 v120 v126 v127 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 1]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a189 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a189  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i8 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
result [v22|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a15 
index: j41 
=== Succesors ===
=== Usages ===
v39 v178 v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a15 index: j41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
precise: true
stamp: void
=== Inputs ===
address: v199 
value: - 
stateBefore: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v199 value: - stateBefore: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v48 
address: v199 
lastLocationAccess: - 
value: a38 
stateAfter: - 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v48 address: v199 lastLocationAccess: - value: a38 stateAfter: - #next: v180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
precise: true
stamp: void
=== Inputs ===
address: v199 
value: a3 
object: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v199 value: a3 object: - #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:817) [bci: 11]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v158 v163 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v158 v163 #next: v53  <|@  <|@
tid ?152 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
sourceFile: EconomicMapImpl.java
sourceLine: 816
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 40
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?152 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 23
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?4  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 38[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 36[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 34[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [34, 134[[144, 220[[240, 271[[432, 453[34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [36, 134[[144, 220[[240, 271[[432, 453[36 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|q [38, 271[[272, 429[[432, 453[38 MustHaveRegister 62 MustHaveRegister 102 MustHaveRegister 422 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [40, 124[[134, 240[[272, 418[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [42, 50[42 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [44, 96[44 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v1|d [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v6|d [48, 124[[134, 240[[272, 426[48 MustHaveRegister 50 ShouldHaveRegister 420 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v5|d [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [94, 97[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [98, 124[[144, 220[[272, 282[98 MustHaveRegister 100 MustHaveRegister 110 MustHaveRegister 154 MustHaveRegister 204 MustHaveRegister 219 LiveAtLoopEnd 282 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [100, 122[100 MustHaveRegister 108 ShouldHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [106, 124[[144, 220[[272, 282[106 MustHaveRegister 110 MustHaveRegister 154 ShouldHaveRegister 168 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [168, 220[168 MustHaveRegister 170 MustHaveRegister 202 MustHaveRegister 219 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [170, 220[170 MustHaveRegister 184 MustHaveRegister 219 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v21|d [174, 216[184 ShouldHaveRegister 200 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [200, 202[200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v18|d [216, 219[216 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v3|d [418, 426[418 MustHaveRegister 420 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [420, 421[420 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[v24|q]" v24|q -1 [420, 421[420 MustHaveRegister  "NoDefinitionFound"
  v25|d DWORD "[v25|d]" v25|d v2|q [422, 424[422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [426, 429[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [428, 429[428 MustHaveRegister  "NoDefinitionFound"
  v28|q QWORD "[v28|q]" v28|q -1 [428, 429[428 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 38[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 36[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 34[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [34, 134[[144, 220[[240, 271[[432, 453[34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [36, 134[[144, 220[[240, 271[[432, 453[36 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [38, 271[[272, 429[[432, 453[38 MustHaveRegister 62 MustHaveRegister 102 MustHaveRegister 422 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [40, 124[[134, 240[[272, 418[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [42, 50[42 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [44, 96[44 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d v1|d [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v6|d [48, 124[[134, 240[[272, 426[48 MustHaveRegister 50 ShouldHaveRegister 420 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v5|d [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [94, 97[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[r11|q]" v10|q -1 [98, 124[[144, 220[[272, 282[98 MustHaveRegister 100 MustHaveRegister 110 MustHaveRegister 154 MustHaveRegister 204 MustHaveRegister 219 LiveAtLoopEnd 282 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d -1 [100, 122[100 MustHaveRegister 108 ShouldHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q v12|d [106, 124[[144, 220[[272, 282[106 MustHaveRegister 110 MustHaveRegister 154 ShouldHaveRegister 168 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdi|q]" v15|q -1 [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r8|q]" v16|q -1 [168, 220[168 MustHaveRegister 170 MustHaveRegister 202 MustHaveRegister 219 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[rdi|d]" v17|d -1 [170, 220[170 MustHaveRegister 184 MustHaveRegister 219 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v21|d [174, 216[184 ShouldHaveRegister 200 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [200, 202[200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v18|d [216, 219[216 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q v3|d [418, 426[418 MustHaveRegister 420 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r11|q]" v23|q -1 [420, 421[420 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[r8|q]" v24|q -1 [420, 421[420 MustHaveRegister  "NoDefinitionFound"
  v25|d DWORD "[r11|d]" v25|d v2|q [422, 424[422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q -1 [426, 429[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r11|q]" v27|q -1 [428, 429[428 MustHaveRegister  "NoDefinitionFound"
  v28|q QWORD "[r8|q]" v28|q -1 [428, 429[428 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 38[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 36[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 34[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [34, 134[[144, 220[[240, 271[[432, 453[34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [36, 134[[144, 220[[240, 271[[432, 453[36 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [38, 271[[272, 429[[432, 453[38 MustHaveRegister 62 MustHaveRegister 102 MustHaveRegister 422 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [40, 124[[134, 240[[272, 418[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [42, 50[42 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [44, 96[44 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d v1|d [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v6|d [48, 124[[134, 240[[272, 426[48 MustHaveRegister 50 ShouldHaveRegister 420 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v5|d [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [94, 97[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[r11|q]" v10|q -1 [98, 124[[144, 220[[272, 282[98 MustHaveRegister 100 MustHaveRegister 110 MustHaveRegister 154 MustHaveRegister 204 MustHaveRegister 219 LiveAtLoopEnd 282 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d -1 [100, 122[100 MustHaveRegister 108 ShouldHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q v12|d [106, 124[[144, 220[[272, 282[106 MustHaveRegister 110 MustHaveRegister 154 ShouldHaveRegister 168 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdi|q]" v15|q -1 [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r8|q]" v16|q -1 [168, 220[168 MustHaveRegister 170 MustHaveRegister 202 MustHaveRegister 219 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[rdi|d]" v17|d -1 [170, 220[170 MustHaveRegister 184 MustHaveRegister 219 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v21|d [174, 216[184 ShouldHaveRegister 200 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [200, 202[200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v18|d [216, 219[216 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q v3|d [418, 426[418 MustHaveRegister 420 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r11|q]" v23|q -1 [420, 421[420 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[r8|q]" v24|q -1 [420, 421[420 MustHaveRegister  "NoDefinitionFound"
  v25|d DWORD "[r11|d]" v25|d v2|q [422, 424[422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q -1 [426, 429[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r11|q]" v27|q -1 [428, 429[428 MustHaveRegister  "NoDefinitionFound"
  v28|q QWORD "[r8|q]" v28|q -1 [428, 429[428 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 38[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 36[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 34[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [34, 134[[144, 220[[240, 271[[432, 453[34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [36, 134[[144, 220[[240, 271[[432, 453[36 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [38, 271[[272, 429[[432, 453[38 MustHaveRegister 62 MustHaveRegister 102 MustHaveRegister 422 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [40, 124[[134, 240[[272, 418[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [42, 50[42 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [44, 96[44 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d v1|d [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v6|d [48, 124[[134, 240[[272, 426[48 MustHaveRegister 50 ShouldHaveRegister 420 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v5|d [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [94, 97[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[r11|q]" v10|q -1 [98, 124[[144, 220[[272, 282[98 MustHaveRegister 100 MustHaveRegister 110 MustHaveRegister 154 MustHaveRegister 204 MustHaveRegister 219 LiveAtLoopEnd 282 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d -1 [100, 122[100 MustHaveRegister 108 ShouldHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q v12|d [106, 124[[144, 220[[272, 282[106 MustHaveRegister 110 MustHaveRegister 154 ShouldHaveRegister 168 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdi|q]" v15|q -1 [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r8|q]" v16|q -1 [168, 220[168 MustHaveRegister 170 MustHaveRegister 202 MustHaveRegister 219 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[rdi|d]" v17|d -1 [170, 220[170 MustHaveRegister 184 MustHaveRegister 219 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v21|d [174, 216[184 ShouldHaveRegister 200 ShouldHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [200, 202[200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v18|d [216, 219[216 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q v3|d [418, 426[418 MustHaveRegister 420 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r11|q]" v23|q -1 [420, 421[420 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[r8|q]" v24|q -1 [420, 421[420 MustHaveRegister  "NoDefinitionFound"
  v25|d DWORD "[r11|d]" v25|d v2|q [422, 424[422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q -1 [426, 429[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r11|q]" v27|q -1 [428, 429[428 MustHaveRegister  "NoDefinitionFound"
  v28|q QWORD "[r8|q]" v28|q -1 [428, 429[428 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD = MOV input: [v3|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction v6|DWORD = SHL value: v1|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v7|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction v11|DWORD = MOV input: [v10|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction v12|DWORD = MOV input: [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction v14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction v15|QWORD = MOVSXD value: v11|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [v13|QWORD + v15|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v13|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|QWORD = MOV input: [v13|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction v17|DWORD = MOV input: [v16|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction v20|QWORD = MOV input: [v16|QWORD + v19|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v20|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v21|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [v13|QWORD + 32], y: v10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v22|QWORD[.] + v7|DWORD * 4 + 16], ~expectedObject: -) {temp: v23|QWORD, temp2: v24|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction v25|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [v22|QWORD[.] + v7|DWORD * 4 + 16], y: v25|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction v26|QWORD[.+] = LEA address: [v22|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v26|QWORD[.+], ~newValue: v2|QWORD[.]) {temp: v27|QWORD, temp2: v28|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = SHL value: rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   96  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   98  <|@ instruction r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  422  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = MOV input: [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD <|@ <|@
      nr  450  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // entries:java.lang.Object[]
     4: iload_1       
     5: iconst_1      
     6: ishl          
     7: iconst_1      
     8: iadd          
     9: aload_2       
    10: aastore       
    11: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f857f020000909090909090909090909090909048896c2410448b5618468b1cd50c000000468b04d508000000448bca41d1e141ffc1453bd90f861c020000909090904885c90f84f2010000909090909090909090909090909049bb0000002b787f00004f8d04034d8b98d0000000458b43148b590848bf0000002b787f0000488d1c1f4963f84c3b1c3b0f843b000000909090904183f8200f84350100009090909090909090909041c78784040000d5d7ffff49c7879004000000000000e8000000000f1f840000000000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909049c1e20341807f40000f842f000000478b448a1049c1e0034d85c00f841d0000004d8b5f284983fb000f84560100004983eb084d895f284d035f384d89034c8bd949c1eb0347895c8a104f8d548a104d8bda4c33d949c1eb160f844e0000004885c90f84450000004d8bda49c1eb0949b800e0368d787f00004d03d841803b02742bf08304240041803b00742041c603004d8b47484d85c00f84f60000004983e8084d8947484d0347584d8918488b6c24104883c418493ba7500400000f87e0000000c3909090904c3bdb0f845500000090909090904c8b4328418b38b800000000e9320000006666660f1f84000000000066666690660f1f4400009090909090904863e8498b6ce8084c3bdd0f842b00000090909090ffc0909090903bf87fdbe910000000909090e991feffff909090e989feffff909090e954feffff909090904c895b20e974feffff9090909090909041c78784040000e5e8ffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e972fdfffff44c890424e800000000e9abfefffff44c891c24e800000000e90bfffffff4488d0d0cffffff49898f68040000e906fdfffff441c78784040000f5eeffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 77 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD  <||@
  Comment 77 40 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 81 42 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rcx:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 44 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 97 46 r9|DWORD = SHL value: rdx|DWORD size: DWORD  <||@
  Comment 103 48 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 106 50 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD  <||@
  Comment 115 block B1 null  <||@
  Comment 115 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 54 NOP  <||@
  Comment 116 56 NOP  <||@
  Comment 117 58 NOP  <||@
  Comment 118 60 NOP  <||@
  Comment 119 62 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 128 block B3 null  <||@
  Comment 128 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 128 66 NOP  <||@
  Comment 129 68 NOP  <||@
  Comment 130 70 NOP  <||@
  Comment 131 72 NOP  <||@
  Comment 132 74 NOP  <||@
  Comment 133 76 NOP  <||@
  Comment 134 78 NOP  <||@
  Comment 135 80 NOP  <||@
  Comment 136 82 NOP  <||@
  Comment 137 84 NOP  <||@
  Comment 138 86 NOP  <||@
  Comment 139 88 NOP  <||@
  Comment 140 90 NOP  <||@
  Comment 141 92 NOP  <||@
  Comment 142 94 r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 152 96 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0  <||@
  Comment 156 98 r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD  <||@
  Comment 163 100 r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD  <||@
  Comment 167 102 rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 170 104 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 180 106 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0  <||@
  Comment 184 108 rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD  <||@
  Comment 187 110 CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD  <||@
  Comment 197 block B5 null  <||@
  Comment 197 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 197 114 NOP  <||@
  Comment 198 116 NOP  <||@
  Comment 199 118 NOP  <||@
  Comment 200 120 NOP  <||@
  Comment 201 122 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null  <||@
  Comment 211 block B15 null  <||@
  Comment 211 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 211 126 NOP  <||@
  Comment 212 128 NOP  <||@
  Comment 213 130 NOP  <||@
  Comment 214 132 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 214 block B16 null  <||@
  Comment 214 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 214 252 NOP  <||@
  Comment 215 254 NOP  <||@
  Comment 216 256 NOP  <||@
  Comment 217 258 NOP  <||@
  Comment 218 260 NOP  <||@
  Comment 219 262 NOP  <||@
  Comment 220 264 NOP  <||@
  Comment 221 266 MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD  <||@
  Comment 232 268 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 243 270 DEOPT info [bci:0]  <||@
  Comment 243 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 248 [rcx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 256 block B4 null  <||@
  Comment 256 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 256 136 NOP  <||@
  Comment 257 138 NOP  <||@
  Comment 258 140 NOP  <||@
  Comment 259 142 JUMP ~outgoingValues: [] destination: B4 -> B14  <||@
  Comment 259 block B14 null  <||@
  Comment 259 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 288 NOP  <||@
  Comment 260 290 NOP  <||@
  Comment 261 292 NOP  <||@
  Comment 262 294 NOP  <||@
  Comment 263 296 NOP  <||@
  Comment 264 298 NOP  <||@
  Comment 265 300 NOP  <||@
  Comment 266 302 NOP  <||@
  Comment 267 304 NOP  <||@
  Comment 268 306 NOP  <||@
  Comment 269 308 NOP  <||@
  Comment 270 310 NOP  <||@
  Comment 271 312 NOP  <||@
  Comment 272 314 NOP  <||@
  Comment 273 316 NOP  <||@
  Comment 274 318 NOP  <||@
  Comment 275 320 NOP  <||@
  Comment 276 322 NOP  <||@
  Comment 277 324 NOP  <||@
  Comment 278 326 NOP  <||@
  Comment 279 328 NOP  <||@
  Comment 280 330 NOP  <||@
  Comment 281 332 NOP  <||@
  Comment 282 334 NOP  <||@
  Comment 283 336 NOP  <||@
  Comment 284 338 NOP  <||@
  Comment 285 340 NOP  <||@
  Comment 286 342 NOP  <||@
  Comment 287 344 NOP  <||@
  Comment 288 346 NOP  <||@
  Comment 289 348 NOP  <||@
  Comment 290 350 NOP  <||@
  Comment 291 352 NOP  <||@
  Comment 292 354 NOP  <||@
  Comment 293 356 NOP  <||@
  Comment 294 358 NOP  <||@
  Comment 295 360 NOP  <||@
  Comment 296 362 NOP  <||@
  Comment 297 364 NOP  <||@
  Comment 298 366 NOP  <||@
  Comment 299 368 NOP  <||@
  Comment 300 370 NOP  <||@
  Comment 301 372 NOP  <||@
  Comment 302 374 NOP  <||@
  Comment 303 376 NOP  <||@
  Comment 304 378 NOP  <||@
  Comment 305 380 NOP  <||@
  Comment 306 382 NOP  <||@
  Comment 307 384 NOP  <||@
  Comment 308 386 NOP  <||@
  Comment 309 388 NOP  <||@
  Comment 310 390 NOP  <||@
  Comment 311 392 NOP  <||@
  Comment 312 394 NOP  <||@
  Comment 313 396 NOP  <||@
  Comment 314 398 NOP  <||@
  Comment 315 400 NOP  <||@
  Comment 316 402 NOP  <||@
  Comment 317 404 NOP  <||@
  Comment 318 406 NOP  <||@
  Comment 319 408 NOP  <||@
  Comment 320 410 NOP  <||@
  Comment 321 412 NOP  <||@
  Comment 322 414 NOP  <||@
  Comment 323 416 NOP  <||@
  Comment 324 418 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3  <||@
  Comment 328 420 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e  <||@
  Comment 386 422 r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3  <||@
  Comment 393 424 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 398 426 r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 403 428 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e  <||@
  Comment 497 430 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 506 POLL_RETURN_FAR  <||@
  Comment 520 block B6 null  <||@
  Comment 520 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 520 146 NOP  <||@
  Comment 521 148 NOP  <||@
  Comment 522 150 NOP  <||@
  Comment 523 152 NOP  <||@
  Comment 524 154 CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 533 block B8 null  <||@
  Comment 533 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 533 158 NOP  <||@
  Comment 534 160 NOP  <||@
  Comment 535 162 NOP  <||@
  Comment 536 164 NOP  <||@
  Comment 537 166 NOP  <||@
  Comment 538 168 r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD  <||@
  Comment 542 170 rdi|DWORD = MOV input: [r8|QWORD] size: DWORD  <||@
  Comment 545 -1 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 550 172 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 555 block B10 loop 0 depth 1 header:86|LoopBegin  <||@
  Comment 555 186 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 188 NOP  <||@
  Comment 577 190 NOP  <||@
  Comment 578 192 NOP  <||@
  Comment 579 194 NOP  <||@
  Comment 580 196 NOP  <||@
  Comment 581 198 NOP  <||@
  Comment 582 200 rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 585 202 rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD  <||@
  Comment 590 204 CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD  <||@
  Comment 599 block B11 loop 0 depth 1 header:86|LoopBegin  <||@
  Comment 599 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 599 208 NOP  <||@
  Comment 600 210 NOP  <||@
  Comment 601 212 NOP  <||@
  Comment 602 214 NOP  <||@
  Comment 603 216 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 605 218 JUMP ~outgoingValues: [] destination: B11 -> B9  <||@
  Comment 605 block B9 loop 0 depth 1 header:86|LoopBegin  <||@
  Comment 605 174 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 605 176 NOP  <||@
  Comment 606 178 NOP  <||@
  Comment 607 180 NOP  <||@
  Comment 608 182 NOP  <||@
  Comment 609 184 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD  <||@
  Comment 618 block B7 null  <||@
  Comment 618 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 618 222 NOP  <||@
  Comment 619 224 NOP  <||@
  Comment 620 226 NOP  <||@
  Comment 621 228 JUMP ~outgoingValues: [] destination: B7 -> B14  <||@
  Comment 626 block B2 null  <||@
  Comment 626 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 626 232 NOP  <||@
  Comment 627 234 NOP  <||@
  Comment 628 236 NOP  <||@
  Comment 629 238 JUMP ~outgoingValues: [] destination: B2 -> B14  <||@
  Comment 634 block B13 null  <||@
  Comment 634 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 634 242 NOP  <||@
  Comment 635 244 NOP  <||@
  Comment 636 246 NOP  <||@
  Comment 637 248 JUMP ~outgoingValues: [] destination: B13 -> B16  <||@
  Comment 642 block B12 null  <||@
  Comment 642 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 642 274 NOP  <||@
  Comment 643 276 NOP  <||@
  Comment 644 278 NOP  <||@
  Comment 645 280 NOP  <||@
  Comment 646 282 MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 650 284 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 655 block B17 null  <||@
  Comment 655 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 655 434 NOP  <||@
  Comment 656 436 NOP  <||@
  Comment 657 438 NOP  <||@
  Comment 658 440 NOP  <||@
  Comment 659 442 NOP  <||@
  Comment 660 444 NOP  <||@
  Comment 661 446 NOP  <||@
  Comment 662 448 MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD  <||@
  Comment 673 450 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 684 452 DEOPT info [bci:0]  <||@
  Comment 684 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 689 [rcx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 702 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 717 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 732 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 757 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 785 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 790 [rcx:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 798 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 798 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 804 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 804 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-11116[org.graalvm.collections.EconomicMapImpl.setRawValue(int, Object)]"
  method "HotSpotCompilation-11116[org.graalvm.collections.EconomicMapImpl.setRawValue(int, Object)]"
  date 1724269755053
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af02f80 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e32088fe66669089842400c0feff4883ec189041817f20000000000f857f020000909090909090909090909090909048896c2410448b5618468b1cd50c000000468b04d508000000448bca41d1e141ffc1453bd90f861c020000909090904885c90f84f2010000909090909090909090909090909049bb0000002b787f00004f8d04034d8b98d0000000458b43148b590848bf0000002b787f0000488d1c1f4963f84c3b1c3b0f843b000000909090904183f8200f84350100009090909090909090909041c78784040000d5d7ffff49c7879004000000000000e8028188fe0f1f840000000000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909049c1e20341807f40000f842f000000478b448a1049c1e0034d85c00f841d0000004d8b5f284983fb000f84560100004983eb084d895f284d035f384d89034c8bd949c1eb0347895c8a104f8d548a104d8bda4c33d949c1eb160f844e0000004885c90f84450000004d8bda49c1eb0949b800e0368d787f00004d03d841803b02742bf08304240041803b00742041c603004d8b47484d85c00f84f60000004983e8084d8947484d0347584d8918488b6c24104883c418493ba7500400000f87e0000000c3909090904c3bdb0f845500000090909090904c8b4328418b38b800000000e9320000006666660f1f84000000000066666690660f1f4400009090909090904863e8498b6ce8084c3bdd0f842b00000090909090ffc0909090903bf87fdbe910000000909090e991feffff909090e989feffff909090e954feffff909090904c895b20e974feffff9090909090909041c78784040000e5e8ffff49c7879004000000000000e8497f88fe0f1f84000000000048896c2410e8dd7f86fee972fdfffff44c890424e8ae4f9cfee9abfefffff44c891c24e81f719cfee90bfffffff4488d0d0cffffff49898f68040000e9868d88fef441c78784040000f5eeffff49c7879004000000000000e8e47e88fe0f1f840000000000e85d209cfef4e8777c88fef4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 77 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@432fe275 slotKind: QWORD  <||@
  Comment 77 40 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 81 42 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rcx:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 44 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 97 46 r9|DWORD = SHL value: rdx|DWORD size: DWORD  <||@
  Comment 103 48 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 106 50 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: DWORD  <||@
  Comment 115 block B1 null  <||@
  Comment 115 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 54 NOP  <||@
  Comment 116 56 NOP  <||@
  Comment 117 58 NOP  <||@
  Comment 118 60 NOP  <||@
  Comment 119 62 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 128 block B3 null  <||@
  Comment 128 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 128 66 NOP  <||@
  Comment 129 68 NOP  <||@
  Comment 130 70 NOP  <||@
  Comment 131 72 NOP  <||@
  Comment 132 74 NOP  <||@
  Comment 133 76 NOP  <||@
  Comment 134 78 NOP  <||@
  Comment 135 80 NOP  <||@
  Comment 136 82 NOP  <||@
  Comment 137 84 NOP  <||@
  Comment 138 86 NOP  <||@
  Comment 139 88 NOP  <||@
  Comment 140 90 NOP  <||@
  Comment 141 92 NOP  <||@
  Comment 142 94 r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 152 96 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0  <||@
  Comment 156 98 r11|QWORD = MOV input: [r8|QWORD + 208] size: QWORD  <||@
  Comment 163 100 r8|DWORD = MOV input: [r11|QWORD + 20] size: DWORD  <||@
  Comment 167 102 rbx|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 170 104 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 180 106 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 140154094223360 shift: 0  <||@
  Comment 184 108 rdi|QWORD = MOVSXD value: r8|DWORD size: QWORD  <||@
  Comment 187 110 CMPBRANCH (x: r11|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD  <||@
  Comment 197 block B5 null  <||@
  Comment 197 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 197 114 NOP  <||@
  Comment 198 116 NOP  <||@
  Comment 199 118 NOP  <||@
  Comment 200 120 NOP  <||@
  Comment 201 122 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B15 y: 32 size: DWORD inlinedY: null  <||@
  Comment 211 block B15 null  <||@
  Comment 211 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 211 126 NOP  <||@
  Comment 212 128 NOP  <||@
  Comment 213 130 NOP  <||@
  Comment 214 132 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 214 block B16 null  <||@
  Comment 214 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 214 252 NOP  <||@
  Comment 215 254 NOP  <||@
  Comment 216 256 NOP  <||@
  Comment 217 258 NOP  <||@
  Comment 218 260 NOP  <||@
  Comment 219 262 NOP  <||@
  Comment 220 264 NOP  <||@
  Comment 221 266 MOV x: [r15|QWORD + 1156] y: -10283 size: DWORD  <||@
  Comment 232 268 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 243 270 DEOPT info [bci:0]  <||@
  Comment 243 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 248 [rcx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 256 block B4 null  <||@
  Comment 256 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 256 136 NOP  <||@
  Comment 257 138 NOP  <||@
  Comment 258 140 NOP  <||@
  Comment 259 142 JUMP ~outgoingValues: [] destination: B4 -> B14  <||@
  Comment 259 block B14 null  <||@
  Comment 259 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 288 NOP  <||@
  Comment 260 290 NOP  <||@
  Comment 261 292 NOP  <||@
  Comment 262 294 NOP  <||@
  Comment 263 296 NOP  <||@
  Comment 264 298 NOP  <||@
  Comment 265 300 NOP  <||@
  Comment 266 302 NOP  <||@
  Comment 267 304 NOP  <||@
  Comment 268 306 NOP  <||@
  Comment 269 308 NOP  <||@
  Comment 270 310 NOP  <||@
  Comment 271 312 NOP  <||@
  Comment 272 314 NOP  <||@
  Comment 273 316 NOP  <||@
  Comment 274 318 NOP  <||@
  Comment 275 320 NOP  <||@
  Comment 276 322 NOP  <||@
  Comment 277 324 NOP  <||@
  Comment 278 326 NOP  <||@
  Comment 279 328 NOP  <||@
  Comment 280 330 NOP  <||@
  Comment 281 332 NOP  <||@
  Comment 282 334 NOP  <||@
  Comment 283 336 NOP  <||@
  Comment 284 338 NOP  <||@
  Comment 285 340 NOP  <||@
  Comment 286 342 NOP  <||@
  Comment 287 344 NOP  <||@
  Comment 288 346 NOP  <||@
  Comment 289 348 NOP  <||@
  Comment 290 350 NOP  <||@
  Comment 291 352 NOP  <||@
  Comment 292 354 NOP  <||@
  Comment 293 356 NOP  <||@
  Comment 294 358 NOP  <||@
  Comment 295 360 NOP  <||@
  Comment 296 362 NOP  <||@
  Comment 297 364 NOP  <||@
  Comment 298 366 NOP  <||@
  Comment 299 368 NOP  <||@
  Comment 300 370 NOP  <||@
  Comment 301 372 NOP  <||@
  Comment 302 374 NOP  <||@
  Comment 303 376 NOP  <||@
  Comment 304 378 NOP  <||@
  Comment 305 380 NOP  <||@
  Comment 306 382 NOP  <||@
  Comment 307 384 NOP  <||@
  Comment 308 386 NOP  <||@
  Comment 309 388 NOP  <||@
  Comment 310 390 NOP  <||@
  Comment 311 392 NOP  <||@
  Comment 312 394 NOP  <||@
  Comment 313 396 NOP  <||@
  Comment 314 398 NOP  <||@
  Comment 315 400 NOP  <||@
  Comment 316 402 NOP  <||@
  Comment 317 404 NOP  <||@
  Comment 318 406 NOP  <||@
  Comment 319 408 NOP  <||@
  Comment 320 410 NOP  <||@
  Comment 321 412 NOP  <||@
  Comment 322 414 NOP  <||@
  Comment 323 416 NOP  <||@
  Comment 324 418 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3  <||@
  Comment 328 420 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r11|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e  <||@
  Comment 386 422 r11|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@416dcb93 encoding: base: 0 shift: 3  <||@
  Comment 393 424 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 398 426 r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 403 428 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rcx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@4e583a4e  <||@
  Comment 497 430 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 506 POLL_RETURN_FAR  <||@
  Comment 520 block B6 null  <||@
  Comment 520 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 520 146 NOP  <||@
  Comment 521 148 NOP  <||@
  Comment 522 150 NOP  <||@
  Comment 523 152 NOP  <||@
  Comment 524 154 CMPBRANCH (x: r11|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 533 block B8 null  <||@
  Comment 533 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 533 158 NOP  <||@
  Comment 534 160 NOP  <||@
  Comment 535 162 NOP  <||@
  Comment 536 164 NOP  <||@
  Comment 537 166 NOP  <||@
  Comment 538 168 r8|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD  <||@
  Comment 542 170 rdi|DWORD = MOV input: [r8|QWORD] size: DWORD  <||@
  Comment 545 -1 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 550 172 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 555 block B10 loop 0 depth 1 header:86|LoopBegin  <||@
  Comment 555 186 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 188 NOP  <||@
  Comment 577 190 NOP  <||@
  Comment 578 192 NOP  <||@
  Comment 579 194 NOP  <||@
  Comment 580 196 NOP  <||@
  Comment 581 198 NOP  <||@
  Comment 582 200 rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 585 202 rbp|QWORD = MOV input: [r8|QWORD + rbp|QWORD * 8 + 8] size: QWORD  <||@
  Comment 590 204 CMPBRANCH (x: r11|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD  <||@
  Comment 599 block B11 loop 0 depth 1 header:86|LoopBegin  <||@
  Comment 599 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 599 208 NOP  <||@
  Comment 600 210 NOP  <||@
  Comment 601 212 NOP  <||@
  Comment 602 214 NOP  <||@
  Comment 603 216 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 605 218 JUMP ~outgoingValues: [] destination: B11 -> B9  <||@
  Comment 605 block B9 loop 0 depth 1 header:86|LoopBegin  <||@
  Comment 605 174 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 605 176 NOP  <||@
  Comment 606 178 NOP  <||@
  Comment 607 180 NOP  <||@
  Comment 608 182 NOP  <||@
  Comment 609 184 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD  <||@
  Comment 618 block B7 null  <||@
  Comment 618 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 618 222 NOP  <||@
  Comment 619 224 NOP  <||@
  Comment 620 226 NOP  <||@
  Comment 621 228 JUMP ~outgoingValues: [] destination: B7 -> B14  <||@
  Comment 626 block B2 null  <||@
  Comment 626 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 626 232 NOP  <||@
  Comment 627 234 NOP  <||@
  Comment 628 236 NOP  <||@
  Comment 629 238 JUMP ~outgoingValues: [] destination: B2 -> B14  <||@
  Comment 634 block B13 null  <||@
  Comment 634 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 634 242 NOP  <||@
  Comment 635 244 NOP  <||@
  Comment 636 246 NOP  <||@
  Comment 637 248 JUMP ~outgoingValues: [] destination: B13 -> B16  <||@
  Comment 642 block B12 null  <||@
  Comment 642 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 642 274 NOP  <||@
  Comment 643 276 NOP  <||@
  Comment 644 278 NOP  <||@
  Comment 645 280 NOP  <||@
  Comment 646 282 MOV (x: [rbx|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 650 284 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 655 block B17 null  <||@
  Comment 655 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 655 434 NOP  <||@
  Comment 656 436 NOP  <||@
  Comment 657 438 NOP  <||@
  Comment 658 440 NOP  <||@
  Comment 659 442 NOP  <||@
  Comment 660 444 NOP  <||@
  Comment 661 446 NOP  <||@
  Comment 662 448 MOV x: [r15|QWORD + 1156] y: -5915 size: DWORD  <||@
  Comment 673 450 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 684 452 DEOPT info [bci:0]  <||@
  Comment 684 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 689 [rcx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 702 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 717 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 732 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 757 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 785 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 790 [rcx:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 798 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 798 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 804 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 804 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
