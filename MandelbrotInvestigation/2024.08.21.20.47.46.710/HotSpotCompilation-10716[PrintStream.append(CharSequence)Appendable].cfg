begin_compilation
  name " HotSpotCompilation-10716[java.io.PrintStream.append(CharSequence)]"
  method "HotSpotCompilation-10716[java.io.PrintStream.append(CharSequence)]"
  date 1724269765817
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid a22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: "null"
stableDimension: 0
stamp: a!# java.lang.String
stampKind: a java.lang.Object
value: Object[String:"null"]
=== Inputs ===
=== Succesors ===
=== Usages ===
a54 a54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.PrintStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?463 v17 ?180 ?7 ?45 ?45 ?12 ?59 v561 ?66 v569 ?77 v566 ?160 v565 ?164 v567 ?172 ?462 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 ?7 a28 v18 v581 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 67
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?45 ?12 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 8.489066436467851E-7
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v20 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 10]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
=== Succesors ===
next: v43 
=== Usages ===
v516 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v517 
=== Succesors ===
=== Usages ===
v43 v579 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/String;, resolved>}]
keySuccessors: [I@87c68fb
keys: [HotSpotType<Ljava/lang/String;, resolved>]
profileData: PROFILED keyProbabilities: [0.5091333495917754, 0.49086665040822475]
stamp: void
=== Inputs ===
value: v516 
=== Succesors ===
successors: v33 v38 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v516 #successors: v33 v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 472
stamp: void*
stride: S1
=== Inputs ===
base: v516 
index: - 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v516 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 11]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
lastLocationAccess: - 
=== Succesors ===
next: j362 
=== Usages ===
v580 v363 
=== Predecessor ===
v38 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 lastLocationAccess: - #next: j362  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v359 
index: - 
=== Succesors ===
=== Usages ===
j362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v359 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j362 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 11]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
lastLocationAccess: - 
=== Succesors ===
next: a35 
=== Usages ===
v363 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 lastLocationAccess: - #next: a35  <|@  <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 11]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.toString()>
=== Inputs ===
computedAddress: j362 
metaspaceMethod: v359 
arguments: a2 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j362 metaspaceMethod: v359 arguments: a2  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?7 
values: a1 a1 
=== Succesors ===
=== Usages ===
?459 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?7 values: a1 a1  <|@  <|@
tid ?459 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.valueOf(Object)>
localsSize: 1
locksSize: 0
sourceFile: String.java
sourceLine: 4465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?45 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a35 <|@
d <@d|@=== Debug Properties ===
bci: 11
identity: ANY_LOCATION
inlineControl: Never
isInOOMETry: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 11]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: true
stamp: a# java.lang.String
targetMethod: Indirect#Object.toString
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v363 
stateDuring: ?459 
=== Succesors ===
next: v46 
=== Usages ===
a28 
=== Predecessor ===
j362 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v363 stateDuring: ?459 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
a35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: a# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v26 
values: a2 a35 
=== Succesors ===
=== Usages ===
v47 a54 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v26 values: a2 a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v27 v46 
=== Succesors ===
next: v50 
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v27 v46 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a28 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a28  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 8.489066436467851E-7
stamp: void
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v49 #falseSuccessor: v538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 10]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: a!# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v52 
values: a22 a28 a22 
=== Succesors ===
=== Usages ===
?55 ?172 ?66 v282 ?160 ?164 ?462 ?463 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v52 values: a22 a28 a22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v51 v53 v541 
=== Succesors ===
next: a518 
=== Usages ===
a54 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v51 v53 v541 #next: a518  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a518 a529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a518 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: a519 
=== Usages ===
a261 v562 
=== Predecessor ===
v52 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - #next: a519  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?7 
values: a1 
=== Succesors ===
=== Usages ===
?59 ?256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?7 values: a1  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?12 
values: a1 
=== Succesors ===
=== Usages ===
?55 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?12 values: a1  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: areturn
code: ResolvedJavaMethodBytecode<String.valueOf(Object)>
localsSize: 1
locksSize: 0
sourceFile: String.java
sourceLine: 4465
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?59 
values: a54 
=== Succesors ===
=== Usages ===
v550 a519 a520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?59 values: a54  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a518 
=== Succesors ===
=== Usages ===
a519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a519 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-112147|0xfffffffffffe49ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?55 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: a520 
=== Usages ===
v563 
=== Predecessor ===
a518 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?55 guard: - address: v562 lastLocationAccess: - #next: a520  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a519 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-67851|0xfffffffffffef6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?55 
guard: - 
address: v563 
lastLocationAccess: - 
=== Succesors ===
next: v550 
=== Usages ===
a268 v564 v578 v583 
=== Predecessor ===
a519 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?55 guard: - address: v563 lastLocationAccess: - #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a520 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?55 
object: v583 
=== Succesors ===
next: j521 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?55 object: v583 #next: j521  <|@  <|@
f <@~|@floating>@ <|@
tid j123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
j521 j534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j521 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
=== Succesors ===
next: a522 
=== Usages ===
v559 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - #next: a522  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j521 
index: - 
=== Succesors ===
=== Usages ===
a522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j521 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a522 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
=== Succesors ===
next: i271 
=== Usages ===
v141 a352 v511 
=== Predecessor ===
j521 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - #next: i271  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a520 
=== Succesors ===
=== Usages ===
i271 i348 v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a520  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v222 v109 v351 v351 v351 i271 v133 v149 v239 ?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i148 ?183 v190 ?460 v350 ?234 v351 i271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
expectedValue: i88 
newValue: i82 
stateAfter: - 
=== Succesors ===
next: v136 
=== Usages ===
v133 
=== Predecessor ===
a522 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - expectedValue: i88 newValue: i82 stateAfter: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i271 
y: i88 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i271 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid a268 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a520 
=== Succesors ===
=== Usages ===
v511 v350 ?107 ?460 v351 ?154 ?147 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a520  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a520 
=== Succesors ===
=== Usages ===
a523 v353 v509 v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a520  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?12 
=== Succesors ===
=== Usages ===
?66 ?77 ?180 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?12  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 788
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
values: a1 a54 
=== Succesors ===
=== Usages ===
?71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a1 a54  <|@  <|@
f <@~|@floating>@ <|@
tid a261 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a518 
=== Succesors ===
=== Usages ===
?71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a518  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?66 
values: a261 
=== Succesors ===
=== Usages ===
?156 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a261  <|@  <|@
tid ?156 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?71 
=== Succesors ===
=== Usages ===
?107 ?121 ?154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?71  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
i271 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v135 #falseSuccessor: v134  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a523 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a523 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
a347 
=== Predecessor ===
v135 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid a347 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a523 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a523  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a347 
y: a522 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a347 y: a522  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
a523 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v143 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i348 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
=== Succesors ===
next: v458 
=== Usages ===
i148 ?147 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
=== Inputs ===
x: i348 
y: i82 
=== Succesors ===
=== Usages ===
v149 v349 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i348 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i88 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i148 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
i348 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v456 #falseSuccessor: v457  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
values: a268 
=== Succesors ===
=== Usages ===
?147 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156 values: a268  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?154 
values: i348 a268 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?154 values: i348 a268  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?147 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
value: i148 
stateAfter: - 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - value: i148 stateAfter: - #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i106 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i106  <|@  <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a268 i82 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a268 i82  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
values: a268 
=== Succesors ===
=== Usages ===
?460 ?461 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156 values: a268  <|@  <|@
tid ?460 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?107 
values: a268 i82 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a268 i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v350 
stateDuring: ?460 
=== Succesors ===
next: v112 
=== Usages ===
v109 
=== Predecessor ===
v142 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v350 stateDuring: ?460 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i88 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i106 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.7506638343069569
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
i106 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v111 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i116 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i116  <|@  <|@
f <@~|@floating>@ <|@
tid a113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a268 a113 i82 i88 i88 i88 j114 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a268 a113 i82 i88 i88 i88 j114  <|@  <|@
tid ?461 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?107 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v351 
stateDuring: ?461 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v351 stateDuring: ?461 #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
i116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v578 
value: - 
stateBefore: - 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v578 value: - stateBefore: - #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a522 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
value: a352 
stateAfter: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - value: a352 stateAfter: - #next: v511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v578 
value: a522 
object: a268 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v578 value: a522 object: a268 #next: v118  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v118 v120 v122 v155 
=== Succesors ===
next: a524 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v118 v120 v122 v155 #next: a524  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a524 a526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a524 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v552 
=== Usages ===
a278 v584 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v552  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
=== Succesors ===
=== Usages ===
v553 v552 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a524 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?121 
object: v584 
=== Succesors ===
next: a525 
=== Usages ===
=== Predecessor ===
a524 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?121 object: v584 #next: a525  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a525 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:809) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v553 
=== Predecessor ===
v552 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: v553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-113171|0xfffffffffffe45ed]
deoptSpeculation: long[8980|0x2314]
stamp: void
=== Inputs ===
stateBefore: ?121 
object: a525 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
a525 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?121 object: a525 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid a278 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a524 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a524  <|@  <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/Writer;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<Writer.write(String)>
=== Inputs ===
arguments: a278 a54 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a278 a54  <|@  <|@
tid ?180 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 790
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
values: a1 
=== Succesors ===
=== Usages ===
?160 ?164 ?172 ?462 ?463 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a1  <|@  <|@
tid ?462 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 810
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
bci: 9
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#Writer.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v282 
stateDuring: ?462 
=== Succesors ===
next: a526 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v282 stateDuring: ?462 #next: a526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a526 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v544 
=== Usages ===
a284 v582 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v544  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a526 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?160 
object: v582 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
a526 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?160 object: v582 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid a284 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a526 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a526  <|@  <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/BufferedWriter;, resolved>]
stamp: void
targetMethod: HotSpotMethod<BufferedWriter.flushBuffer()>
=== Inputs ===
arguments: a284 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a284  <|@  <|@
tid ?463 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#BufferedWriter.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v288 
stateDuring: ?463 
=== Succesors ===
next: a527 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v288 stateDuring: ?463 #next: a527  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a527 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.OutputStreamWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.charOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 20]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.io.OutputStreamWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
=== Succesors ===
next: a528 
=== Usages ===
v568 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - #next: a528  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
v555 a528 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a527 
=== Succesors ===
=== Usages ===
a528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a528 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.StreamEncoder
barrierType: NONE
deoptReasonAndAction: int[-75019|0xfffffffffffedaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OutputStreamWriter.se
memoryOrder: PLAIN
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# sun.nio.cs.StreamEncoder
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?164 
guard: - 
address: v568 
lastLocationAccess: - 
=== Succesors ===
next: v555 
=== Usages ===
a297 v585 
=== Predecessor ===
a527 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?164 guard: - address: v568 lastLocationAccess: - #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a528 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?164 
object: v585 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
a528 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?164 object: v585 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a297 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# sun.nio.cs.StreamEncoder
=== Inputs ===
value: a528 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a528  <|@  <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.flushBuffer()>
=== Inputs ===
arguments: a297 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a297  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
?173 ?464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
tid ?464 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
sourceFile: OutputStreamWriter.java
sourceLine: 192
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?172 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v301 
stateDuring: ?464 
=== Succesors ===
next: a529 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v301 stateDuring: ?464 #next: a529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a529 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: a530 
=== Usages ===
a307 v570 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - #next: a530  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: return
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: OutputStreamWriter.java
sourceLine: 193
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?172 
=== Succesors ===
=== Usages ===
v587 a530 a531 v557 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?172  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a529 
=== Succesors ===
=== Usages ===
a530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a530 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-78859|0xfffffffffffecbf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?173 
guard: - 
address: v570 
lastLocationAccess: - 
=== Succesors ===
next: a531 
=== Usages ===
a311 v571 
=== Predecessor ===
a529 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?173 guard: - address: v570 lastLocationAccess: - #next: a531  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a530 
=== Succesors ===
=== Usages ===
a531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a531 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-79883|0xfffffffffffec7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?173 
guard: - 
address: v571 
lastLocationAccess: - 
=== Succesors ===
next: v557 
=== Usages ===
a315 v572 v573 v574 v586 
=== Predecessor ===
a530 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?173 guard: - address: v571 lastLocationAccess: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a531 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?173 
object: v586 
=== Succesors ===
next: i532 
=== Usages ===
=== Predecessor ===
a531 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?173 object: v586 #next: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 13
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.autoFlush
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 27]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
v370 
=== Predecessor ===
v557 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v569 lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i532 
y: i369 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i532 y: i369  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v448 
=== Usages ===
=== Predecessor ===
i532 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v447 #falseSuccessor: v448  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:815) [bci: 49]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i318 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a531 
=== Succesors ===
=== Usages ===
i318 v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: a533 
=== Usages ===
i206 v190 ?183 
=== Predecessor ===
v447 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a531 
=== Succesors ===
=== Usages ===
a533 v344 v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a533 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
=== Succesors ===
next: j534 
=== Usages ===
a321 
=== Predecessor ===
i318 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - #next: j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j534 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
=== Succesors ===
next: a535 
=== Usages ===
v560 
=== Predecessor ===
a533 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - #next: a535  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j534 
index: - 
=== Succesors ===
=== Usages ===
a535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j534 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a535 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
v188 
=== Predecessor ===
j534 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid a321 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a533 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a321 
y: a535 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a321 y: a535  <|@  <|@
f <@~|@floating>@ <|@
tid a311 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a530 
=== Succesors ===
=== Usages ===
?94 ?87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a530  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 792
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
values: a1 
=== Succesors ===
=== Usages ===
?83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a529 
=== Succesors ===
=== Usages ===
?83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a529  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?77 
values: a307 
=== Succesors ===
=== Usages ===
?87 ?94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?77 values: a307  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
a535 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v451 #falseSuccessor: v452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i82 
=== Succesors ===
=== Usages ===
v91 v194 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i318 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v193 #falseSuccessor: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v573 
value: - 
stateBefore: - 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v573 value: - stateBefore: - #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid a374 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
value: a374 
stateAfter: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - value: a374 stateAfter: - #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v198 v200 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v198 v200 #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
=== Inputs ===
x: i318 
y: i205 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i318 y: i205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
value: i206 
stateAfter: - 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - value: i206 stateAfter: - #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.8679739743983765
stamp: void
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v89 #falseSuccessor: v90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a324 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a324  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a531 
=== Succesors ===
=== Usages ===
a324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a324 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
=== Succesors ===
next: v211 
=== Usages ===
v575 v506 
=== Predecessor ===
v89 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a324 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a324  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.999301412906094
stamp: void
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
a324 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v210 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a329 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a329  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a324 
=== Succesors ===
=== Usages ===
a329 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a329 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
a330 v507 v576 v577 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a329 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a329  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.8992343450916052
stamp: void
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
a329 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i334 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i334  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a329 
=== Succesors ===
=== Usages ===
i336 i337 i334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
v222 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i334 
y: i88 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i334 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
i334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v224 #falseSuccessor: v223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?83 
values: a311 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?83 values: a311  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
=== Succesors ===
=== Usages ===
?231 ?465 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94  <|@  <|@
f <@~|@floating>@ <|@
tid a330 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a329 
=== Succesors ===
=== Usages ===
?231 ?238 ?234 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a329  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
values: - a330 
=== Succesors ===
=== Usages ===
?234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252 values: - a330  <|@  <|@
tid ?234 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?231 
values: a330 i82 
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a330 i82  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 i236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 207
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v232 
=== Succesors ===
next: i336 
=== Usages ===
v240 v244 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v232 #next: i336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: i337 
=== Usages ===
i236 i337 ?238 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: i337  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i336 
y: i230 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i336 y: i230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
expectedValue: i336 
newValue: i236 
stateAfter: - 
=== Succesors ===
next: v246 
=== Usages ===
v239 
=== Predecessor ===
i336 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - expectedValue: i336 newValue: i236 stateAfter: - #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i88 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i337 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
i337 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v245 #falseSuccessor: v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?234 
values: i88 a228 a330 j229 - i230 i336 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?234 values: i88 a228 a330 j229 - i230 i336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?238 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v233 
=== Succesors ===
next: a536 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v233 #next: a536  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a329 
=== Succesors ===
=== Usages ===
a536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a536 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
lastLocationAccess: - 
=== Succesors ===
next: v249 
=== Usages ===
a341 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v577 lastLocationAccess: - #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a536 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a536  <|@  <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a341 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a341  <|@  <|@
tid ?465 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v342 
stateDuring: ?465 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
a536 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v342 stateDuring: ?465 #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v90 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v97 v99 v253 v254 v255 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v97 v99 v253 v254 v255 #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:67) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?83 
values: a311 
=== Succesors ===
=== Usages ===
?207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?83 values: a311  <|@  <|@
f <@~|@floating>@ <|@
tid a315 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a531 
=== Succesors ===
=== Usages ===
?183 ?207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a531  <|@  <|@
tid ?207 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?87 
values: a315 
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a315  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?207 
values: i318 a315 i82 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?207 values: i318 a315 i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000002a94[index: 340, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 446
mayConvertToGuard: true
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000002094[index: 260, len: 20, hash: 0x9c96d22a]: UnreachedCode@6[HotSpotMethod<PrintStream.implWrite(String)>, 33]}
stamp: void
=== Inputs ===
stateBefore: ?173 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?173  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid a22 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: "null"
stableDimension: 0
stamp: a!# java.lang.String
stampKind: a java.lang.Object
value: Object[String:"null"]
=== Inputs ===
=== Succesors ===
=== Usages ===
a54 a54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.PrintStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?463 v17 ?180 ?7 ?45 ?45 ?12 ?59 v561 ?66 v569 ?77 v566 ?160 v565 ?164 v567 ?172 ?462 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 ?7 a28 v18 v581 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 67
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?45 ?12 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 8.489066436467851E-7
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v20 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 10]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
=== Succesors ===
next: v43 
=== Usages ===
v516 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v517 
=== Succesors ===
=== Usages ===
v43 v579 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/String;, resolved>}]
keySuccessors: [I@87c68fb
keys: [HotSpotType<Ljava/lang/String;, resolved>]
profileData: PROFILED keyProbabilities: [0.5091333495917754, 0.49086665040822475]
stamp: void
=== Inputs ===
value: v516 
=== Succesors ===
successors: v33 v38 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v516 #successors: v33 v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [v5|QWORD + 472] <|@
d <@d|@=== Debug Properties ===
displacement: 472
stamp: void*
stride: S1
=== Inputs ===
base: v516 
index: - 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v516 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 11]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
lastLocationAccess: - 
=== Succesors ===
next: j362 
=== Usages ===
v580 v363 
=== Predecessor ===
v38 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 lastLocationAccess: - #next: j362  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v8|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v359 
index: - 
=== Succesors ===
=== Usages ===
j362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v359 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j362 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 11]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
lastLocationAccess: - 
=== Succesors ===
next: a35 
=== Usages ===
v363 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 lastLocationAccess: - #next: a35  <|@  <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 11]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.toString()>
=== Inputs ===
computedAddress: j362 
metaspaceMethod: v359 
arguments: a2 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j362 metaspaceMethod: v359 arguments: a2  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?7 
values: a1 a1 
=== Succesors ===
=== Usages ===
?459 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?7 values: a1 a1  <|@  <|@
tid ?459 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.valueOf(Object)>
localsSize: 1
locksSize: 0
sourceFile: String.java
sourceLine: 4465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?45 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a35 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
identity: ANY_LOCATION
inlineControl: Never
isInOOMETry: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 11]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: true
stamp: a# java.lang.String
targetMethod: Indirect#Object.toString
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v363 
stateDuring: ?459 
=== Succesors ===
next: v46 
=== Usages ===
a28 
=== Predecessor ===
j362 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v363 stateDuring: ?459 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
a35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a28 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: a# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v26 
values: a2 a35 
=== Succesors ===
=== Usages ===
v47 a54 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v26 values: a2 a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v27 v46 
=== Succesors ===
next: v50 
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v27 v46 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a28 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a28  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 8.489066436467851E-7
stamp: void
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v49 #falseSuccessor: v538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 10]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a54 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: a!# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v52 
values: a22 a28 a22 
=== Succesors ===
=== Usages ===
?55 ?172 ?66 v282 ?160 ?164 ?462 ?463 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v52 values: a22 a28 a22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v51 v53 v541 
=== Succesors ===
next: a518 
=== Usages ===
a54 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v51 v53 v541 #next: a518  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a518 a529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a518 <|@
result v14|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: a519 
=== Usages ===
a261 v562 
=== Predecessor ===
v52 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - #next: a519  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?7 
values: a1 
=== Succesors ===
=== Usages ===
?59 ?256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?7 values: a1  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?12 
values: a1 
=== Succesors ===
=== Usages ===
?55 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?12 values: a1  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: areturn
code: ResolvedJavaMethodBytecode<String.valueOf(Object)>
localsSize: 1
locksSize: 0
sourceFile: String.java
sourceLine: 4465
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?59 
values: a54 
=== Succesors ===
=== Usages ===
v550 a519 a520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?59 values: a54  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v14|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a518 
=== Succesors ===
=== Usages ===
a519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a519 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-112147|0xfffffffffffe49ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?55 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: a520 
=== Usages ===
v563 
=== Predecessor ===
a518 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?55 guard: - address: v562 lastLocationAccess: - #next: a520  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v15|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a519 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
result v16|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-67851|0xfffffffffffef6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?55 
guard: - 
address: v563 
lastLocationAccess: - 
=== Succesors ===
next: v550 
=== Usages ===
a268 v564 v578 v583 
=== Predecessor ===
a519 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?55 guard: - address: v563 lastLocationAccess: - #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [v16|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a520 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?55 
object: v583 
=== Succesors ===
next: j521 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?55 object: v583 #next: j521  <|@  <|@
f <@~|@floating>@ <|@
tid j123 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [r15|QWORD + 896] <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
j521 j534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j521 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
=== Succesors ===
next: a522 
=== Usages ===
v559 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - #next: a522  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v17|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j521 
index: - 
=== Succesors ===
=== Usages ===
a522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j521 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a522 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
=== Succesors ===
next: i271 
=== Usages ===
v141 a352 v511 
=== Predecessor ===
j521 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - #next: i271  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v16|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a520 
=== Succesors ===
=== Usages ===
i271 i348 v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a520  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v222 v109 v351 v351 v351 i271 v133 v149 v239 ?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i148 ?183 v190 ?460 v350 ?234 v351 i271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
expectedValue: i88 
newValue: i82 
stateAfter: - 
=== Succesors ===
next: v136 
=== Usages ===
v133 
=== Predecessor ===
a522 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - expectedValue: i88 newValue: i82 stateAfter: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i271 
y: i88 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i271 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid a268 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a520 
=== Succesors ===
=== Usages ===
v511 v350 ?107 ?460 v351 ?154 ?147 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a520  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [v16|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a520 
=== Succesors ===
=== Usages ===
a523 v353 v509 v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a520  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?12 
=== Succesors ===
=== Usages ===
?66 ?77 ?180 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?12  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 788
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
values: a1 a54 
=== Succesors ===
=== Usages ===
?71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a1 a54  <|@  <|@
f <@~|@floating>@ <|@
tid a261 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a518 
=== Succesors ===
=== Usages ===
?71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a518  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?66 
values: a261 
=== Succesors ===
=== Usages ===
?156 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a261  <|@  <|@
tid ?156 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?71 
=== Succesors ===
=== Usages ===
?107 ?121 ?154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?71  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
i271 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v135 #falseSuccessor: v134  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a523 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a523 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
a347 
=== Predecessor ===
v135 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid a347 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a523 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a523  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a347 
y: a522 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a347 y: a522  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
a523 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v143 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i348 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i348 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
=== Succesors ===
next: v458 
=== Usages ===
i148 ?147 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
=== Inputs ===
x: i348 
y: i82 
=== Succesors ===
=== Usages ===
v149 v349 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i348 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i88 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i148 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
i348 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v456 #falseSuccessor: v457  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
values: a268 
=== Succesors ===
=== Usages ===
?147 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156 values: a268  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?154 
values: i348 a268 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?154 values: i348 a268  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?147 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
value: i148 
stateAfter: - 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - value: i148 stateAfter: - #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i106 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i106  <|@  <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a268 i82 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a268 i82  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
values: a268 
=== Succesors ===
=== Usages ===
?460 ?461 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156 values: a268  <|@  <|@
tid ?460 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?107 
values: a268 i82 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a268 i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v350 
stateDuring: ?460 
=== Succesors ===
next: v112 
=== Usages ===
v109 
=== Predecessor ===
v142 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v350 stateDuring: ?460 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i88 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i106 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.7506638343069569
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
i106 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v111 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i116 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i116  <|@  <|@
f <@~|@floating>@ <|@
tid a113 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a268 a113 i82 i88 i88 i88 j114 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a268 a113 i82 i88 i88 i88 j114  <|@  <|@
tid ?461 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?107 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i116 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v351 
stateDuring: ?461 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v351 stateDuring: ?461 #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
i116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v578 
value: - 
stateBefore: - 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v578 value: - stateBefore: - #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
result v30|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a522 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
value: a352 
stateAfter: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - value: a352 stateAfter: - #next: v511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v578 
value: a522 
object: a268 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v578 value: a522 object: a268 #next: v118  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v118 v120 v122 v155 
=== Succesors ===
next: a524 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v118 v120 v122 v155 #next: a524  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a524 a526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a524 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v552 
=== Usages ===
a278 v584 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v552  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
=== Succesors ===
=== Usages ===
v553 v552 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v33|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a524 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?121 
object: v584 
=== Succesors ===
next: a525 
=== Usages ===
=== Predecessor ===
a524 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?121 object: v584 #next: a525  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a525 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:809) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v553 
=== Predecessor ===
v552 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: v553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-113171|0xfffffffffffe45ed]
deoptSpeculation: long[8980|0x2314]
stamp: void
=== Inputs ===
stateBefore: ?121 
object: a525 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
a525 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?121 object: a525 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid a278 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a524 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a524  <|@  <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/Writer;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<Writer.write(String)>
=== Inputs ===
arguments: a278 a54 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a278 a54  <|@  <|@
tid ?180 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 790
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
values: a1 
=== Succesors ===
=== Usages ===
?160 ?164 ?172 ?462 ?463 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a1  <|@  <|@
tid ?462 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 810
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
bci: 9
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#Writer.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v282 
stateDuring: ?462 
=== Succesors ===
next: a526 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v282 stateDuring: ?462 #next: a526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a526 <|@
result v36|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v544 
=== Usages ===
a284 v582 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v544  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [v36|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a526 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?160 
object: v582 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
a526 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?160 object: v582 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid a284 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a526 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a526  <|@  <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/BufferedWriter;, resolved>]
stamp: void
targetMethod: HotSpotMethod<BufferedWriter.flushBuffer()>
=== Inputs ===
arguments: a284 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a284  <|@  <|@
tid ?463 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#BufferedWriter.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v288 
stateDuring: ?463 
=== Succesors ===
next: a527 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v288 stateDuring: ?463 #next: a527  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a527 <|@
result v38|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.OutputStreamWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.charOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 20]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.io.OutputStreamWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
=== Succesors ===
next: a528 
=== Usages ===
v568 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - #next: a528  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
v555 a528 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v38|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a527 
=== Succesors ===
=== Usages ===
a528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a528 <|@
result v39|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.StreamEncoder
barrierType: NONE
deoptReasonAndAction: int[-75019|0xfffffffffffedaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OutputStreamWriter.se
memoryOrder: PLAIN
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# sun.nio.cs.StreamEncoder
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?164 
guard: - 
address: v568 
lastLocationAccess: - 
=== Succesors ===
next: v555 
=== Usages ===
a297 v585 
=== Predecessor ===
a527 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?164 guard: - address: v568 lastLocationAccess: - #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v39|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a528 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?164 
object: v585 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
a528 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?164 object: v585 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a297 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# sun.nio.cs.StreamEncoder
=== Inputs ===
value: a528 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a528  <|@  <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.flushBuffer()>
=== Inputs ===
arguments: a297 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a297  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?180 
values: a1 a54 
=== Succesors ===
=== Usages ===
?173 ?464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?180 values: a1 a54  <|@  <|@
tid ?464 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
sourceFile: OutputStreamWriter.java
sourceLine: 192
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?172 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v301 
stateDuring: ?464 
=== Succesors ===
next: a529 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v301 stateDuring: ?464 #next: a529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a529 <|@
result v41|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: a530 
=== Usages ===
a307 v570 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - #next: a530  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: return
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: OutputStreamWriter.java
sourceLine: 193
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?172 
=== Succesors ===
=== Usages ===
v587 a530 a531 v557 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?172  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v41|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a529 
=== Succesors ===
=== Usages ===
a530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a530 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-78859|0xfffffffffffecbf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?173 
guard: - 
address: v570 
lastLocationAccess: - 
=== Succesors ===
next: a531 
=== Usages ===
a311 v571 
=== Predecessor ===
a529 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?173 guard: - address: v570 lastLocationAccess: - #next: a531  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v42|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a530 
=== Succesors ===
=== Usages ===
a531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a531 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-79883|0xfffffffffffec7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?173 
guard: - 
address: v571 
lastLocationAccess: - 
=== Succesors ===
next: v557 
=== Usages ===
a315 v572 v573 v574 v586 
=== Predecessor ===
a530 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?173 guard: - address: v571 lastLocationAccess: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v43|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a531 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?173 
object: v586 
=== Succesors ===
next: i532 
=== Usages ===
=== Predecessor ===
a531 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?173 object: v586 #next: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v0|QWORD[.] + 13] <|@
d <@d|@=== Debug Properties ===
displacement: 13
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.autoFlush
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 27]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
v370 
=== Predecessor ===
v557 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v569 lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i532 
y: i369 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i532 y: i369  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v448 
=== Usages ===
=== Predecessor ===
i532 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v447 #falseSuccessor: v448  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:815) [bci: 49]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i318 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v43|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a531 
=== Succesors ===
=== Usages ===
i318 v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i318 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: a533 
=== Usages ===
i206 v190 ?183 
=== Predecessor ===
v447 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v43|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a531 
=== Succesors ===
=== Usages ===
a533 v344 v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a533 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
=== Succesors ===
next: j534 
=== Usages ===
a321 
=== Predecessor ===
i318 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - #next: j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j534 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
=== Succesors ===
next: a535 
=== Usages ===
v560 
=== Predecessor ===
a533 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - #next: a535  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v46|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j534 
index: - 
=== Succesors ===
=== Usages ===
a535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j534 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a535 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
v188 
=== Predecessor ===
j534 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid a321 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a533 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a321 
y: a535 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a321 y: a535  <|@  <|@
f <@~|@floating>@ <|@
tid a311 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a530 
=== Succesors ===
=== Usages ===
?94 ?87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a530  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: PrintStream.java
sourceLine: 792
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
values: a1 
=== Succesors ===
=== Usages ===
?83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a529 
=== Succesors ===
=== Usages ===
?83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a529  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?77 
values: a307 
=== Succesors ===
=== Usages ===
?87 ?94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?77 values: a307  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
a535 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v451 #falseSuccessor: v452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i82 
=== Succesors ===
=== Usages ===
v91 v194 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i318 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v193 #falseSuccessor: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v573 
value: - 
stateBefore: - 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v573 value: - stateBefore: - #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid a374 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
value: a374 
stateAfter: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - value: a374 stateAfter: - #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v198 v200 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v198 v200 #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
=== Inputs ===
x: i318 
y: i205 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i318 y: i205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
value: i206 
stateAfter: - 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - value: i206 stateAfter: - #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.8679739743983765
stamp: void
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v89 #falseSuccessor: v90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a324 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a324  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v43|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a531 
=== Succesors ===
=== Usages ===
a324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a324 <|@
result v53|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
=== Succesors ===
next: v211 
=== Usages ===
v575 v506 
=== Predecessor ===
v89 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a324 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a324  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.999301412906094
stamp: void
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
a324 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v210 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a329 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a329  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v53|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a324 
=== Succesors ===
=== Usages ===
a329 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a329 <|@
result v54|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
a330 v507 v576 v577 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a329 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a329  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.8992343450916052
stamp: void
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
a329 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i334 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i334  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v54|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a329 
=== Succesors ===
=== Usages ===
i336 i337 i334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
v222 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i334 
y: i88 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i334 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
i334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v224 #falseSuccessor: v223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?83 
values: a311 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?83 values: a311  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
=== Succesors ===
=== Usages ===
?231 ?465 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94  <|@  <|@
f <@~|@floating>@ <|@
tid a330 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a329 
=== Succesors ===
=== Usages ===
?231 ?238 ?234 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a329  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
values: - a330 
=== Succesors ===
=== Usages ===
?234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252 values: - a330  <|@  <|@
tid ?234 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?231 
values: a330 i82 
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a330 i82  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
result Object[Unsafe@679697080] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 i236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 207
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v232 
=== Succesors ===
next: i336 
=== Usages ===
v240 v244 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v232 #next: i336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i336 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: i337 
=== Usages ===
i236 i337 ?238 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: i337  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i336 
y: i230 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i336 y: i230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
expectedValue: i336 
newValue: i236 
stateAfter: - 
=== Succesors ===
next: v246 
=== Usages ===
v239 
=== Predecessor ===
i336 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - expectedValue: i336 newValue: i236 stateAfter: - #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i88 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i337 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
i337 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v245 #falseSuccessor: v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?234 
values: i88 a228 a330 j229 - i230 i336 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?234 values: i88 a228 a330 j229 - i230 i336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?238 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v233 
=== Succesors ===
next: a536 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v233 #next: a536  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v54|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a329 
=== Succesors ===
=== Usages ===
a536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a536 <|@
result v59|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
lastLocationAccess: - 
=== Succesors ===
next: v249 
=== Usages ===
a341 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v577 lastLocationAccess: - #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a536 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a536  <|@  <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a341 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a341  <|@  <|@
tid ?465 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v342 
stateDuring: ?465 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
a536 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v342 stateDuring: ?465 #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v90 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v97 v99 v253 v254 v255 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v97 v99 v253 v254 v255 #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:67) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?83 
values: a311 
=== Succesors ===
=== Usages ===
?207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?83 values: a311  <|@  <|@
f <@~|@floating>@ <|@
tid a315 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a531 
=== Succesors ===
=== Usages ===
?183 ?207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a531  <|@  <|@
tid ?207 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?87 
values: a315 
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a315  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?207 
values: i318 a315 i82 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?207 values: i318 a315 i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000002a94[index: 340, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 446
mayConvertToGuard: true
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000002094[index: 260, len: 20, hash: 0x9c96d22a]: UnreachedCode@6[HotSpotMethod<PrintStream.implWrite(String)>, 33]}
stamp: void
=== Inputs ===
stateBefore: ?173 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   98  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  108  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  112  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  184  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr  188  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  316  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  362  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  462  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  466  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  474  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  478  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  484  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  490  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  496  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  538  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  540  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  598  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  770  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  814  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  816  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  820  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  924  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  986  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   98  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  108  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  112  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  184  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr  188  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  316  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  362  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  462  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  466  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  474  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  478  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  484  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  490  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  496  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  538  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  540  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  598  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  770  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  814  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  816  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  820  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  924  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  986  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v9|q [0, 1[[104, 108[[192, 197[[472, 473[[482, 483[[494, 495[[690, 692[[768, 770[[818, 820[[878, 881[[928, 929[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[808, 819[[928, 929[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v13|q [0, 26[[106, 107[[470, 473[[482, 483[[494, 495[[766, 769[[806, 819[[928, 929[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v8|q [0, 1[[102, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 24[[100, 107[[468, 473[[480, 483[[492, 495[[764, 769[[804, 819[[926, 929[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[814, 819[[928, 929[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[810, 819[[928, 929[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[812, 819[[928, 929[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [24, 690[[694, 991[[992, 1013[[1014, 1035[24 MustHaveRegister 176 MustHaveRegister 458 MustHaveRegister 462 MustHaveRegister 474 MustHaveRegister 484 MustHaveRegister 496 MustHaveRegister 504 MustHaveRegister 690 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [26, 652[[694, 710[[720, 732[[742, 929[[932, 991[[992, 1013[[1014, 1035[26 MustHaveRegister 28 MustHaveRegister 50 MustHaveRegister 68 ShouldHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v63|q [944, 947[944 MustHaveRegister 946 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [54, 60[[70, 96[54 MustHaveRegister 58 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [96, 102[96 MustHaveRegister 98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [98, 104[98 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q rax|- [108, 111[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [112, 133[122 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v62|q [960, 963[960 MustHaveRegister 962 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v11|q [134, 506[[742, 834[[992, 1013[[1014, 1035[470 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [176, 190[176 MustHaveRegister 178 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [180, 318[[324, 378[180 MustHaveRegister 182 MustHaveRegister 188 MustHaveRegister 196 MustHaveRegister 314 MustHaveRegister 318 MustHaveRegister 340 MustHaveRegister 360 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [186, 321[[324, 344[186 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v16|d [188, 321[[324, 366[[742, 819[[992, 1013[188 MustHaveRegister 320 MustHaveRegister 764 ShouldHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v14|d [190, 465[[742, 834[[992, 1013[190 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|d [342, 344[342 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [360, 366[[992, 1013[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v24|d [362, 378[362 MustHaveRegister 364 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d rax|- [770, 772[770 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d rax|- [820, 821[820 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v29|q QWORD "[v29|q]" v29|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v30|d DWORD "[v30|d]" v30|d v18|q [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v32|q QWORD "[v32|q]" v32|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v33|d DWORD "[v33|d]" v33|d -1 [458, 466[458 MustHaveRegister 460 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [462, 464[462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v33|d [466, 468[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [474, 478[474 MustHaveRegister 476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|d [478, 480[478 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [486, 490[486 MustHaveRegister 488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|d [490, 492[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [496, 544[496 MustHaveRegister 498 MustHaveRegister 544 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [498, 542[498 MustHaveRegister 500 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [500, 648[[964, 984[500 MustHaveRegister 502 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 630 MustHaveRegister 648 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [534, 634[[964, 991[534 MustHaveRegister 558 ShouldHaveRegister 628 ShouldHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [536, 540[536 MustHaveRegister 540 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [538, 546[538 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v45|d [540, 546[540 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v42|d [542, 652[[694, 710[[720, 732[[834, 929[[964, 991[542 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v41|d [544, 652[[694, 710[[720, 732[[834, 929[[964, 991[544 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [596, 597[596 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[v51|q]" v51|q -1 [596, 597[596 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[v52|d]" v52|d v44|d [628, 630[628 MustHaveRegister 630 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [648, 652[[694, 706[648 MustHaveRegister 650 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [706, 710[[720, 732[[834, 922[706 MustHaveRegister 708 MustHaveRegister 730 MustHaveRegister 846 MustHaveRegister 874 MustHaveRegister 880 MustHaveRegister 899 LiveAtLoopEnd 922 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v54|d [846, 900[846 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [874, 897[874 MustHaveRegister 876 MustHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v56|d [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [896, 897[896 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[v59|d]" v59|d -1 [922, 924[922 MustHaveRegister 924 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|d [924, 926[924 MustHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v43|d [984, 991[984 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [950, 960[950 MustHaveRegister 960 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [934, 944[934 MustHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v9|q [0, 1[[104, 108[[192, 197[[472, 473[[482, 483[[494, 495[[690, 692[[768, 770[[818, 820[[878, 881[[928, 929[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[808, 819[[928, 929[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v13|q [0, 26[[106, 107[[470, 473[[482, 483[[494, 495[[766, 769[[806, 819[[928, 929[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v8|q [0, 1[[102, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 24[[100, 107[[468, 473[[480, 483[[492, 495[[764, 769[[804, 819[[926, 929[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[814, 819[[928, 929[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[810, 819[[928, 929[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[812, 819[[928, 929[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 70[24 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 105[26 MustHaveRegister 28 MustHaveRegister 50 MustHaveRegister 68 ShouldHaveRegister 100 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r10|q]" v3|q v63|q [944, 947[944 MustHaveRegister 946 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [54, 60[[70, 96[54 MustHaveRegister 58 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [96, 102[96 MustHaveRegister 98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q -1 [98, 104[98 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|- [108, 111[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|q [112, 133[122 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v62|q [960, 963[960 MustHaveRegister 962 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v11|q [134, 191[ "OneSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [176, 190[176 MustHaveRegister 178 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r10|d]" v15|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [180, 318[[324, 378[180 MustHaveRegister 182 MustHaveRegister 188 MustHaveRegister 196 MustHaveRegister 314 MustHaveRegister 318 MustHaveRegister 340 MustHaveRegister 360 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r11|q]" v18|q -1 [186, 321[[324, 344[186 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q v16|d [188, 321[[324, 366[[742, 767[188 MustHaveRegister 320 MustHaveRegister 764 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v14|d [190, 465[190 MustHaveRegister  "OneSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|d [342, 344[342 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d -1 [360, 366[[992, 1013[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v24|d [362, 378[362 MustHaveRegister 364 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|- [770, 772[770 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|- [820, 821[820 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v29|q QWORD "[rbx|q]" v29|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v30|d DWORD "[rcx|d]" v30|d v18|q [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v32|q QWORD "[rcx|q]" v32|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v33|d DWORD "[r10|d]" v33|d -1 [458, 466[458 MustHaveRegister 460 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d -1 [462, 464[462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v33|d [466, 468[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[r10|d]" v36|d -1 [474, 478[474 MustHaveRegister 476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r10|q]" v37|q v36|d [478, 480[478 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [486, 490[486 MustHaveRegister 488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r10|q]" v40|q v39|d [490, 492[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [496, 544[496 MustHaveRegister 498 MustHaveRegister 544 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdx|d]" v42|d -1 [498, 542[498 MustHaveRegister 500 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r10|d]" v43|d -1 [500, 648[[964, 984[500 MustHaveRegister 502 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 630 MustHaveRegister 648 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d -1 [534, 634[[964, 991[534 MustHaveRegister 558 ShouldHaveRegister 628 ShouldHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d -1 [536, 540[536 MustHaveRegister 540 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [538, 546[538 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r8|q]" v47|q v45|d [540, 546[540 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v42|d [542, 652[[694, 710[[720, 732[[834, 900[542 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rax|q]" v49|q v41|d [544, 652[[694, 710[[720, 732[[834, 850[544 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[r8|q]" v50|q -1 [596, 597[596 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[r9|q]" v51|q -1 [596, 597[596 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r8|d]" v52|d v44|d [628, 630[628 MustHaveRegister 630 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d -1 [648, 652[[694, 706[648 MustHaveRegister 650 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [706, 710[[720, 732[[834, 922[706 MustHaveRegister 708 MustHaveRegister 730 MustHaveRegister 846 MustHaveRegister 874 MustHaveRegister 880 MustHaveRegister 899 LiveAtLoopEnd 922 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|d [846, 900[846 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [874, 897[874 MustHaveRegister 876 MustHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v56|d [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r8|q]" v58|q -1 [896, 897[896 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rsi|d]" v59|d -1 [922, 924[922 MustHaveRegister 924 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v59|d [924, 926[924 MustHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r10|q]" v61|q v43|d [984, 991[984 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r10|q]" v62|q -1 [950, 960[950 MustHaveRegister 960 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q -1 [934, 944[934 MustHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[vstack:0|q]" v0|q v0|q [70, 99[ "SpillInDominator"
  v65|q QWORD "[vstack:2|q]" v1|q v1|q [105, 652[[694, 710[[720, 732[[742, 929[[932, 991[[992, 1013[ "OneSpillStore"
  v66|q QWORD "[vstack:0|q]" v0|q v0|q [99, 105[ "SpillInDominator"
  v67|q QWORD "[vstack:0|q]" v0|q v0|q [105, 134[ "SpillInDominator"
  v68|q QWORD "[rsi|q]" v0|q v0|q [134, 467[176 MustHaveRegister 458 MustHaveRegister 462 MustHaveRegister  "SpillInDominator"
  v69|q QWORD "[rdx|q]" v1|q v1|q [1014, 1035[ "OneSpillStore"
  v70|q QWORD "[vstack:0|q]" v0|q v0|q [467, 471[ "SpillInDominator"
  v71|q QWORD "[r9|q]" v13|q v13|q [191, 471[470 ShouldHaveRegister  "OneSpillStore"
  v72|q QWORD "[vstack:5|q]" v19|q v19|q [767, 819[804 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v20|q v20|q [742, 765[ "OneSpillStore"
  v74|q QWORD "[vstack:3|q]" v13|q v13|q [471, 506[[742, 834[[992, 1013[ "OneSpillStore"
  v75|q QWORD "[vstack:0|q]" v0|q v0|q [471, 473[ "SpillInDominator"
  v76|q QWORD "[rsi|q]" v0|q v0|q [473, 479[474 MustHaveRegister  "SpillInDominator"
  v77|q QWORD "[rax|q]" v13|q v13|q [1014, 1035[ "OneSpillStore"
  v78|q QWORD "[vstack:0|q]" v0|q v0|q [479, 483[ "SpillInDominator"
  v79|q QWORD "[rsi|q]" v0|q v0|q [483, 491[484 MustHaveRegister  "SpillInDominator"
  v80|q QWORD "[vstack:0|q]" v0|q v0|q [491, 495[ "SpillInDominator"
  v81|q QWORD "[rsi|q]" v0|q v0|q [495, 690[[694, 742[496 MustHaveRegister 504 MustHaveRegister 690 ShouldHaveRegister  "SpillInDominator"
  v82|q QWORD "[vstack:0|q]" v0|q v0|q [742, 763[ "SpillInDominator"
  v83|q QWORD "[vstack:6|q]" v48|q v48|q [900, 927[ "OneSpillStore"
  v84|q QWORD "[vstack:7|q]" v49|q v49|q [850, 877[ "OneSpillStore"
  v85|q QWORD "[vstack:0|q]" v0|q v0|q [763, 767[ "SpillInDominator"
  v86|q QWORD "[vstack:4|q]" v20|q v20|q [765, 834[ "OneSpillStore"
  v87|q QWORD "[vstack:0|q]" v0|q v0|q [767, 991[[992, 1013[ "SpillInDominator"
  v88|q QWORD "[rdx|q]" v20|q v20|q [992, 1013[ "OneSpillStore"
  v89|q QWORD "[r8|q]" v19|q v19|q [992, 1013[ "OneSpillStore"
  v90|q QWORD "[rsi|q]" v0|q v0|q [1014, 1035[ "SpillInDominator"
  v91|q QWORD "[vstack:7|q]" v49|q v49|q [877, 900[ "OneSpillStore"
  v92|q QWORD "[vstack:7|q]" v49|q v49|q [900, 927[ "OneSpillStore"
  v93|q QWORD "[vstack:7|q]" v49|q v49|q [927, 929[ "OneSpillStore"
  v94|q QWORD "[vstack:6|q]" v48|q v48|q [927, 929[ "OneSpillStore"
  v95|q QWORD "[rdx|q]" v48|q v48|q [964, 991[ "OneSpillStore"
  v96|q QWORD "[rax|q]" v49|q v49|q [964, 991[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   98  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  108  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  112  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  184  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr  188  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  316  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  362  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  462  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  466  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  478  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  490  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  538  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  540  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  598  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v73|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  770  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  814  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  816  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  820  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  924  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = STACKMOVE (input: v92|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = STACKMOVE (input: v83|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  986  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v9|q [0, 1[[104, 108[[192, 197[[472, 473[[482, 483[[494, 495[[690, 692[[768, 770[[818, 820[[878, 881[[928, 929[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[808, 819[[928, 929[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v13|q [0, 26[[106, 107[[470, 473[[482, 483[[494, 495[[766, 769[[806, 819[[928, 929[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v8|q [0, 1[[102, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 24[[100, 107[[468, 473[[480, 483[[492, 495[[764, 769[[804, 819[[926, 929[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[814, 819[[928, 929[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[810, 819[[928, 929[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[812, 819[[928, 929[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 70[24 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 105[26 MustHaveRegister 28 MustHaveRegister 50 MustHaveRegister 68 ShouldHaveRegister 100 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r10|q]" v3|q v63|q [944, 947[944 MustHaveRegister 946 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [54, 60[[70, 96[54 MustHaveRegister 58 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [96, 102[96 MustHaveRegister 98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q -1 [98, 104[98 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|- [108, 111[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|q [112, 133[122 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v62|q [960, 963[960 MustHaveRegister 962 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v11|q [134, 191[ "OneSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [176, 190[176 MustHaveRegister 178 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r10|d]" v15|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [180, 318[[324, 378[180 MustHaveRegister 182 MustHaveRegister 188 MustHaveRegister 196 MustHaveRegister 314 MustHaveRegister 318 MustHaveRegister 340 MustHaveRegister 360 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r11|q]" v18|q -1 [186, 321[[324, 344[186 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q v16|d [188, 321[[324, 366[[742, 767[188 MustHaveRegister 320 MustHaveRegister 764 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v14|d [190, 465[190 MustHaveRegister  "OneSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|d [342, 344[342 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d -1 [360, 366[[992, 1013[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v24|d [362, 378[362 MustHaveRegister 364 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|- [770, 772[770 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|- [820, 821[820 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v29|q QWORD "[rbx|q]" v29|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v30|d DWORD "[rcx|d]" v30|d v18|q [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v32|q QWORD "[rcx|q]" v32|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v33|d DWORD "[r10|d]" v33|d -1 [458, 466[458 MustHaveRegister 460 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d -1 [462, 464[462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v33|d [466, 468[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[r10|d]" v36|d -1 [474, 478[474 MustHaveRegister 476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r10|q]" v37|q v36|d [478, 480[478 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [486, 490[486 MustHaveRegister 488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r10|q]" v40|q v39|d [490, 492[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [496, 544[496 MustHaveRegister 498 MustHaveRegister 544 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdx|d]" v42|d -1 [498, 542[498 MustHaveRegister 500 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r10|d]" v43|d -1 [500, 648[[964, 984[500 MustHaveRegister 502 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 630 MustHaveRegister 648 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d -1 [534, 634[[964, 991[534 MustHaveRegister 558 ShouldHaveRegister 628 ShouldHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d -1 [536, 540[536 MustHaveRegister 540 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [538, 546[538 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r8|q]" v47|q v45|d [540, 546[540 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v42|d [542, 652[[694, 710[[720, 732[[834, 900[542 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rax|q]" v49|q v41|d [544, 652[[694, 710[[720, 732[[834, 850[544 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[r8|q]" v50|q -1 [596, 597[596 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[r9|q]" v51|q -1 [596, 597[596 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r8|d]" v52|d v44|d [628, 630[628 MustHaveRegister 630 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d -1 [648, 652[[694, 706[648 MustHaveRegister 650 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [706, 710[[720, 732[[834, 922[706 MustHaveRegister 708 MustHaveRegister 730 MustHaveRegister 846 MustHaveRegister 874 MustHaveRegister 880 MustHaveRegister 899 LiveAtLoopEnd 922 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|d [846, 900[846 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [874, 897[874 MustHaveRegister 876 MustHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v56|d [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r8|q]" v58|q -1 [896, 897[896 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rsi|d]" v59|d -1 [922, 924[922 MustHaveRegister 924 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v59|d [924, 926[924 MustHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r10|q]" v61|q v43|d [984, 991[984 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r10|q]" v62|q -1 [950, 960[950 MustHaveRegister 960 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q -1 [934, 944[934 MustHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[vstack:0|q]" v0|q v0|q [70, 99[ "StoreAtDefinition"
  v65|q QWORD "[vstack:2|q]" v1|q v1|q [105, 652[[694, 710[[720, 732[[742, 929[[932, 991[[992, 1013[ "OneSpillStore"
  v66|q QWORD "[vstack:0|q]" v0|q v0|q [99, 105[ "StoreAtDefinition"
  v67|q QWORD "[vstack:0|q]" v0|q v0|q [105, 134[ "StoreAtDefinition"
  v68|q QWORD "[rsi|q]" v0|q v0|q [134, 467[176 MustHaveRegister 458 MustHaveRegister 462 MustHaveRegister  "StoreAtDefinition"
  v69|q QWORD "[rdx|q]" v1|q v1|q [1014, 1035[ "OneSpillStore"
  v70|q QWORD "[vstack:0|q]" v0|q v0|q [467, 471[ "StoreAtDefinition"
  v71|q QWORD "[r9|q]" v13|q v13|q [191, 471[470 ShouldHaveRegister  "OneSpillStore"
  v72|q QWORD "[vstack:5|q]" v19|q v19|q [767, 819[804 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v20|q v20|q [742, 765[ "OneSpillStore"
  v74|q QWORD "[vstack:3|q]" v13|q v13|q [471, 506[[742, 834[[992, 1013[ "OneSpillStore"
  v75|q QWORD "[vstack:0|q]" v0|q v0|q [471, 473[ "StoreAtDefinition"
  v76|q QWORD "[rsi|q]" v0|q v0|q [473, 479[474 MustHaveRegister  "StoreAtDefinition"
  v77|q QWORD "[rax|q]" v13|q v13|q [1014, 1035[ "OneSpillStore"
  v78|q QWORD "[vstack:0|q]" v0|q v0|q [479, 483[ "StoreAtDefinition"
  v79|q QWORD "[rsi|q]" v0|q v0|q [483, 491[484 MustHaveRegister  "StoreAtDefinition"
  v80|q QWORD "[vstack:0|q]" v0|q v0|q [491, 495[ "StoreAtDefinition"
  v81|q QWORD "[rsi|q]" v0|q v0|q [495, 690[[694, 742[496 MustHaveRegister 504 MustHaveRegister 690 ShouldHaveRegister  "StoreAtDefinition"
  v82|q QWORD "[vstack:0|q]" v0|q v0|q [742, 763[ "StoreAtDefinition"
  v83|q QWORD "[vstack:6|q]" v48|q v48|q [900, 927[ "OneSpillStore"
  v84|q QWORD "[vstack:7|q]" v49|q v49|q [850, 877[ "OneSpillStore"
  v85|q QWORD "[vstack:0|q]" v0|q v0|q [763, 767[ "StoreAtDefinition"
  v86|q QWORD "[vstack:4|q]" v20|q v20|q [765, 834[ "OneSpillStore"
  v87|q QWORD "[vstack:0|q]" v0|q v0|q [767, 991[[992, 1013[ "StoreAtDefinition"
  v88|q QWORD "[rdx|q]" v20|q v20|q [992, 1013[ "OneSpillStore"
  v89|q QWORD "[r8|q]" v19|q v19|q [992, 1013[ "OneSpillStore"
  v90|q QWORD "[rsi|q]" v0|q v0|q [1014, 1035[ "StoreAtDefinition"
  v91|q QWORD "[vstack:7|q]" v49|q v49|q [877, 900[ "OneSpillStore"
  v92|q QWORD "[vstack:7|q]" v49|q v49|q [900, 927[ "OneSpillStore"
  v93|q QWORD "[vstack:7|q]" v49|q v49|q [927, 929[ "OneSpillStore"
  v94|q QWORD "[vstack:6|q]" v48|q v48|q [927, 929[ "OneSpillStore"
  v95|q QWORD "[rdx|q]" v48|q v48|q [964, 991[ "OneSpillStore"
  v96|q QWORD "[rax|q]" v49|q v49|q [964, 991[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   98  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  108  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  112  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  184  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr  188  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  316  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  362  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  462  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  466  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  478  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  490  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  538  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  540  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  598  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v73|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  770  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  814  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  816  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  820  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  924  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = STACKMOVE (input: v92|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = STACKMOVE (input: v83|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  986  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v9|q [0, 1[[104, 108[[192, 197[[472, 473[[482, 483[[494, 495[[690, 692[[768, 770[[818, 820[[878, 881[[928, 929[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[808, 819[[928, 929[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v13|q [0, 26[[106, 107[[470, 473[[482, 483[[494, 495[[766, 769[[806, 819[[928, 929[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v8|q [0, 1[[102, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 24[[100, 107[[468, 473[[480, 483[[492, 495[[764, 769[[804, 819[[926, 929[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[814, 819[[928, 929[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[810, 819[[928, 929[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[812, 819[[928, 929[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[106, 107[[472, 473[[482, 483[[494, 495[[768, 769[[818, 819[[928, 929[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 70[24 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 105[26 MustHaveRegister 28 MustHaveRegister 50 MustHaveRegister 68 ShouldHaveRegister 100 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r10|q]" v3|q v63|q [944, 947[944 MustHaveRegister 946 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [50, 54[50 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [54, 60[[70, 96[54 MustHaveRegister 58 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [52, 55[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [96, 102[96 MustHaveRegister 98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q -1 [98, 104[98 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|- [108, 111[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|q [112, 133[122 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v62|q [960, 963[960 MustHaveRegister 962 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v11|q [134, 191[ "OneSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [176, 190[176 MustHaveRegister 178 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r10|d]" v15|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [180, 318[[324, 378[180 MustHaveRegister 182 MustHaveRegister 188 MustHaveRegister 196 MustHaveRegister 314 MustHaveRegister 318 MustHaveRegister 340 MustHaveRegister 360 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r11|q]" v18|q -1 [186, 321[[324, 344[186 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q v16|d [188, 321[[324, 366[[742, 767[188 MustHaveRegister 320 MustHaveRegister 764 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v14|d [190, 465[190 MustHaveRegister  "OneSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|d [342, 344[342 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d -1 [360, 366[[992, 1013[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v24|d [362, 378[362 MustHaveRegister 364 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|- [770, 772[770 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d rax|- [820, 821[820 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v29|q QWORD "[rbx|q]" v29|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v30|d DWORD "[rcx|d]" v30|d v18|q [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v32|q QWORD "[rcx|q]" v32|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v33|d DWORD "[r10|d]" v33|d -1 [458, 466[458 MustHaveRegister 460 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d -1 [462, 464[462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v33|d [466, 468[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[r10|d]" v36|d -1 [474, 478[474 MustHaveRegister 476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r10|q]" v37|q v36|d [478, 480[478 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [486, 490[486 MustHaveRegister 488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r10|q]" v40|q v39|d [490, 492[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [496, 544[496 MustHaveRegister 498 MustHaveRegister 544 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdx|d]" v42|d -1 [498, 542[498 MustHaveRegister 500 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r10|d]" v43|d -1 [500, 648[[964, 984[500 MustHaveRegister 502 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 630 MustHaveRegister 648 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d -1 [534, 634[[964, 991[534 MustHaveRegister 558 ShouldHaveRegister 628 ShouldHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d -1 [536, 540[536 MustHaveRegister 540 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [538, 546[538 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r8|q]" v47|q v45|d [540, 546[540 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v42|d [542, 652[[694, 710[[720, 732[[834, 900[542 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rax|q]" v49|q v41|d [544, 652[[694, 710[[720, 732[[834, 850[544 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[r8|q]" v50|q -1 [596, 597[596 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[r9|q]" v51|q -1 [596, 597[596 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r8|d]" v52|d v44|d [628, 630[628 MustHaveRegister 630 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d -1 [648, 652[[694, 706[648 MustHaveRegister 650 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [706, 710[[720, 732[[834, 922[706 MustHaveRegister 708 MustHaveRegister 730 MustHaveRegister 846 MustHaveRegister 874 MustHaveRegister 880 MustHaveRegister 899 LiveAtLoopEnd 922 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|d [846, 900[846 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [874, 897[874 MustHaveRegister 876 MustHaveRegister 878 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v56|d [876, 880[876 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r8|q]" v58|q -1 [896, 897[896 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rsi|d]" v59|d -1 [922, 924[922 MustHaveRegister 924 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v59|d [924, 926[924 MustHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r10|q]" v61|q v43|d [984, 991[984 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r10|q]" v62|q -1 [950, 960[950 MustHaveRegister 960 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q -1 [934, 944[934 MustHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[vstack:0|q]" v0|q v0|q [70, 99[ "StoreAtDefinition"
  v65|q QWORD "[vstack:2|q]" v1|q v1|q [105, 652[[694, 710[[720, 732[[742, 929[[932, 991[[992, 1013[ "OneSpillStore"
  v66|q QWORD "[vstack:0|q]" v0|q v0|q [99, 105[ "StoreAtDefinition"
  v67|q QWORD "[vstack:0|q]" v0|q v0|q [105, 134[ "StoreAtDefinition"
  v68|q QWORD "[rsi|q]" v0|q v0|q [134, 467[176 MustHaveRegister 458 MustHaveRegister 462 MustHaveRegister  "StoreAtDefinition"
  v69|q QWORD "[rdx|q]" v1|q v1|q [1014, 1035[ "OneSpillStore"
  v70|q QWORD "[vstack:0|q]" v0|q v0|q [467, 471[ "StoreAtDefinition"
  v71|q QWORD "[r9|q]" v13|q v13|q [191, 471[470 ShouldHaveRegister  "OneSpillStore"
  v72|q QWORD "[vstack:5|q]" v19|q v19|q [767, 819[804 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v20|q v20|q [742, 765[ "OneSpillStore"
  v74|q QWORD "[vstack:3|q]" v13|q v13|q [471, 506[[742, 834[[992, 1013[ "OneSpillStore"
  v75|q QWORD "[vstack:0|q]" v0|q v0|q [471, 473[ "StoreAtDefinition"
  v76|q QWORD "[rsi|q]" v0|q v0|q [473, 479[474 MustHaveRegister  "StoreAtDefinition"
  v77|q QWORD "[rax|q]" v13|q v13|q [1014, 1035[ "OneSpillStore"
  v78|q QWORD "[vstack:0|q]" v0|q v0|q [479, 483[ "StoreAtDefinition"
  v79|q QWORD "[rsi|q]" v0|q v0|q [483, 491[484 MustHaveRegister  "StoreAtDefinition"
  v80|q QWORD "[vstack:0|q]" v0|q v0|q [491, 495[ "StoreAtDefinition"
  v81|q QWORD "[rsi|q]" v0|q v0|q [495, 690[[694, 742[496 MustHaveRegister 504 MustHaveRegister 690 ShouldHaveRegister  "StoreAtDefinition"
  v82|q QWORD "[vstack:0|q]" v0|q v0|q [742, 763[ "StoreAtDefinition"
  v83|q QWORD "[vstack:6|q]" v48|q v48|q [900, 927[ "OneSpillStore"
  v84|q QWORD "[vstack:7|q]" v49|q v49|q [850, 877[ "OneSpillStore"
  v85|q QWORD "[vstack:0|q]" v0|q v0|q [763, 767[ "StoreAtDefinition"
  v86|q QWORD "[vstack:4|q]" v20|q v20|q [765, 834[ "OneSpillStore"
  v87|q QWORD "[vstack:0|q]" v0|q v0|q [767, 991[[992, 1013[ "StoreAtDefinition"
  v88|q QWORD "[rdx|q]" v20|q v20|q [992, 1013[ "OneSpillStore"
  v89|q QWORD "[r8|q]" v19|q v19|q [992, 1013[ "OneSpillStore"
  v90|q QWORD "[rsi|q]" v0|q v0|q [1014, 1035[ "StoreAtDefinition"
  v91|q QWORD "[vstack:7|q]" v49|q v49|q [877, 900[ "OneSpillStore"
  v92|q QWORD "[vstack:7|q]" v49|q v49|q [900, 927[ "OneSpillStore"
  v93|q QWORD "[vstack:7|q]" v49|q v49|q [927, 929[ "OneSpillStore"
  v94|q QWORD "[vstack:6|q]" v48|q v48|q [927, 929[ "OneSpillStore"
  v95|q QWORD "[rdx|q]" v48|q v48|q [964, 991[ "OneSpillStore"
  v96|q QWORD "[rax|q]" v49|q v49|q [964, 991[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   98  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  108  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  112  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  184  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr  188  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  316  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  362  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  462  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  466  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  478  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  490  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  538  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  540  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  598  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v73|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  770  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  814  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  816  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  820  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  924  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = STACKMOVE (input: v92|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = STACKMOVE (input: v83|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  986  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v5|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction v8|QWORD = MOV input: [v5|QWORD + 472] size: QWORD <|@ <|@
      nr   98  <|@ instruction v9|QWORD = MOV input: [v8|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  108  <|@ instruction v10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v11|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v15|DWORD[_] = MOV input: [v14|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v16|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v13|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v16|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  184  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD[.] = MOV input: [v17|QWORD] size: QWORD <|@ <|@
      nr  188  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction v21|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction rax|DWORD = CAS (address: [v16|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v21|DWORD) accessKind: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v16|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v28|QWORD, temp2: v29|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  316  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 12], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v22|DWORD[_] = MOV input: [v16|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v18|QWORD[.], y: v23|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v24|DWORD = MOV input: [v16|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  362  <|@ instruction v25|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction MOV (x: [v16|DWORD[_] * 8 + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v33|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  462  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v34|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  466  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction v36|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v36|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  478  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction v38|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v39|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  490  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  536  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  538  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  540  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  598  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v73|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v19|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  770  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  814  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  816  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  820  <|@ instruction v27|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  924  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = STACKMOVE (input: v92|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = STACKMOVE (input: v83|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  934  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction v3|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction v62|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v12|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  986  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v24|DWORD 
locals: v19|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v19|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v20|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v13|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v13|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  184  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  316  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  462  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  466  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  490  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  536  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  538  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  540  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  598  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  772  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  814  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  816  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:7|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  924  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:6|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:7|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  986  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   56  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  184  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  186  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  316  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  462  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  466  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  490  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  504  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  536  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  538  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  540  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  598  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  772  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  814  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  816  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:7|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  924  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:6|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:7|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  986  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:3|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction vstack:5|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:7|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:6|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:7|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction vstack:3|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [24, 1048[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [30, 1054[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [284, 1052[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [326, 422[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [354, 404[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [958, 984[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [902, 984[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [24, 1048[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:40|q]" vstack:2|q -1 [30, 1054[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:48|q]" vstack:3|q -1 [284, 1052[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:56|q]" vstack:4|q -1 [326, 422[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:64|q]" vstack:5|q -1 [354, 404[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:64|q]" vstack:6|q -1 [958, 984[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:56|q]" vstack:7|q -1 [902, 984[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rsi:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:40, stack:48]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [rdx:0, r8:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [rax:0, rdx:0, r10:0, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602761081179311527
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182411153746120
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182403507481323
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B1" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2] <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: rax|QWORD[.] 
locals: - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: rsi|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2] <|@ <|@
      nr  222  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  236  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  546  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" "B14" "B12" 
    successors "B18" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  632  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r9|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2] <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2] <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rsi:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  664  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2] <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2] <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  676  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  678  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  680  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2] <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22 <|@ <|@
      nr  776  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  812  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605993234080612050
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605987772516557695
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" "B33" "B32" "B28" "B26" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602514279866775107
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 11]
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2] <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593924759168156856
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4558731864863231142
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4558168318670579626
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4544136793930672096
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4543175047714918727
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4539492460501165282
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  394  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  396  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  400  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  402  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  404  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532010862160403368
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529346154916737994
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:40, stack:48]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B31" "B32" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533849754544108490
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4529346154916737994
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr  984  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:64|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2] <|@ <|@
      nr  986  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120923559952384
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4516120916753676506
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [rdx:0, r8:0, stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [rax:0, rdx:0, r10:0, stack:40, stack:48]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f857406000090909090909090909048896c244048897424304885d20f84940500009090909090909090908b5a0848b80000002b787f0000488d1c1848b8addeaddeaddeadde483bc30f855e030000909090488bc24889542428909090904885c00f846a050000909090488b74243090909090909090909090909090909090909090908b5618448b14d50c000000468b14d50c000000428504d5000000004d8b9f800300004d8b1b458bc249c1e00348c1e2034c8bc8b800000000b901000000f0420fb10cd5100000000f8513030000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000428b1cd50c00000048c1e3034885db0f841d000000498b4f284883f9000f84540500004883e90849894f2849034f38488919498bcb48c1e90342890cd50c0000004d8bd04d33d349c1ea160f84450000004d8bd049c1ea0948b900e0368d787f00004c03d141803a02742bf08304240041803a00742041c60200498b4f484885c90f84ff0400004883e90849894f4849034f584c8911909090909090909090909090909090909090909090909090909090909090909090909090448b5624428504d500000000448b5e10438504dc49c1e203498bf2498bd14c894c2420666690e8000000000f1f840000000000488b742430448b5624428504d50000000049c1e203498bf2666690e8000000000f1f840000000000488b742430448b5628468b14d514000000428504d50000000049c1e203498bf2666690e8000000000f1f840000000000488b7424308b46188b14c50c000000448b14d50c000000428504d500000000807e0d000f85c503000090909090909090909090909090468b1cd510000000468b04d50c0000004d8b8f8003000049c1e00348c1e20348c1e0034d3b010f855c030000909090904183fb010f8513010000909090909090909090909090909090909041807f40000f8432000000468b0cd50c00000049c1e1034d85c90f841d0000004d8b47284983f8000f84a10300004983e8084d8947284d0347384d890842c704d50c0000000000000090909090909090458bc341ffc8468904d510000000f0830424004183fb010f85eb0000009090909090468b14d5140000004585d20f85dd0000009090909090909090909090488bc6488b6c24404883c448493ba7d804000072234883ec08498bff48b90000000000000000ffd14883c40848b90000000000000000ffe1493ba7500400000f870b030000c3909090909090909090909090488b9bd8010000488b4340488bf24889542428ffd00f1f840000000000e97ffcffff909090e93fffffff90909090909090428b0cd50c00000048c1e1034c3bd90f8573000000909090909090468b1cd510000000418bcbffc185c90f8ccd010000909090909042890cd510000000f083042400e978fdffff909090e926ffffff9090909090468b14d5140000004585d20f8508000000909090e908ffffff9090909042833cd50c000000000f85b1000000909090e9edfeffff48895424184c894c242090909090909090909090498bf0ba010000004c89442410e8000000000f1f84000000000085c00f855c0000009090909090909090909090909090488b74241048c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8000000000f1f840000000000488b5424184c8b4c2420488b742430e9a5fcffff909090488b5424184c8b4c2420488b742430e98efcffff9090909090418bf248c1e6034889442418e92a0000006666660f1f840000000000666666900f1f8400000000006666669090909090904d8b87580400004185009090909090909090909090468b1cd50c000000458bc34183e0fe418bc3f0460fb104d50c00000075c8488954241090909090909090909090428b34d51800000048c1e603e8000000000f1f840000000000488b742430e9a9fdffff488954242849baaddeaddeaddeadde90909090498bc2e999faffff49baaddeaddeaddeadde90909090498bc2e983faffff4c894c24209090909090909041c78784040000ed38feff49c7879004000094020000e8000000000f1f84000000000090909090909090909049c1e20341c78784040000ed3dfeff49c78790040000942a0000e8000000000f1f840000000000488b442420488b5424289090909090909041c78784040000ed41feff49c7879004000094200000e8000000000f1f84000000000048896c2440e800000000e97df9fffff448891c24e800000000e9adfafffff44c891424e800000000e902fbfffff44c890c24e800000000e960fcfffff4488d0de1fcffff49898f68040000e902f9fffff441c78784040000ed49feff49c7879004000014000000e8000000000f1f84000000000041c78784040000f5f6feff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed45feff49c7879004000014230000e8000000000f1f84000000000041c78784040000f5dafeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5cbfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5c7feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD  <||@
  Comment 72 24 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 77 26 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 86 block B2 null  <||@
  Comment 86 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 86 50 NOP  <||@
  Comment 87 52 NOP  <||@
  Comment 88 54 NOP  <||@
  Comment 89 56 NOP  <||@
  Comment 90 58 NOP  <||@
  Comment 91 60 NOP  <||@
  Comment 92 62 NOP  <||@
  Comment 93 64 NOP  <||@
  Comment 94 66 NOP  <||@
  Comment 95 68 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 98 70 rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 108 72 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0  <||@
  Comment 112 74 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 112 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 122 76 CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 131 block B3 null  <||@
  Comment 131 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 131 80 NOP  <||@
  Comment 132 82 NOP  <||@
  Comment 133 84 NOP  <||@
  Comment 134 86 rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 137 88 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 142 90 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 142 block B5 null  <||@
  Comment 142 130 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 142 132 NOP  <||@
  Comment 143 134 NOP  <||@
  Comment 144 136 NOP  <||@
  Comment 145 138 NOP  <||@
  Comment 146 140 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 155 block B7 null  <||@
  Comment 155 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 162 NOP  <||@
  Comment 156 164 NOP  <||@
  Comment 157 166 NOP  <||@
  Comment 158 170 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 158 block B8 null  <||@
  Comment 158 172 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 158 156 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 163 174 NOP  <||@
  Comment 164 176 NOP  <||@
  Comment 165 178 NOP  <||@
  Comment 166 180 NOP  <||@
  Comment 167 182 NOP  <||@
  Comment 168 184 NOP  <||@
  Comment 169 186 NOP  <||@
  Comment 170 188 NOP  <||@
  Comment 171 190 NOP  <||@
  Comment 172 192 NOP  <||@
  Comment 173 194 NOP  <||@
  Comment 174 196 NOP  <||@
  Comment 175 198 NOP  <||@
  Comment 176 200 NOP  <||@
  Comment 177 202 NOP  <||@
  Comment 178 204 NOP  <||@
  Comment 179 206 NOP  <||@
  Comment 180 208 NOP  <||@
  Comment 181 210 NOP  <||@
  Comment 182 212 NOP  <||@
  Comment 183 214 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 186 216 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2]  <||@
  Comment 186 [rax:0, rdx:0, rsi:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 186 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 194 218 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2]  <||@
  Comment 194 [rax:0, rdx:0, rsi:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 194 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 202 220 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2]  <||@
  Comment 202 [rax:0, rdx:0, rsi:0, r10:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 202 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 210 222 r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 217 224 r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD  <||@
  Comment 220 226 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 227 228 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 231 230 r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 234 232 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 239 234 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 244 236 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 254 238 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16  <||@
  Comment 260 block B16 null  <||@
  Comment 260 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 260 432 NOP  <||@
  Comment 261 434 NOP  <||@
  Comment 262 436 NOP  <||@
  Comment 263 438 NOP  <||@
  Comment 264 440 NOP  <||@
  Comment 265 442 NOP  <||@
  Comment 266 444 NOP  <||@
  Comment 267 446 NOP  <||@
  Comment 268 448 NOP  <||@
  Comment 269 450 NOP  <||@
  Comment 270 452 NOP  <||@
  Comment 271 454 NOP  <||@
  Comment 272 456 NOP  <||@
  Comment 273 458 NOP  <||@
  Comment 274 460 NOP  <||@
  Comment 275 462 NOP  <||@
  Comment 276 464 NOP  <||@
  Comment 277 466 NOP  <||@
  Comment 278 468 NOP  <||@
  Comment 279 470 NOP  <||@
  Comment 280 472 NOP  <||@
  Comment 281 474 NOP  <||@
  Comment 282 476 NOP  <||@
  Comment 283 478 NOP  <||@
  Comment 284 480 NOP  <||@
  Comment 285 482 NOP  <||@
  Comment 286 484 NOP  <||@
  Comment 287 486 NOP  <||@
  Comment 288 488 NOP  <||@
  Comment 289 490 NOP  <||@
  Comment 290 492 NOP  <||@
  Comment 291 494 NOP  <||@
  Comment 292 496 NOP  <||@
  Comment 293 498 NOP  <||@
  Comment 294 500 NOP  <||@
  Comment 295 502 NOP  <||@
  Comment 296 504 NOP  <||@
  Comment 297 506 NOP  <||@
  Comment 298 508 NOP  <||@
  Comment 299 510 NOP  <||@
  Comment 300 512 NOP  <||@
  Comment 301 514 NOP  <||@
  Comment 302 516 NOP  <||@
  Comment 303 518 NOP  <||@
  Comment 304 520 NOP  <||@
  Comment 305 522 NOP  <||@
  Comment 306 524 NOP  <||@
  Comment 307 526 NOP  <||@
  Comment 308 528 NOP  <||@
  Comment 309 530 NOP  <||@
  Comment 310 532 NOP  <||@
  Comment 311 534 NOP  <||@
  Comment 312 536 NOP  <||@
  Comment 313 538 NOP  <||@
  Comment 314 540 NOP  <||@
  Comment 315 542 NOP  <||@
  Comment 316 544 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22  <||@
  Comment 377 546 rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 384 548 MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 392 550 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22  <||@
  Comment 477 552 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 477 block B17 null  <||@
  Comment 477 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 477 556 NOP  <||@
  Comment 478 558 NOP  <||@
  Comment 479 560 NOP  <||@
  Comment 480 562 NOP  <||@
  Comment 481 564 NOP  <||@
  Comment 482 566 NOP  <||@
  Comment 483 568 NOP  <||@
  Comment 484 570 NOP  <||@
  Comment 485 572 NOP  <||@
  Comment 486 574 NOP  <||@
  Comment 487 576 NOP  <||@
  Comment 488 578 NOP  <||@
  Comment 489 580 NOP  <||@
  Comment 490 582 NOP  <||@
  Comment 491 584 NOP  <||@
  Comment 492 586 NOP  <||@
  Comment 493 588 NOP  <||@
  Comment 494 590 NOP  <||@
  Comment 495 592 NOP  <||@
  Comment 496 594 NOP  <||@
  Comment 497 596 NOP  <||@
  Comment 498 598 NOP  <||@
  Comment 499 600 NOP  <||@
  Comment 500 602 NOP  <||@
  Comment 501 604 NOP  <||@
  Comment 502 606 NOP  <||@
  Comment 503 608 NOP  <||@
  Comment 504 610 NOP  <||@
  Comment 505 612 NOP  <||@
  Comment 506 614 NOP  <||@
  Comment 507 616 NOP  <||@
  Comment 508 618 NOP  <||@
  Comment 509 620 NOP  <||@
  Comment 510 622 NOP  <||@
  Comment 511 624 NOP  <||@
  Comment 512 626 NOP  <||@
  Comment 513 628 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 517 630 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2]  <||@
  Comment 517 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1            |2  |3 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 517 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 525 632 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 529 634 NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2]  <||@
  Comment 529 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1            |2  |3 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 529 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 533 636 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 537 638 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 540 640 rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 543 642 stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 548 644 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2]  <||@
  Comment 551 {HotSpotMethod<Writer.write(String)>}  <||@
  Comment 551 INVOKESPECIAL  <||@
  Comment 556 [stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 564 646 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 569 648 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 573 650 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2]  <||@
  Comment 573 [rsi:0, r10:0, stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 573 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 581 652 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 585 654 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 588 656 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2]  <||@
  Comment 591 {HotSpotMethod<BufferedWriter.flushBuffer()>}  <||@
  Comment 591 INVOKESPECIAL  <||@
  Comment 596 [stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 604 658 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 609 660 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD  <||@
  Comment 613 662 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2]  <||@
  Comment 613 [rsi:0, stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 613 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 621 664 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2]  <||@
  Comment 621 [rsi:0, r10:0, stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 621 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 629 666 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 633 668 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 636 670 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2]  <||@
  Comment 639 {HotSpotMethod<StreamEncoder.flushBuffer()>}  <||@
  Comment 639 INVOKESPECIAL  <||@
  Comment 644 [stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 652 672 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 657 674 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 660 676 rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2]  <||@
  Comment 660 [rax:0, rsi:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 660 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 667 678 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2]  <||@
  Comment 667 [rax:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 667 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 675 680 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2]  <||@
  Comment 675 [rax:0, rdx:0, rsi:0, r10:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 675 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 683 682 CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null  <||@
  Comment 693 block B18 null  <||@
  Comment 693 684 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 693 686 NOP  <||@
  Comment 694 688 NOP  <||@
  Comment 695 690 NOP  <||@
  Comment 696 692 NOP  <||@
  Comment 697 694 NOP  <||@
  Comment 698 696 NOP  <||@
  Comment 699 698 NOP  <||@
  Comment 700 700 NOP  <||@
  Comment 701 702 NOP  <||@
  Comment 702 704 NOP  <||@
  Comment 703 706 NOP  <||@
  Comment 704 708 NOP  <||@
  Comment 705 710 NOP  <||@
  Comment 706 712 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 714 714 r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 722 716 r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 729 718 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 733 720 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 737 722 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 741 724 CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD  <||@
  Comment 750 block B19 null  <||@
  Comment 750 726 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 750 728 NOP  <||@
  Comment 751 730 NOP  <||@
  Comment 752 732 NOP  <||@
  Comment 753 734 NOP  <||@
  Comment 754 736 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null  <||@
  Comment 764 block B20 null  <||@
  Comment 764 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 740 NOP  <||@
  Comment 765 742 NOP  <||@
  Comment 766 744 NOP  <||@
  Comment 767 746 NOP  <||@
  Comment 768 748 NOP  <||@
  Comment 769 750 NOP  <||@
  Comment 770 752 NOP  <||@
  Comment 771 754 NOP  <||@
  Comment 772 756 NOP  <||@
  Comment 773 758 NOP  <||@
  Comment 774 760 NOP  <||@
  Comment 775 762 NOP  <||@
  Comment 776 764 NOP  <||@
  Comment 777 766 NOP  <||@
  Comment 778 768 NOP  <||@
  Comment 779 770 NOP  <||@
  Comment 780 772 NOP  <||@
  Comment 781 774 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22  <||@
  Comment 842 776 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 854 778 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 854 block B22 null  <||@
  Comment 854 790 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 792 NOP  <||@
  Comment 855 794 NOP  <||@
  Comment 856 796 NOP  <||@
  Comment 857 798 NOP  <||@
  Comment 858 800 NOP  <||@
  Comment 859 802 NOP  <||@
  Comment 860 804 NOP  <||@
  Comment 861 806 r8|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 867 808 MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 875 810 MEMBAR barriers: 4  <||@
  Comment 880 812 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null  <||@
  Comment 890 block B23 null  <||@
  Comment 890 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 890 816 NOP  <||@
  Comment 891 818 NOP  <||@
  Comment 892 820 NOP  <||@
  Comment 893 822 NOP  <||@
  Comment 894 824 NOP  <||@
  Comment 895 826 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 903 828 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 912 block B24 null  <||@
  Comment 912 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 912 832 NOP  <||@
  Comment 913 834 NOP  <||@
  Comment 914 836 NOP  <||@
  Comment 915 838 JUMP ~outgoingValues: [] destination: B24 -> B34  <||@
  Comment 915 block B34 null  <||@
  Comment 915 1000 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 915 1002 NOP  <||@
  Comment 916 1004 NOP  <||@
  Comment 917 1006 NOP  <||@
  Comment 918 1008 NOP  <||@
  Comment 919 1010 NOP  <||@
  Comment 920 1012 NOP  <||@
  Comment 921 1014 NOP  <||@
  Comment 922 1016 NOP  <||@
  Comment 923 1018 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 926 1020 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 951 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 967 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 979 POLL_RETURN_FAR  <||@
  Comment 993 block B4 null  <||@
  Comment 993 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 993 94 NOP  <||@
  Comment 994 96 NOP  <||@
  Comment 995 98 NOP  <||@
  Comment 996 100 NOP  <||@
  Comment 997 102 NOP  <||@
  Comment 998 104 NOP  <||@
  Comment 999 106 NOP  <||@
  Comment 1000 108 NOP  <||@
  Comment 1001 110 NOP  <||@
  Comment 1002 112 NOP  <||@
  Comment 1003 114 NOP  <||@
  Comment 1004 116 NOP  <||@
  Comment 1005 118 rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD  <||@
  Comment 1012 120 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1016 122 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1019 124 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1024 126 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2]  <||@
  Comment 1024 {HotSpotMethod<Object.toString()>}  <||@
  Comment 1024 INLINE_INVOKE  <||@
  Comment 1026 [stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |stack:32|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1034 128 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 1039 block B21 null  <||@
  Comment 1039 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1039 782 NOP  <||@
  Comment 1040 784 NOP  <||@
  Comment 1041 786 NOP  <||@
  Comment 1042 788 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 1047 block B9 null  <||@
  Comment 1047 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1047 242 NOP  <||@
  Comment 1048 244 NOP  <||@
  Comment 1049 246 NOP  <||@
  Comment 1050 248 NOP  <||@
  Comment 1051 250 NOP  <||@
  Comment 1052 252 NOP  <||@
  Comment 1053 254 NOP  <||@
  Comment 1054 256 rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1062 258 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 1066 260 CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD  <||@
  Comment 1075 block B10 null  <||@
  Comment 1075 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1075 264 NOP  <||@
  Comment 1076 266 NOP  <||@
  Comment 1077 268 NOP  <||@
  Comment 1078 270 NOP  <||@
  Comment 1079 272 NOP  <||@
  Comment 1080 274 NOP  <||@
  Comment 1081 276 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1089 278 rcx|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 1094 280 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 1102 block B12 null  <||@
  Comment 1102 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1102 308 NOP  <||@
  Comment 1103 310 NOP  <||@
  Comment 1104 312 NOP  <||@
  Comment 1105 314 NOP  <||@
  Comment 1106 316 NOP  <||@
  Comment 1107 318 MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1115 320 MEMBAR barriers: 4  <||@
  Comment 1120 322 JUMP ~outgoingValues: [] destination: B12 -> B17  <||@
  Comment 1125 block B33 null  <||@
  Comment 1125 990 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1125 992 NOP  <||@
  Comment 1126 994 NOP  <||@
  Comment 1127 996 NOP  <||@
  Comment 1128 998 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1133 block B25 null  <||@
  Comment 1133 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1133 842 NOP  <||@
  Comment 1134 844 NOP  <||@
  Comment 1135 846 NOP  <||@
  Comment 1136 848 NOP  <||@
  Comment 1137 850 NOP  <||@
  Comment 1138 852 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1146 854 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 1155 block B26 null  <||@
  Comment 1155 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1155 858 NOP  <||@
  Comment 1156 860 NOP  <||@
  Comment 1157 862 NOP  <||@
  Comment 1158 864 JUMP ~outgoingValues: [] destination: B26 -> B34  <||@
  Comment 1163 block B27 null  <||@
  Comment 1163 866 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1163 868 NOP  <||@
  Comment 1164 870 NOP  <||@
  Comment 1165 872 NOP  <||@
  Comment 1166 874 NOP  <||@
  Comment 1167 876 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1182 block B28 null  <||@
  Comment 1182 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1182 880 NOP  <||@
  Comment 1183 882 NOP  <||@
  Comment 1184 884 NOP  <||@
  Comment 1185 886 JUMP ~outgoingValues: [] destination: B28 -> B34  <||@
  Comment 1190 block B13 null  <||@
  Comment 1190 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1190 326 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1195 328 stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 330 NOP  <||@
  Comment 1201 332 NOP  <||@
  Comment 1202 334 NOP  <||@
  Comment 1203 336 NOP  <||@
  Comment 1204 338 NOP  <||@
  Comment 1205 340 NOP  <||@
  Comment 1206 342 NOP  <||@
  Comment 1207 344 NOP  <||@
  Comment 1208 346 NOP  <||@
  Comment 1209 348 NOP  <||@
  Comment 1210 350 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1213 352 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1218 354 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1223 356 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2]  <||@
  Comment 1223 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1223 INVOKESPECIAL  <||@
  Comment 1228 [stack:16, stack:24, stack:32, stack:40, stack:48]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:64|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1236 358 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 1244 block B14 null  <||@
  Comment 1244 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1244 362 NOP  <||@
  Comment 1245 364 NOP  <||@
  Comment 1246 366 NOP  <||@
  Comment 1247 368 NOP  <||@
  Comment 1248 370 NOP  <||@
  Comment 1249 372 NOP  <||@
  Comment 1250 374 NOP  <||@
  Comment 1251 376 NOP  <||@
  Comment 1252 378 NOP  <||@
  Comment 1253 380 NOP  <||@
  Comment 1254 382 NOP  <||@
  Comment 1255 384 NOP  <||@
  Comment 1256 386 NOP  <||@
  Comment 1257 388 NOP  <||@
  Comment 1258 390 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1263 392 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1270 394 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1275 396 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1281 398 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1287 400 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1292 402 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1300 404 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2]  <||@
  Comment 1303 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1303 INVOKESPECIAL  <||@
  Comment 1308 [stack:16, stack:24, stack:32, stack:40, stack:48]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1316 406 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1321 408 r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1326 410 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1331 412 JUMP ~outgoingValues: [] destination: B14 -> B17  <||@
  Comment 1336 block B15 null  <||@
  Comment 1336 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1336 416 NOP  <||@
  Comment 1337 418 NOP  <||@
  Comment 1338 420 NOP  <||@
  Comment 1339 422 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1344 424 r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1349 426 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1354 428 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 1359 block B29 null  <||@
  Comment 1359 888 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1359 890 NOP  <||@
  Comment 1360 892 NOP  <||@
  Comment 1361 894 NOP  <||@
  Comment 1362 896 NOP  <||@
  Comment 1363 898 NOP  <||@
  Comment 1364 900 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 1371 902 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 904 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1381 block B31 loop 0 depth 1 header:233|LoopBegin  <||@
  Comment 1381 940 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1408 942 NOP  <||@
  Comment 1409 944 NOP  <||@
  Comment 1410 946 NOP  <||@
  Comment 1411 948 NOP  <||@
  Comment 1412 950 NOP  <||@
  Comment 1413 952 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2]  <||@
  Comment 1420 [rdx:0, rsi:0, r10:0, stack:24, stack:40, stack:48]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5         
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r11|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |          
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1420 {infopoint: SAFEPOINT}  <||@
  Comment 1420 POLL_FAR  <||@
  Comment 1423 954 JUMP ~outgoingValues: [] destination: B31 -> B30  <||@
  Comment 1423 block B30 loop 0 depth 1 header:233|LoopBegin  <||@
  Comment 1423 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1423 908 NOP  <||@
  Comment 1424 910 NOP  <||@
  Comment 1425 912 NOP  <||@
  Comment 1426 914 NOP  <||@
  Comment 1427 916 NOP  <||@
  Comment 1428 918 NOP  <||@
  Comment 1429 920 NOP  <||@
  Comment 1430 922 NOP  <||@
  Comment 1431 924 NOP  <||@
  Comment 1432 926 NOP  <||@
  Comment 1433 928 NOP  <||@
  Comment 1434 930 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1442 932 r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD  <||@
  Comment 1449 934 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1452 936 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD  <||@
  Comment 1462 938 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 1464 block B32 null  <||@
  Comment 1464 956 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1464 958 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1469 960 NOP  <||@
  Comment 1470 962 NOP  <||@
  Comment 1471 964 NOP  <||@
  Comment 1472 966 NOP  <||@
  Comment 1473 968 NOP  <||@
  Comment 1474 970 NOP  <||@
  Comment 1475 972 NOP  <||@
  Comment 1476 974 NOP  <||@
  Comment 1477 976 NOP  <||@
  Comment 1478 978 NOP  <||@
  Comment 1479 980 rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1487 982 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 1491 984 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2]  <||@
  Comment 1491 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1491 INVOKESTATIC  <||@
  Comment 1496 [stack:16, stack:24, stack:40, stack:48]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1504 986 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1509 988 JUMP ~outgoingValues: [] destination: B32 -> B34  <||@
  Comment 1514 block B1 null  <||@
  Comment 1514 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1514 30 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 32 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"]  <||@
  Comment 1519 {Object[String:"null"]}  <||@
  Comment 1529 34 NOP  <||@
  Comment 1530 36 NOP  <||@
  Comment 1531 38 NOP  <||@
  Comment 1532 40 NOP  <||@
  Comment 1533 42 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1536 46 JUMP ~outgoingValues: [] destination: B1 -> B8  <||@
  Comment 1541 block B6 null  <||@
  Comment 1541 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 144 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"]  <||@
  Comment 1541 {Object[String:"null"]}  <||@
  Comment 1551 146 NOP  <||@
  Comment 1552 148 NOP  <||@
  Comment 1553 150 NOP  <||@
  Comment 1554 152 NOP  <||@
  Comment 1555 154 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1558 158 JUMP ~outgoingValues: [] destination: B6 -> B8  <||@
  Comment 1563 block B11 null  <||@
  Comment 1563 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1563 284 stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1568 286 NOP  <||@
  Comment 1569 288 NOP  <||@
  Comment 1570 290 NOP  <||@
  Comment 1571 292 NOP  <||@
  Comment 1572 294 NOP  <||@
  Comment 1573 296 NOP  <||@
  Comment 1574 298 NOP  <||@
  Comment 1575 300 MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD  <||@
  Comment 1586 302 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1597 304 DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2]  <||@
  Comment 1597 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1602 [rdx:0, r8:0, stack:32, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r11|DWORD    |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0           
     locals:  |r8|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1610 block B35 null  <||@
  Comment 1610 1022 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1610 1024 NOP  <||@
  Comment 1611 1026 NOP  <||@
  Comment 1612 1028 NOP  <||@
  Comment 1613 1030 NOP  <||@
  Comment 1614 1032 NOP  <||@
  Comment 1615 1034 NOP  <||@
  Comment 1616 1036 NOP  <||@
  Comment 1617 1038 NOP  <||@
  Comment 1618 1040 NOP  <||@
  Comment 1619 1042 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 1623 1044 MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD  <||@
  Comment 1634 1046 MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD  <||@
  Comment 1645 1048 DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2]  <||@
  Comment 1645 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1650 [rax:0, rdx:0, r10:0, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1658 block B36 null  <||@
  Comment 1658 1050 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1658 1052 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1663 1054 rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1668 1056 NOP  <||@
  Comment 1669 1058 NOP  <||@
  Comment 1670 1060 NOP  <||@
  Comment 1671 1062 NOP  <||@
  Comment 1672 1064 NOP  <||@
  Comment 1673 1066 NOP  <||@
  Comment 1674 1068 NOP  <||@
  Comment 1675 1070 MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD  <||@
  Comment 1686 1072 MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD  <||@
  Comment 1697 1074 DEOPT info [bci:7, 23, 16, 5, 5, 2]  <||@
  Comment 1697 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1702 [rax:0, rdx:0, rsi:0]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 1715 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1730 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1745 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1760 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1785 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1813 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1818 [rax:0, rdx:0, rsi:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1848 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1853 [rax:0, rdx:0, rsi:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1883 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1888 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1            |2  |3 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1918 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1923 [rsi:0, stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1953 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1958 [rax:0, rsi:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1993 [rax:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2001 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2001 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2007 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2007 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10716[java.io.PrintStream.append(CharSequence)]"
  method "HotSpotCompilation-10716[java.io.PrintStream.append(CharSequence)]"
  date 1724269766437
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af7f600 448b560849bc0000002b787f00004d03d44d33e4493bc20f85635a80fe66669089842400c0feff4883ec489041817f20000000000f857406000090909090909090909048896c244048897424304885d20f84940500009090909090909090908b5a0848b80000002b787f0000488d1c1848b8d8e8002b787f0000483bc30f855e030000909090488bc24889542428909090904885c00f846a050000909090488b74243090909090909090909090909090909090909090908b5618448b14d50c000000468b14d50c000000428504d5000000004d8b9f800300004d8b1b458bc249c1e00348c1e2034c8bc8b800000000b901000000f0420fb10cd5100000000f8513030000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000428b1cd50c00000048c1e3034885db0f841d000000498b4f284883f9000f84540500004883e90849894f2849034f38488919498bcb48c1e90342890cd50c0000004d8bd04d33d349c1ea160f84450000004d8bd049c1ea0948b900e0368d787f00004c03d141803a02742bf08304240041803a00742041c60200498b4f484885c90f84ff0400004883e90849894f4849034f584c8911909090909090909090909090909090909090909090909090909090909090909090909090448b5624428504d500000000448b5e10438504dc49c1e203498bf2498bd14c894c2420666690e8545b80fe0f1f84001c040005488b742430448b5624428504d50000000049c1e203498bf2666690e82c5b80fe0f1f840044040007488b742430448b5628468b14d514000000428504d50000000049c1e203498bf2666690e8fc5a80fe0f1f84007404000a488b7424308b46188b14c50c000000448b14d50c000000428504d500000000807e0d000f85c503000090909090909090909090909090468b1cd510000000468b04d50c0000004d8b8f8003000049c1e00348c1e20348c1e0034d3b010f855c030000909090904183fb010f8513010000909090909090909090909090909090909041807f40000f8432000000468b0cd50c00000049c1e1034d85c90f841d0000004d8b47284983f8000f84a10300004983e8084d8947284d0347384d890842c704d50c0000000000000090909090909090458bc341ffc8468904d510000000f0830424004183fb010f85eb0000009090909090468b14d5140000004585d20f85dd0000009090909090909090909090488bc6488b6c24404883c448493ba7d804000072234883ec08498bff48b9505d98b1787f0000ffd14883c40848b980d27399787f0000ffe1493ba7500400000f870b030000c3909090909090909090909090488b9bd8010000488b4340488bf24889542428ffd00f1f840000000000e97ffcffff909090e93fffffff90909090909090428b0cd50c00000048c1e1034c3bd90f8573000000909090909090468b1cd510000000418bcbffc185c90f8ccd010000909090909042890cd510000000f083042400e978fdffff909090e926ffffff9090909090468b14d5140000004585d20f8508000000909090e908ffffff9090909042833cd50c000000000f85b1000000909090e9edfeffff48895424184c894c242090909090909090909090498bf0ba010000004c89442410e8b45880fe0f1f8400bc06000f85c00f855c0000009090909090909090909090909090488b74241048c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8645880fe0f1f84000c070010488b5424184c8b4c2420488b742430e9a5fcffff909090488b5424184c8b4c2420488b742430e98efcffff9090909090418bf248c1e6034889442418e92a0000006666660f1f840000000000666666900f1f8400000000006666669090909090904d8b87580400004185009090909090909090909090468b1cd50c000000458bc34183e0fe418bc3f0460fb104d50c00000075c8488954241090909090909090909090428b34d51800000048c1e603e8a85d80fe0f1f8400c8070012488b742430e9a9fdffff488954242849ba10b9c4ff0700000090909090498bc2e999faffff49ba10b9c4ff0700000090909090498bc2e983faffff4c894c24209090909090909041c78784040000ed38feff49c7879004000094020000e838b580fe0f1f84000000000090909090909090909049c1e20341c78784040000ed3dfeff49c78790040000942a0000e808b580fe0f1f840000000000488b442420488b5424289090909090909041c78784040000ed41feff49c7879004000094200000e8d4b480fe0f1f84000000000048896c2440e868b57efee97df9fffff448891c24e8398594fee9adfafffff44c891424e8aaa694fee902fbfffff44c890c24e81b8594fee960fcfffff4488d0de1fcffff49898f68040000e902c380fef441c78784040000ed49feff49c7879004000014000000e860b480fe0f1f84000000000041c78784040000f5f6feff49c7879004000000000000e83db480fe0f1f84000000000041c78784040000ed45feff49c7879004000014230000e81ab480fe0f1f84000000000041c78784040000f5dafeff49c7879004000000000000e8f7b380fe0f1f84000000000041c78784040000f5cbfeff49c7879004000000000000e8d4b380fe0f1f84000000000041c78784040000f5c7feff49c7879004000000000000e8b1b380fe0f1f840000000000e82a5594fef4e844b180fef4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3c842700 slotKind: QWORD  <||@
  Comment 72 24 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 77 26 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 86 block B2 null  <||@
  Comment 86 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 86 50 NOP  <||@
  Comment 87 52 NOP  <||@
  Comment 88 54 NOP  <||@
  Comment 89 56 NOP  <||@
  Comment 90 58 NOP  <||@
  Comment 91 60 NOP  <||@
  Comment 92 62 NOP  <||@
  Comment 93 64 NOP  <||@
  Comment 94 66 NOP  <||@
  Comment 95 68 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 98 70 rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 108 72 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 140154094223360 shift: 0  <||@
  Comment 112 74 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 112 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 122 76 CMPBRANCH (x: rax|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5091333495917754 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 131 block B3 null  <||@
  Comment 131 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 131 80 NOP  <||@
  Comment 132 82 NOP  <||@
  Comment 133 84 NOP  <||@
  Comment 134 86 rax|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 137 88 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 142 90 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 142 block B5 null  <||@
  Comment 142 130 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 142 132 NOP  <||@
  Comment 143 134 NOP  <||@
  Comment 144 136 NOP  <||@
  Comment 145 138 NOP  <||@
  Comment 146 140 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 8.489066436467851E-7 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 155 block B7 null  <||@
  Comment 155 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 162 NOP  <||@
  Comment 156 164 NOP  <||@
  Comment 157 166 NOP  <||@
  Comment 158 170 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 158 block B8 null  <||@
  Comment 158 172 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 158 156 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 163 174 NOP  <||@
  Comment 164 176 NOP  <||@
  Comment 165 178 NOP  <||@
  Comment 166 180 NOP  <||@
  Comment 167 182 NOP  <||@
  Comment 168 184 NOP  <||@
  Comment 169 186 NOP  <||@
  Comment 170 188 NOP  <||@
  Comment 171 190 NOP  <||@
  Comment 172 192 NOP  <||@
  Comment 173 194 NOP  <||@
  Comment 174 196 NOP  <||@
  Comment 175 198 NOP  <||@
  Comment 176 200 NOP  <||@
  Comment 177 202 NOP  <||@
  Comment 178 204 NOP  <||@
  Comment 179 206 NOP  <||@
  Comment 180 208 NOP  <||@
  Comment 181 210 NOP  <||@
  Comment 182 212 NOP  <||@
  Comment 183 214 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 186 216 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2]  <||@
  Comment 186 [rax:0, rdx:0, rsi:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 186 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 194 218 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 5, 2]  <||@
  Comment 194 [rax:0, rdx:0, rsi:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 194 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 202 220 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 2, 5, 2]  <||@
  Comment 202 [rax:0, rdx:0, rsi:0, r10:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 202 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 210 222 r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 217 224 r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD  <||@
  Comment 220 226 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 227 228 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 231 230 r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 234 232 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 239 234 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 244 236 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 254 238 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B8 -> B9 falseDestination: B8 -> B16  <||@
  Comment 260 block B16 null  <||@
  Comment 260 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 260 432 NOP  <||@
  Comment 261 434 NOP  <||@
  Comment 262 436 NOP  <||@
  Comment 263 438 NOP  <||@
  Comment 264 440 NOP  <||@
  Comment 265 442 NOP  <||@
  Comment 266 444 NOP  <||@
  Comment 267 446 NOP  <||@
  Comment 268 448 NOP  <||@
  Comment 269 450 NOP  <||@
  Comment 270 452 NOP  <||@
  Comment 271 454 NOP  <||@
  Comment 272 456 NOP  <||@
  Comment 273 458 NOP  <||@
  Comment 274 460 NOP  <||@
  Comment 275 462 NOP  <||@
  Comment 276 464 NOP  <||@
  Comment 277 466 NOP  <||@
  Comment 278 468 NOP  <||@
  Comment 279 470 NOP  <||@
  Comment 280 472 NOP  <||@
  Comment 281 474 NOP  <||@
  Comment 282 476 NOP  <||@
  Comment 283 478 NOP  <||@
  Comment 284 480 NOP  <||@
  Comment 285 482 NOP  <||@
  Comment 286 484 NOP  <||@
  Comment 287 486 NOP  <||@
  Comment 288 488 NOP  <||@
  Comment 289 490 NOP  <||@
  Comment 290 492 NOP  <||@
  Comment 291 494 NOP  <||@
  Comment 292 496 NOP  <||@
  Comment 293 498 NOP  <||@
  Comment 294 500 NOP  <||@
  Comment 295 502 NOP  <||@
  Comment 296 504 NOP  <||@
  Comment 297 506 NOP  <||@
  Comment 298 508 NOP  <||@
  Comment 299 510 NOP  <||@
  Comment 300 512 NOP  <||@
  Comment 301 514 NOP  <||@
  Comment 302 516 NOP  <||@
  Comment 303 518 NOP  <||@
  Comment 304 520 NOP  <||@
  Comment 305 522 NOP  <||@
  Comment 306 524 NOP  <||@
  Comment 307 526 NOP  <||@
  Comment 308 528 NOP  <||@
  Comment 309 530 NOP  <||@
  Comment 310 532 NOP  <||@
  Comment 311 534 NOP  <||@
  Comment 312 536 NOP  <||@
  Comment 313 538 NOP  <||@
  Comment 314 540 NOP  <||@
  Comment 315 542 NOP  <||@
  Comment 316 544 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22  <||@
  Comment 377 546 rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 384 548 MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 392 550 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22  <||@
  Comment 477 552 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 477 block B17 null  <||@
  Comment 477 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 477 556 NOP  <||@
  Comment 478 558 NOP  <||@
  Comment 479 560 NOP  <||@
  Comment 480 562 NOP  <||@
  Comment 481 564 NOP  <||@
  Comment 482 566 NOP  <||@
  Comment 483 568 NOP  <||@
  Comment 484 570 NOP  <||@
  Comment 485 572 NOP  <||@
  Comment 486 574 NOP  <||@
  Comment 487 576 NOP  <||@
  Comment 488 578 NOP  <||@
  Comment 489 580 NOP  <||@
  Comment 490 582 NOP  <||@
  Comment 491 584 NOP  <||@
  Comment 492 586 NOP  <||@
  Comment 493 588 NOP  <||@
  Comment 494 590 NOP  <||@
  Comment 495 592 NOP  <||@
  Comment 496 594 NOP  <||@
  Comment 497 596 NOP  <||@
  Comment 498 598 NOP  <||@
  Comment 499 600 NOP  <||@
  Comment 500 602 NOP  <||@
  Comment 501 604 NOP  <||@
  Comment 502 606 NOP  <||@
  Comment 503 608 NOP  <||@
  Comment 504 610 NOP  <||@
  Comment 505 612 NOP  <||@
  Comment 506 614 NOP  <||@
  Comment 507 616 NOP  <||@
  Comment 508 618 NOP  <||@
  Comment 509 620 NOP  <||@
  Comment 510 622 NOP  <||@
  Comment 511 624 NOP  <||@
  Comment 512 626 NOP  <||@
  Comment 513 628 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 517 630 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2]  <||@
  Comment 517 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1            |2  |3 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 517 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 525 632 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 529 634 NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 2]  <||@
  Comment 529 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1            |2  |3 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 529 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 533 636 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 537 638 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 540 640 rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 543 642 stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 548 644 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 2]  <||@
  Comment 551 {HotSpotMethod<Writer.write(String)>}  <||@
  Comment 551 INVOKESPECIAL  <||@
  Comment 556 [stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 564 646 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 569 648 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 573 650 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 2]  <||@
  Comment 573 [rsi:0, r10:0, stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 573 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 581 652 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 585 654 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 588 656 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 2]  <||@
  Comment 591 {HotSpotMethod<BufferedWriter.flushBuffer()>}  <||@
  Comment 591 INVOKESPECIAL  <||@
  Comment 596 [stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 604 658 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 609 660 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD  <||@
  Comment 613 662 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 2]  <||@
  Comment 613 [rsi:0, stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 613 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 621 664 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 2]  <||@
  Comment 621 [rsi:0, r10:0, stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 621 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 629 666 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 633 668 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 636 670 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 2]  <||@
  Comment 639 {HotSpotMethod<StreamEncoder.flushBuffer()>}  <||@
  Comment 639 INVOKESPECIAL  <||@
  Comment 644 [stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 652 672 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 657 674 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 660 676 rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2]  <||@
  Comment 660 [rax:0, rsi:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 660 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 667 678 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 2]  <||@
  Comment 667 [rax:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 667 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 675 680 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 2]  <||@
  Comment 675 [rax:0, rdx:0, rsi:0, r10:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 675 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 683 682 CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B36 y: 0 size: BYTE inlinedY: null  <||@
  Comment 693 block B18 null  <||@
  Comment 693 684 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 693 686 NOP  <||@
  Comment 694 688 NOP  <||@
  Comment 695 690 NOP  <||@
  Comment 696 692 NOP  <||@
  Comment 697 694 NOP  <||@
  Comment 698 696 NOP  <||@
  Comment 699 698 NOP  <||@
  Comment 700 700 NOP  <||@
  Comment 701 702 NOP  <||@
  Comment 702 704 NOP  <||@
  Comment 703 706 NOP  <||@
  Comment 704 708 NOP  <||@
  Comment 705 710 NOP  <||@
  Comment 706 712 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 714 714 r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 722 716 r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 729 718 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 733 720 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 737 722 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 741 724 CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B35 size: QWORD  <||@
  Comment 750 block B19 null  <||@
  Comment 750 726 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 750 728 NOP  <||@
  Comment 751 730 NOP  <||@
  Comment 752 732 NOP  <||@
  Comment 753 734 NOP  <||@
  Comment 754 736 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null  <||@
  Comment 764 block B20 null  <||@
  Comment 764 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 740 NOP  <||@
  Comment 765 742 NOP  <||@
  Comment 766 744 NOP  <||@
  Comment 767 746 NOP  <||@
  Comment 768 748 NOP  <||@
  Comment 769 750 NOP  <||@
  Comment 770 752 NOP  <||@
  Comment 771 754 NOP  <||@
  Comment 772 756 NOP  <||@
  Comment 773 758 NOP  <||@
  Comment 774 760 NOP  <||@
  Comment 775 762 NOP  <||@
  Comment 776 764 NOP  <||@
  Comment 777 766 NOP  <||@
  Comment 778 768 NOP  <||@
  Comment 779 770 NOP  <||@
  Comment 780 772 NOP  <||@
  Comment 781 774 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b0d1d22  <||@
  Comment 842 776 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 854 778 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 854 block B22 null  <||@
  Comment 854 790 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 792 NOP  <||@
  Comment 855 794 NOP  <||@
  Comment 856 796 NOP  <||@
  Comment 857 798 NOP  <||@
  Comment 858 800 NOP  <||@
  Comment 859 802 NOP  <||@
  Comment 860 804 NOP  <||@
  Comment 861 806 r8|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 867 808 MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 875 810 MEMBAR barriers: 4  <||@
  Comment 880 812 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679739743983765 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B33 y: 1 size: DWORD inlinedY: null  <||@
  Comment 890 block B23 null  <||@
  Comment 890 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 890 816 NOP  <||@
  Comment 891 818 NOP  <||@
  Comment 892 820 NOP  <||@
  Comment 893 822 NOP  <||@
  Comment 894 824 NOP  <||@
  Comment 895 826 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 903 828 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301412906094 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 912 block B24 null  <||@
  Comment 912 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 912 832 NOP  <||@
  Comment 913 834 NOP  <||@
  Comment 914 836 NOP  <||@
  Comment 915 838 JUMP ~outgoingValues: [] destination: B24 -> B34  <||@
  Comment 915 block B34 null  <||@
  Comment 915 1000 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 915 1002 NOP  <||@
  Comment 916 1004 NOP  <||@
  Comment 917 1006 NOP  <||@
  Comment 918 1008 NOP  <||@
  Comment 919 1010 NOP  <||@
  Comment 920 1012 NOP  <||@
  Comment 921 1014 NOP  <||@
  Comment 922 1016 NOP  <||@
  Comment 923 1018 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 926 1020 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 951 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 967 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 979 POLL_RETURN_FAR  <||@
  Comment 993 block B4 null  <||@
  Comment 993 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 993 94 NOP  <||@
  Comment 994 96 NOP  <||@
  Comment 995 98 NOP  <||@
  Comment 996 100 NOP  <||@
  Comment 997 102 NOP  <||@
  Comment 998 104 NOP  <||@
  Comment 999 106 NOP  <||@
  Comment 1000 108 NOP  <||@
  Comment 1001 110 NOP  <||@
  Comment 1002 112 NOP  <||@
  Comment 1003 114 NOP  <||@
  Comment 1004 116 NOP  <||@
  Comment 1005 118 rbx|QWORD = MOV input: [rbx|QWORD + 472] size: QWORD  <||@
  Comment 1012 120 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1016 122 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1019 124 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1024 126 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.toString()> state [bci:11, 2, 2]  <||@
  Comment 1024 {HotSpotMethod<Object.toString()>}  <||@
  Comment 1024 INLINE_INVOKE  <||@
  Comment 1026 [stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |stack:32|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1034 128 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 1039 block B21 null  <||@
  Comment 1039 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1039 782 NOP  <||@
  Comment 1040 784 NOP  <||@
  Comment 1041 786 NOP  <||@
  Comment 1042 788 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 1047 block B9 null  <||@
  Comment 1047 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1047 242 NOP  <||@
  Comment 1048 244 NOP  <||@
  Comment 1049 246 NOP  <||@
  Comment 1050 248 NOP  <||@
  Comment 1051 250 NOP  <||@
  Comment 1052 252 NOP  <||@
  Comment 1053 254 NOP  <||@
  Comment 1054 256 rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1062 258 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 1066 260 CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: QWORD  <||@
  Comment 1075 block B10 null  <||@
  Comment 1075 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1075 264 NOP  <||@
  Comment 1076 266 NOP  <||@
  Comment 1077 268 NOP  <||@
  Comment 1078 270 NOP  <||@
  Comment 1079 272 NOP  <||@
  Comment 1080 274 NOP  <||@
  Comment 1081 276 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1089 278 rcx|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 1094 280 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 1102 block B12 null  <||@
  Comment 1102 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1102 308 NOP  <||@
  Comment 1103 310 NOP  <||@
  Comment 1104 312 NOP  <||@
  Comment 1105 314 NOP  <||@
  Comment 1106 316 NOP  <||@
  Comment 1107 318 MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1115 320 MEMBAR barriers: 4  <||@
  Comment 1120 322 JUMP ~outgoingValues: [] destination: B12 -> B17  <||@
  Comment 1125 block B33 null  <||@
  Comment 1125 990 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1125 992 NOP  <||@
  Comment 1126 994 NOP  <||@
  Comment 1127 996 NOP  <||@
  Comment 1128 998 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1133 block B25 null  <||@
  Comment 1133 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1133 842 NOP  <||@
  Comment 1134 844 NOP  <||@
  Comment 1135 846 NOP  <||@
  Comment 1136 848 NOP  <||@
  Comment 1137 850 NOP  <||@
  Comment 1138 852 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1146 854 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992343450916052 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 1155 block B26 null  <||@
  Comment 1155 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1155 858 NOP  <||@
  Comment 1156 860 NOP  <||@
  Comment 1157 862 NOP  <||@
  Comment 1158 864 JUMP ~outgoingValues: [] destination: B26 -> B34  <||@
  Comment 1163 block B27 null  <||@
  Comment 1163 866 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1163 868 NOP  <||@
  Comment 1164 870 NOP  <||@
  Comment 1165 872 NOP  <||@
  Comment 1166 874 NOP  <||@
  Comment 1167 876 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1182 block B28 null  <||@
  Comment 1182 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1182 880 NOP  <||@
  Comment 1183 882 NOP  <||@
  Comment 1184 884 NOP  <||@
  Comment 1185 886 JUMP ~outgoingValues: [] destination: B28 -> B34  <||@
  Comment 1190 block B13 null  <||@
  Comment 1190 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1190 326 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1195 328 stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 330 NOP  <||@
  Comment 1201 332 NOP  <||@
  Comment 1202 334 NOP  <||@
  Comment 1203 336 NOP  <||@
  Comment 1204 338 NOP  <||@
  Comment 1205 340 NOP  <||@
  Comment 1206 342 NOP  <||@
  Comment 1207 344 NOP  <||@
  Comment 1208 346 NOP  <||@
  Comment 1209 348 NOP  <||@
  Comment 1210 350 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1213 352 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1218 354 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1223 356 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 2]  <||@
  Comment 1223 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1223 INVOKESPECIAL  <||@
  Comment 1228 [stack:16, stack:24, stack:32, stack:40, stack:48]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:64|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1236 358 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7506638343069569 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 1244 block B14 null  <||@
  Comment 1244 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1244 362 NOP  <||@
  Comment 1245 364 NOP  <||@
  Comment 1246 366 NOP  <||@
  Comment 1247 368 NOP  <||@
  Comment 1248 370 NOP  <||@
  Comment 1249 372 NOP  <||@
  Comment 1250 374 NOP  <||@
  Comment 1251 376 NOP  <||@
  Comment 1252 378 NOP  <||@
  Comment 1253 380 NOP  <||@
  Comment 1254 382 NOP  <||@
  Comment 1255 384 NOP  <||@
  Comment 1256 386 NOP  <||@
  Comment 1257 388 NOP  <||@
  Comment 1258 390 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1263 392 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1270 394 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1275 396 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1281 398 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1287 400 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1292 402 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1300 404 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 2]  <||@
  Comment 1303 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1303 INVOKESPECIAL  <||@
  Comment 1308 [stack:16, stack:24, stack:32, stack:40, stack:48]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1316 406 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1321 408 r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1326 410 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1331 412 JUMP ~outgoingValues: [] destination: B14 -> B17  <||@
  Comment 1336 block B15 null  <||@
  Comment 1336 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1336 416 NOP  <||@
  Comment 1337 418 NOP  <||@
  Comment 1338 420 NOP  <||@
  Comment 1339 422 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1344 424 r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1349 426 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1354 428 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 1359 block B29 null  <||@
  Comment 1359 888 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1359 890 NOP  <||@
  Comment 1360 892 NOP  <||@
  Comment 1361 894 NOP  <||@
  Comment 1362 896 NOP  <||@
  Comment 1363 898 NOP  <||@
  Comment 1364 900 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 1371 902 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 904 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1381 block B31 loop 0 depth 1 header:233|LoopBegin  <||@
  Comment 1381 940 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1408 942 NOP  <||@
  Comment 1409 944 NOP  <||@
  Comment 1410 946 NOP  <||@
  Comment 1411 948 NOP  <||@
  Comment 1412 950 NOP  <||@
  Comment 1413 952 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 2]  <||@
  Comment 1420 [rdx:0, rsi:0, r10:0, stack:24, stack:40, stack:48]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5         
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r11|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |          
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1420 {infopoint: SAFEPOINT}  <||@
  Comment 1420 POLL_FAR  <||@
  Comment 1423 954 JUMP ~outgoingValues: [] destination: B31 -> B30  <||@
  Comment 1423 block B30 loop 0 depth 1 header:233|LoopBegin  <||@
  Comment 1423 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1423 908 NOP  <||@
  Comment 1424 910 NOP  <||@
  Comment 1425 912 NOP  <||@
  Comment 1426 914 NOP  <||@
  Comment 1427 916 NOP  <||@
  Comment 1428 918 NOP  <||@
  Comment 1429 920 NOP  <||@
  Comment 1430 922 NOP  <||@
  Comment 1431 924 NOP  <||@
  Comment 1432 926 NOP  <||@
  Comment 1433 928 NOP  <||@
  Comment 1434 930 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1442 932 r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD  <||@
  Comment 1449 934 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1452 936 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD  <||@
  Comment 1462 938 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 1464 block B32 null  <||@
  Comment 1464 956 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1464 958 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1469 960 NOP  <||@
  Comment 1470 962 NOP  <||@
  Comment 1471 964 NOP  <||@
  Comment 1472 966 NOP  <||@
  Comment 1473 968 NOP  <||@
  Comment 1474 970 NOP  <||@
  Comment 1475 972 NOP  <||@
  Comment 1476 974 NOP  <||@
  Comment 1477 976 NOP  <||@
  Comment 1478 978 NOP  <||@
  Comment 1479 980 rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1487 982 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 1491 984 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 2]  <||@
  Comment 1491 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1491 INVOKESTATIC  <||@
  Comment 1496 [stack:16, stack:24, stack:40, stack:48]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1504 986 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1509 988 JUMP ~outgoingValues: [] destination: B32 -> B34  <||@
  Comment 1514 block B1 null  <||@
  Comment 1514 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1514 30 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 32 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"]  <||@
  Comment 1519 {Object[String:"null"]}  <||@
  Comment 1529 34 NOP  <||@
  Comment 1530 36 NOP  <||@
  Comment 1531 38 NOP  <||@
  Comment 1532 40 NOP  <||@
  Comment 1533 42 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1536 46 JUMP ~outgoingValues: [] destination: B1 -> B8  <||@
  Comment 1541 block B6 null  <||@
  Comment 1541 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 144 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"]  <||@
  Comment 1541 {Object[String:"null"]}  <||@
  Comment 1551 146 NOP  <||@
  Comment 1552 148 NOP  <||@
  Comment 1553 150 NOP  <||@
  Comment 1554 152 NOP  <||@
  Comment 1555 154 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1558 158 JUMP ~outgoingValues: [] destination: B6 -> B8  <||@
  Comment 1563 block B11 null  <||@
  Comment 1563 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1563 284 stack:48|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1568 286 NOP  <||@
  Comment 1569 288 NOP  <||@
  Comment 1570 290 NOP  <||@
  Comment 1571 292 NOP  <||@
  Comment 1572 294 NOP  <||@
  Comment 1573 296 NOP  <||@
  Comment 1574 298 NOP  <||@
  Comment 1575 300 MOV x: [r15|QWORD + 1156] y: -116499 size: DWORD  <||@
  Comment 1586 302 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1597 304 DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 2]  <||@
  Comment 1597 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1602 [rdx:0, r8:0, stack:32, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r11|DWORD    |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0           
     locals:  |r8|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1610 block B35 null  <||@
  Comment 1610 1022 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1610 1024 NOP  <||@
  Comment 1611 1026 NOP  <||@
  Comment 1612 1028 NOP  <||@
  Comment 1613 1030 NOP  <||@
  Comment 1614 1032 NOP  <||@
  Comment 1615 1034 NOP  <||@
  Comment 1616 1036 NOP  <||@
  Comment 1617 1038 NOP  <||@
  Comment 1618 1040 NOP  <||@
  Comment 1619 1042 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2e64b592 encoding: base: 0 shift: 3  <||@
  Comment 1623 1044 MOV x: [r15|QWORD + 1156] y: -115219 size: DWORD  <||@
  Comment 1634 1046 MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD  <||@
  Comment 1645 1048 DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 2]  <||@
  Comment 1645 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1650 [rax:0, rdx:0, r10:0, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1658 block B36 null  <||@
  Comment 1658 1050 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1658 1052 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1663 1054 rdx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1668 1056 NOP  <||@
  Comment 1669 1058 NOP  <||@
  Comment 1670 1060 NOP  <||@
  Comment 1671 1062 NOP  <||@
  Comment 1672 1064 NOP  <||@
  Comment 1673 1066 NOP  <||@
  Comment 1674 1068 NOP  <||@
  Comment 1675 1070 MOV x: [r15|QWORD + 1156] y: -114195 size: DWORD  <||@
  Comment 1686 1072 MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD  <||@
  Comment 1697 1074 DEOPT info [bci:7, 23, 16, 5, 5, 2]  <||@
  Comment 1697 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1702 [rax:0, rdx:0, rsi:0]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 1715 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1730 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1745 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1760 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1785 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1813 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1818 [rax:0, rdx:0, rsi:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1848 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1853 [rax:0, rdx:0, rsi:0, stack:40, stack:48]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1883 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1888 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:48]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1            |2  |3 
     locals:  |rsi|QWORD[.]  |r9|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1918 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1923 [rsi:0, stack:32, stack:40, stack:48]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1953 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1958 [rax:0, rsi:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 1988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1993 [rax:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 2001 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2001 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2007 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2007 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
