begin_compilation
  name " HotSpotCompilation-4940[sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(int)]"
  method "HotSpotCompilation-4940[sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(int)]"
  date 1724269747854
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a100  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.StreamEncoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v105 v107 v108 ?86 ?87 v65 v99 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a100 v68 v97 v99 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a100 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 1]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v105 
lastLocationAccess: - 
=== Succesors ===
next: i101 
=== Usages ===
v106 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v105 lastLocationAccess: - #next: i101  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 392
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
f104 i101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a100 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-13067|0xffffffffffffccf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.capacity
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.capacity(Buffer.java:300) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 4]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v106 
lastLocationAccess: - 
=== Succesors ===
next: i102 
=== Usages ===
v10 v25 
=== Predecessor ===
a100 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v106 lastLocationAccess: - #next: i102  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.maxBufferCapacity
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v107 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
v10 i45 v43 
=== Predecessor ===
i101 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v107 lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i102 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i102  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.8565208600609246
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
i102 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a103 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a103  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a103 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 18]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v108 
lastLocationAccess: - 
=== Succesors ===
next: f104 
=== Usages ===
v109 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v108 lastLocationAccess: - #next: f104  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a103 
=== Succesors ===
=== Usages ===
f104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f104 <|@
d <@d|@=== Debug Properties ===
accessStamp: f32
barrierType: NONE
deoptReasonAndAction: int[-15627|0xffffffffffffc2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:472) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 21]
stamp: f32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v109 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
i19 
=== Predecessor ===
a103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v109 lastLocationAccess: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(float) [bci: -1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 24]
stamp: i32
=== Inputs ===
value: f104 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@RoundFloatToInteger|@jdk.graal.compiler.nodes.calc.RoundFloatToIntegerNode>@ value: f104  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 27]
stamp: i32
=== Inputs ===
x: i2 
y: i19 
=== Succesors ===
=== Usages ===
i45 v43 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i2 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i20 
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i102 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
stamp: i32
=== Inputs ===
condition: v43 
trueValue: i102 
falseValue: i20 
=== Succesors ===
=== Usages ===
v66 ?86 v25 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v43 trueValue: i102 falseValue: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i45 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
profileData: PROFILED designatedSuccessorProbability: 2.2036465218155943E-4
stamp: void
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
f104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implFlushBuffer()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 397
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - i45 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implFlushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v65 
stateDuring: ?86 
=== Succesors ===
next: a36 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v65 stateDuring: ?86 #next: a36  <|@  <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
referencedType: [null]
returnStamp: a java.nio.ByteBuffer
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ByteBuffer.allocate(int)>
=== Inputs ===
arguments: i45 
=== Succesors ===
=== Usages ===
a36 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i45  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 398
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a36 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a36 <|@
d <@d|@=== Debug Properties ===
bci: 52
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
polymorphic: false
stamp: a java.nio.ByteBuffer
targetMethod: Direct#ByteBuffer.allocate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v66 
stateDuring: ?87 
=== Succesors ===
next: v97 
=== Usages ===
a67 v99 
=== Predecessor ===
v33 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v66 stateDuring: ?87 #next: v97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
precise: true
stamp: void
=== Inputs ===
address: v105 
value: - 
stateBefore: - 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
a36 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v105 value: - stateBefore: - #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid a67 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
op: Compress
stamp: n java.nio.ByteBuffer
=== Inputs ===
value: a36 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: StreamEncoder.bb
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v105 
lastLocationAccess: - 
value: a67 
stateAfter: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v105 lastLocationAccess: - value: a67 stateAfter: - #next: v99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
precise: false
stamp: void
=== Inputs ===
address: v105 
value: a36 
object: a1 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v105 value: a36 object: a1 #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v11 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v26 v28 v40 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v26 v28 v40 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a100  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.StreamEncoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v105 v107 v108 ?86 ?87 v65 v99 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a100 v68 v97 v99 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a100 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 1]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v105 
lastLocationAccess: - 
=== Succesors ===
next: i101 
=== Usages ===
v106 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v105 lastLocationAccess: - #next: i101  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 392
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
f104 i101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
result [v2|DWORD[_] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a100 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i101 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-13067|0xffffffffffffccf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.capacity
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.capacity(Buffer.java:300) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 4]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v106 
lastLocationAccess: - 
=== Succesors ===
next: i102 
=== Usages ===
v10 v25 
=== Predecessor ===
a100 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v106 lastLocationAccess: - #next: i102  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i102 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.maxBufferCapacity
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v107 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
v10 i45 v43 
=== Predecessor ===
i101 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v107 lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i102 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i102  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.8565208600609246
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
i102 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a103 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a103  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a103 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 18]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v108 
lastLocationAccess: - 
=== Succesors ===
next: f104 
=== Usages ===
v109 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v108 lastLocationAccess: - #next: f104  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
result [v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a103 
=== Succesors ===
=== Usages ===
f104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f104 <|@
result v6|SINGLE <|@
d <@d|@=== Debug Properties ===
accessStamp: f32
barrierType: NONE
deoptReasonAndAction: int[-15627|0xffffffffffffc2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:472) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 21]
stamp: f32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v109 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
i19 
=== Predecessor ===
a103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v109 lastLocationAccess: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(float) [bci: -1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 24]
stamp: i32
=== Inputs ===
value: f104 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@RoundFloatToInteger|@jdk.graal.compiler.nodes.calc.RoundFloatToIntegerNode>@ value: f104  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 27]
stamp: i32
=== Inputs ===
x: i2 
y: i19 
=== Succesors ===
=== Usages ===
i45 v43 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i2 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i20 
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i102 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
stamp: i32
=== Inputs ===
condition: v43 
trueValue: i102 
falseValue: i20 
=== Succesors ===
=== Usages ===
v66 ?86 v25 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v43 trueValue: i102 falseValue: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i45 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
profileData: PROFILED designatedSuccessorProbability: 2.2036465218155943E-4
stamp: void
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
f104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implFlushBuffer()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 397
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - i45 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implFlushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v65 
stateDuring: ?86 
=== Succesors ===
next: a36 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v65 stateDuring: ?86 #next: a36  <|@  <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
referencedType: [null]
returnStamp: a java.nio.ByteBuffer
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ByteBuffer.allocate(int)>
=== Inputs ===
arguments: i45 
=== Succesors ===
=== Usages ===
a36 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i45  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 398
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a36 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a36 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 52
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
polymorphic: false
stamp: a java.nio.ByteBuffer
targetMethod: Direct#ByteBuffer.allocate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v66 
stateDuring: ?87 
=== Succesors ===
next: v97 
=== Usages ===
a67 v99 
=== Predecessor ===
v33 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v66 stateDuring: ?87 #next: v97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
precise: true
stamp: void
=== Inputs ===
address: v105 
value: - 
stateBefore: - 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
a36 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v105 value: - stateBefore: - #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid a67 <|@
result v14|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
op: Compress
stamp: n java.nio.ByteBuffer
=== Inputs ===
value: a36 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: StreamEncoder.bb
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v105 
lastLocationAccess: - 
value: a67 
stateAfter: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v105 lastLocationAccess: - value: a67 stateAfter: - #next: v99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
precise: false
stamp: void
=== Inputs ===
address: v105 
value: a36 
object: a1 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v105 value: a36 object: a1 #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v11 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v26 v28 v40 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v26 v28 v40 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   66  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   68  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  254  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  258  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   66  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   68  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  254  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  258  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[248, 249[[252, 254[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[66, 67[[248, 249[[252, 253[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[248, 249[[252, 253[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[248, 249[[252, 253[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[246, 249[[250, 253[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [28, 76[[114, 263[28 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 62 MustHaveRegister 246 ShouldHaveRegister 256 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [30, 68[30 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [34, 74[34 MustHaveRegister 38 ShouldHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [36, 73[36 MustHaveRegister 38 MustHaveRegister 70 ShouldHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v6|S SINGLE "[v6|S]" v6|S -1 [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v6|S [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v9|d DWORD "[v9|d]" v9|d v1|d [68, 72[68 MustHaveRegister 70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v9|d [72, 76[[114, 250[72 MustHaveRegister 74 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q rax|q [254, 263[254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [256, 257[256 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[v13|q]" v13|q -1 [256, 257[256 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[v14|d]" v14|d v11|q [258, 260[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[v16|q]" v16|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[248, 249[[252, 254[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[66, 67[[248, 249[[252, 253[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[248, 249[[252, 253[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[248, 249[[252, 253[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[246, 249[[250, 253[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 76[[114, 245[28 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 62 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [30, 68[30 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 74[34 MustHaveRegister 38 ShouldHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 73[36 MustHaveRegister 38 MustHaveRegister 70 ShouldHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v6|S SINGLE "[xmm0|S]" v6|S -1 [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v6|S [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v9|d DWORD "[rdx|d]" v9|d v1|d [68, 72[68 MustHaveRegister 70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdx|d]" v10|d v9|d [72, 76[72 MustHaveRegister 74 MustHaveRegister  "OneSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [254, 263[254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q -1 [256, 257[256 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r11|q]" v13|q -1 [256, 257[256 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r10|d]" v14|d v11|q [258, 260[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[r11|q]" v16|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r10|q]" v0|q v0|q [245, 247[246 ShouldHaveRegister  "OneSpillStore"
  v18|d DWORD "[vstack:0|d]" v10|d v10|d [114, 247[ "OneSpillStore"
  v19|d DWORD "[vstack:0|d]" v10|d v10|d [247, 250[250 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[vstack:1|q]" v0|q v0|q [247, 255[ "OneSpillStore"
  v21|q QWORD "[rsi|q]" v0|q v0|q [255, 263[256 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   66  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   68  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = STACKMOVE (input: v18|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  254  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  258  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[248, 249[[252, 254[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[66, 67[[248, 249[[252, 253[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[248, 249[[252, 253[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[248, 249[[252, 253[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[246, 249[[250, 253[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 76[[114, 245[28 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 62 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [30, 68[30 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 74[34 MustHaveRegister 38 ShouldHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 73[36 MustHaveRegister 38 MustHaveRegister 70 ShouldHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v6|S SINGLE "[xmm0|S]" v6|S -1 [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v6|S [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v9|d DWORD "[rdx|d]" v9|d v1|d [68, 72[68 MustHaveRegister 70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdx|d]" v10|d v9|d [72, 76[72 MustHaveRegister 74 MustHaveRegister  "OneSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [254, 263[254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q -1 [256, 257[256 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r11|q]" v13|q -1 [256, 257[256 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r10|d]" v14|d v11|q [258, 260[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[r11|q]" v16|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r10|q]" v0|q v0|q [245, 247[246 ShouldHaveRegister  "OneSpillStore"
  v18|d DWORD "[vstack:0|d]" v10|d v10|d [114, 247[ "OneSpillStore"
  v19|d DWORD "[vstack:0|d]" v10|d v10|d [247, 250[250 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[vstack:1|q]" v0|q v0|q [247, 255[ "OneSpillStore"
  v21|q QWORD "[rsi|q]" v0|q v0|q [255, 263[256 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   66  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   68  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = STACKMOVE (input: v18|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  254  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  258  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[248, 249[[252, 254[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[66, 67[[248, 249[[252, 253[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[248, 249[[252, 253[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[248, 249[[252, 253[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[246, 249[[250, 253[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[248, 249[[252, 253[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 76[[114, 245[28 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 62 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [30, 68[30 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 74[34 MustHaveRegister 38 ShouldHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 73[36 MustHaveRegister 38 MustHaveRegister 70 ShouldHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v6|S SINGLE "[xmm0|S]" v6|S -1 [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v6|S [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v9|d DWORD "[rdx|d]" v9|d v1|d [68, 72[68 MustHaveRegister 70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdx|d]" v10|d v9|d [72, 76[72 MustHaveRegister 74 MustHaveRegister  "OneSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [254, 263[254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q -1 [256, 257[256 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r11|q]" v13|q -1 [256, 257[256 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r10|d]" v14|d v11|q [258, 260[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[r11|q]" v16|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r10|q]" v0|q v0|q [245, 247[246 ShouldHaveRegister  "OneSpillStore"
  v18|d DWORD "[vstack:0|d]" v10|d v10|d [114, 247[ "OneSpillStore"
  v19|d DWORD "[vstack:0|d]" v10|d v10|d [247, 250[250 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[vstack:1|q]" v0|q v0|q [247, 255[ "OneSpillStore"
  v21|q QWORD "[rsi|q]" v0|q v0|q [255, 263[256 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   66  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   68  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = STACKMOVE (input: v18|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  254  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  258  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v3|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - 
>@ <|@ instruction v6|SINGLE = MOVSS input: [v5|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   66  <|@ instruction v7|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v6|SINGLE {tmp: v8|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   68  <|@ instruction v9|DWORD = IMUL (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v3|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = STACKMOVE (input: v18|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v10|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  254  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  258  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v15|QWORD, temp2: v16|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   66  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:1|QWORD[.] - - - vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:1|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   66  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:1|QWORD[.] - - - vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:1|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  258  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:1|QWORD[.] - - - vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:1|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [74, 214[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [210, 218[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [74, 214[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [210, 218[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:40|QWORD[.] - - - stack:28|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  222  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #41         // bb:java.nio.ByteBuffer
     4: invokevirtual #71         // java.nio.Buffer.capacity:()int
     7: istore_2      
     8: iload_2       
     9: aload_0       
    10: getfield      #42         // maxBufferCapacity:int
    13: if_icmpge     58
    16: iload_1       
    17: aload_0       
    18: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    21: invokevirtual #72         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    24: invokestatic  #73         // java.lang.Math.round:(float)int
    27: imul          
    28: istore_3      
    29: iload_3       
    30: aload_0       
    31: getfield      #42         // maxBufferCapacity:int
    34: invokestatic  #74         // java.lang.Math.min:(int, int)int
    37: istore        4
    39: iload         4
    41: iload_2       
    42: if_icmple     58
    45: aload_0       
    46: invokevirtual #13         // implFlushBuffer:()void
    49: aload_0       
    50: iload         4
    52: invokestatic  #40         // java.nio.ByteBuffer.allocate:(int)java.nio.ByteBuffer
    55: putfield      #41         // bb:java.nio.ByteBuffer
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f851e020000909090909090909090909048896c24208b4e24448b14cd20000000448b5e14453bda0f8ed6000000909090909090909090908b4e20c5fa1004cd1000000041b90000807fc4c1797ec04523c141c1f817b995000000412bc8f7c1e0ffffff752cc4c1797ec04181e0ffff7f004181c800008000c4c1797ec14585c97d0341f7d841d3f84183c00141d1f8eb3dc57a2cc04181f8000000807530c4c1797ec14181e1ffffff7f4533c04181f90000807f7f18c4c1797ec14585c941b80000008041b9ffffff7f450f49c1410fafd0413bd3410f4fd3413bd20f8f2600000090909090909090909090488b6c24204883c428493ba7500400000f8731010000c3909090ebdd8954241490909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bd64c8954240890e8000000000f1f8400000000008b742414666690e8000000000f1f840000000000488b74240841807f40000f842e000000448b5e2449c1e3034d85db0f841d0000004d8b57284983fa000f84a10000004983ea084d8957284d0357384d891a4c8bd049c1ea03448956244c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84470000004983eb084d895f484d035f584d8913e9c2feffff48896c2420e800000000e9d3fdfffff4488d0dbbfeffff49898f68040000e985fdfffff44c891c24e800000000e960fffffff44c891424e800000000ebbdf441c78784040000f5ccffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5c2ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD  <||@
  Comment 74 28 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 77 30 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 77 [rsi:0]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 32 r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 89 34 CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD  <||@
  Comment 98 block B1 null  <||@
  Comment 98 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 38 NOP  <||@
  Comment 99 40 NOP  <||@
  Comment 100 42 NOP  <||@
  Comment 101 44 NOP  <||@
  Comment 102 46 NOP  <||@
  Comment 103 48 NOP  <||@
  Comment 104 50 NOP  <||@
  Comment 105 52 NOP  <||@
  Comment 106 54 NOP  <||@
  Comment 107 56 NOP  <||@
  Comment 108 58 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 111 60 xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0]  <||@
  Comment 111 [rsi:0]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 120 62 r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL}  <||@
  Comment 259 64 rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 263 66 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 266 68 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 270 70 CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 279 block B3 null  <||@
  Comment 279 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 279 232 NOP  <||@
  Comment 280 234 NOP  <||@
  Comment 281 236 NOP  <||@
  Comment 282 238 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 282 block B5 null  <||@
  Comment 282 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 282 252 NOP  <||@
  Comment 283 254 NOP  <||@
  Comment 284 256 NOP  <||@
  Comment 285 258 NOP  <||@
  Comment 286 260 NOP  <||@
  Comment 287 262 NOP  <||@
  Comment 288 264 NOP  <||@
  Comment 289 266 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 298 POLL_RETURN_FAR  <||@
  Comment 312 block B4 null  <||@
  Comment 312 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 312 242 NOP  <||@
  Comment 313 244 NOP  <||@
  Comment 314 246 NOP  <||@
  Comment 315 248 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 317 block B2 null  <||@
  Comment 317 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 317 74 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 321 76 NOP  <||@
  Comment 322 78 NOP  <||@
  Comment 323 80 NOP  <||@
  Comment 324 82 NOP  <||@
  Comment 325 84 NOP  <||@
  Comment 326 86 NOP  <||@
  Comment 327 88 NOP  <||@
  Comment 328 90 NOP  <||@
  Comment 329 92 NOP  <||@
  Comment 330 94 NOP  <||@
  Comment 331 96 NOP  <||@
  Comment 332 98 NOP  <||@
  Comment 333 100 NOP  <||@
  Comment 334 102 NOP  <||@
  Comment 335 104 NOP  <||@
  Comment 336 106 NOP  <||@
  Comment 337 108 NOP  <||@
  Comment 338 110 NOP  <||@
  Comment 339 112 NOP  <||@
  Comment 340 114 NOP  <||@
  Comment 341 116 NOP  <||@
  Comment 342 118 NOP  <||@
  Comment 343 120 NOP  <||@
  Comment 344 122 NOP  <||@
  Comment 345 124 NOP  <||@
  Comment 346 126 NOP  <||@
  Comment 347 128 NOP  <||@
  Comment 348 130 NOP  <||@
  Comment 349 132 NOP  <||@
  Comment 350 134 NOP  <||@
  Comment 351 136 NOP  <||@
  Comment 352 138 NOP  <||@
  Comment 353 140 NOP  <||@
  Comment 354 142 NOP  <||@
  Comment 355 144 NOP  <||@
  Comment 356 146 NOP  <||@
  Comment 357 148 NOP  <||@
  Comment 358 150 NOP  <||@
  Comment 359 152 NOP  <||@
  Comment 360 154 NOP  <||@
  Comment 361 156 NOP  <||@
  Comment 362 158 NOP  <||@
  Comment 363 160 NOP  <||@
  Comment 364 162 NOP  <||@
  Comment 365 164 NOP  <||@
  Comment 366 166 NOP  <||@
  Comment 367 168 NOP  <||@
  Comment 368 170 NOP  <||@
  Comment 369 172 NOP  <||@
  Comment 370 174 NOP  <||@
  Comment 371 176 NOP  <||@
  Comment 372 178 NOP  <||@
  Comment 373 180 NOP  <||@
  Comment 374 182 NOP  <||@
  Comment 375 184 NOP  <||@
  Comment 376 186 NOP  <||@
  Comment 377 188 NOP  <||@
  Comment 378 190 NOP  <||@
  Comment 379 192 NOP  <||@
  Comment 380 194 NOP  <||@
  Comment 381 196 NOP  <||@
  Comment 382 198 NOP  <||@
  Comment 383 200 NOP  <||@
  Comment 384 202 NOP  <||@
  Comment 385 204 NOP  <||@
  Comment 386 206 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 389 210 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 394 212 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46]  <||@
  Comment 395 {HotSpotMethod<StreamEncoder.implFlushBuffer()>}  <||@
  Comment 395 INVOKESPECIAL  <||@
  Comment 400 [stack:8]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4              
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |stack:28|DWORD   <||@
  Comment 408 214 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 412 216 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52]  <||@
  Comment 415 {HotSpotMethod<ByteBuffer.allocate(int)>}  <||@
  Comment 415 INVOKESTATIC  <||@
  Comment 420 [stack:8]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |   |   |    <||@
  Comment 428 218 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 433 220 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730  <||@
  Comment 490 222 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3  <||@
  Comment 497 224 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 501 226 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730  <||@
  Comment 595 228 JUMP ~outgoingValues: [] destination: B2 -> B5  <||@
  Comment 605 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 630 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 640 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 655 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 685 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 690 [rsi:0]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-   <||@
  Comment 720 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 725 [rsi:0]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-   <||@
  Comment 733 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 733 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 739 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4940[sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(int)]"
  method "HotSpotCompilation-4940[sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(int)]"
  date 1724269747960
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae86da0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3e28ffe66669089842400c0feff4883ec289041817f20000000000f851e020000909090909090909090909048896c24208b4e24448b14cd20000000448b5e14453bda0f8ed6000000909090909090909090908b4e20c5fa1004cd1000000041b90000807fc4c1797ec04523c141c1f817b995000000412bc8f7c1e0ffffff752cc4c1797ec04181e0ffff7f004181c800008000c4c1797ec14585c97d0341f7d841d3f84183c00141d1f8eb3dc57a2cc04181f8000000807530c4c1797ec14181e1ffffff7f4533c04181f90000807f7f18c4c1797ec14585c941b80000008041b9ffffff7f450f49c1410fafd0413bd3410f4fd3413bd20f8f2600000090909090909090909090488b6c24204883c428493ba7500400000f8731010000c3909090ebdd8954241490909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bd64c8954240890e850e48ffe0f1f8400200300028b742414666690e83cea8ffe0f1f840034030003488b74240841807f40000f842e000000448b5e2449c1e3034d85db0f841d0000004d8b57284983fa000f84a10000004983ea084d8957284d0357384d891a4c8bd049c1ea03448956244c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84470000004983eb084d895f484d035f584d8913e9c2feffff48896c2420e81e428efee9d3fdfffff4488d0dbbfeffff49898f68040000e9e54f90fef44c891c24e8db11a4fee960fffffff44c891424e84c33a4feebbdf441c78784040000f5ccffff49c7879004000000000000e8284190fe0f1f84000000000041c78784040000f5c2ffff49c7879004000000000000e8054190fe0f1f840000000000e87ee2a3fef4e8983e90fef4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5c5d90a slotKind: QWORD  <||@
  Comment 74 28 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 77 30 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 77 [rsi:0]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 32 r11|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 89 34 CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD  <||@
  Comment 98 block B1 null  <||@
  Comment 98 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 38 NOP  <||@
  Comment 99 40 NOP  <||@
  Comment 100 42 NOP  <||@
  Comment 101 44 NOP  <||@
  Comment 102 46 NOP  <||@
  Comment 103 48 NOP  <||@
  Comment 104 50 NOP  <||@
  Comment 105 52 NOP  <||@
  Comment 106 54 NOP  <||@
  Comment 107 56 NOP  <||@
  Comment 108 58 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 111 60 xmm0|SINGLE = MOVSS input: [rcx|DWORD[_] * 8 + 16] size: SS state [bci:0]  <||@
  Comment 111 [rsi:0]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 120 62 r8|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: r9|DWORD, rcxTmp: rcx|ILLEGAL}  <||@
  Comment 259 64 rdx|DWORD = IMUL (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 263 66 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 266 68 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 270 70 CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 279 block B3 null  <||@
  Comment 279 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 279 232 NOP  <||@
  Comment 280 234 NOP  <||@
  Comment 281 236 NOP  <||@
  Comment 282 238 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 282 block B5 null  <||@
  Comment 282 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 282 252 NOP  <||@
  Comment 283 254 NOP  <||@
  Comment 284 256 NOP  <||@
  Comment 285 258 NOP  <||@
  Comment 286 260 NOP  <||@
  Comment 287 262 NOP  <||@
  Comment 288 264 NOP  <||@
  Comment 289 266 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 298 POLL_RETURN_FAR  <||@
  Comment 312 block B4 null  <||@
  Comment 312 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 312 242 NOP  <||@
  Comment 313 244 NOP  <||@
  Comment 314 246 NOP  <||@
  Comment 315 248 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 317 block B2 null  <||@
  Comment 317 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 317 74 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 321 76 NOP  <||@
  Comment 322 78 NOP  <||@
  Comment 323 80 NOP  <||@
  Comment 324 82 NOP  <||@
  Comment 325 84 NOP  <||@
  Comment 326 86 NOP  <||@
  Comment 327 88 NOP  <||@
  Comment 328 90 NOP  <||@
  Comment 329 92 NOP  <||@
  Comment 330 94 NOP  <||@
  Comment 331 96 NOP  <||@
  Comment 332 98 NOP  <||@
  Comment 333 100 NOP  <||@
  Comment 334 102 NOP  <||@
  Comment 335 104 NOP  <||@
  Comment 336 106 NOP  <||@
  Comment 337 108 NOP  <||@
  Comment 338 110 NOP  <||@
  Comment 339 112 NOP  <||@
  Comment 340 114 NOP  <||@
  Comment 341 116 NOP  <||@
  Comment 342 118 NOP  <||@
  Comment 343 120 NOP  <||@
  Comment 344 122 NOP  <||@
  Comment 345 124 NOP  <||@
  Comment 346 126 NOP  <||@
  Comment 347 128 NOP  <||@
  Comment 348 130 NOP  <||@
  Comment 349 132 NOP  <||@
  Comment 350 134 NOP  <||@
  Comment 351 136 NOP  <||@
  Comment 352 138 NOP  <||@
  Comment 353 140 NOP  <||@
  Comment 354 142 NOP  <||@
  Comment 355 144 NOP  <||@
  Comment 356 146 NOP  <||@
  Comment 357 148 NOP  <||@
  Comment 358 150 NOP  <||@
  Comment 359 152 NOP  <||@
  Comment 360 154 NOP  <||@
  Comment 361 156 NOP  <||@
  Comment 362 158 NOP  <||@
  Comment 363 160 NOP  <||@
  Comment 364 162 NOP  <||@
  Comment 365 164 NOP  <||@
  Comment 366 166 NOP  <||@
  Comment 367 168 NOP  <||@
  Comment 368 170 NOP  <||@
  Comment 369 172 NOP  <||@
  Comment 370 174 NOP  <||@
  Comment 371 176 NOP  <||@
  Comment 372 178 NOP  <||@
  Comment 373 180 NOP  <||@
  Comment 374 182 NOP  <||@
  Comment 375 184 NOP  <||@
  Comment 376 186 NOP  <||@
  Comment 377 188 NOP  <||@
  Comment 378 190 NOP  <||@
  Comment 379 192 NOP  <||@
  Comment 380 194 NOP  <||@
  Comment 381 196 NOP  <||@
  Comment 382 198 NOP  <||@
  Comment 383 200 NOP  <||@
  Comment 384 202 NOP  <||@
  Comment 385 204 NOP  <||@
  Comment 386 206 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 389 210 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 394 212 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46]  <||@
  Comment 395 {HotSpotMethod<StreamEncoder.implFlushBuffer()>}  <||@
  Comment 395 INVOKESPECIAL  <||@
  Comment 400 [stack:8]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4              
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |stack:28|DWORD   <||@
  Comment 408 214 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 412 216 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52]  <||@
  Comment 415 {HotSpotMethod<ByteBuffer.allocate(int)>}  <||@
  Comment 415 INVOKESTATIC  <||@
  Comment 420 [stack:8]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |   |   |    <||@
  Comment 428 218 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 433 220 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730  <||@
  Comment 490 222 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@524ea94a encoding: base: 0 shift: 3  <||@
  Comment 497 224 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 501 226 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7a966730  <||@
  Comment 595 228 JUMP ~outgoingValues: [] destination: B2 -> B5  <||@
  Comment 605 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 630 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 640 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 655 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 685 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 690 [rsi:0]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-   <||@
  Comment 720 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 725 [rsi:0]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-   <||@
  Comment 733 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 733 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 739 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
