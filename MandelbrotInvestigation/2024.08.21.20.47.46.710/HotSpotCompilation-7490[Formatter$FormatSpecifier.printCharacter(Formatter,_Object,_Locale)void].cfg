begin_compilation
  name " HotSpotCompilation-7490[java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)]"
  method "HotSpotCompilation-7490[java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)]"
  date 1724269757730
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Formatter$FormatSpecifier
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v104 ?21 v424 v425 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.Formatter
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v426 ?21 v422 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v423 v430 ?21 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.util.Locale
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?21 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_2
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3116
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
v447 v421 a284 v422 v406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-25355|0xffffffffffff9cf5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a2 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a2 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-29715|0xffffffffffff8bed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 17]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v430 
lastLocationAccess: - 
=== Succesors ===
next: v136 
=== Usages ===
v417 
=== Predecessor ===
v422 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v430 lastLocationAccess: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 17]
rawvalue: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v406 
y: v416 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v406 y: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v134 #falseSuccessor: v413  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i407 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i407  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
accessStamp: i16
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Character.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Character.toString(Character.java:9070) [bci: 1]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i16
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v423 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
i91 i106 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v423 lastLocationAccess: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
inputBits: 16
nodeSourcePosition: at java.lang.Character.toString(Character.java:9070) [bci: 1]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
resultBits: 32
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
value: i407 
=== Succesors ===
=== Usages ===
v57 v105 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i407  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.String.valueOf(String.java:4555) [bci: 7]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256]
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.String.valueOf(String.java:4555) [bci: 7]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
x: i91 
y: i56 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i91 y: i56  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4555) [bci: 3]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 v234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
sourceFile: Formatter.java
sourceLine: 3122
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
?22 ?58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4  <|@  <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.lang.String.hash int:12>, HotSpotResolvedJavaFieldImpl<java.lang.String.coder byte:16>, HotSpotResolvedJavaFieldImpl<java.lang.String.hashIsZero boolean:17>, HotSpotResolvedJavaFieldImpl<java.lang.String.flags byte:18>, HotSpotResolvedJavaFieldImpl<java.lang.String.value byte[]:20>]
hasIdentity: true
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
objectId: 1
stamp: a!# java.lang.String
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?162 ?162 ?82 ?22 ?85 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 49]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v373 v235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 v368 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4555) [bci: 0]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 v372 a284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j92 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 1]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j395 j203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4555) [bci: 10]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.9957621460956594
stamp: void
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i407 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4556) [bci: 13]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j248 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j248 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j365 
=== Usages ===
v438 v439 
=== Predecessor ===
v391 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j365  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: - 
=== Succesors ===
=== Usages ===
j365 v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v438 
lastLocationAccess: - 
=== Succesors ===
next: j366 
=== Usages ===
j395 v440 v441 v443 a283 v442 v446 v445 v444 
=== Predecessor ===
j248 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v438 lastLocationAccess: - #next: j366  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: - 
=== Succesors ===
=== Usages ===
j366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j366 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v439 
lastLocationAccess: - 
=== Succesors ===
next: v258 
=== Usages ===
v255 
=== Predecessor ===
j365 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v439 lastLocationAccess: - #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
=== Inputs ===
x: j365 
y: j92 
=== Succesors ===
=== Usages ===
v255 v367 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j365 y: j92  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j366 
y: j395 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j366 y: j395  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
j366 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v257 #falseSuccessor: v256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a284 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a284  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a284 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v247 i27 
=== Succesors ===
next: v421 
=== Usages ===
v421 a363 
=== Predecessor ===
v257 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v247 i27 #next: v421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-99185|0xfffffffffffe7c8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a284 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
a284 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a284 #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v438 
lastLocationAccess: - 
value: j395 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v438 lastLocationAccess: - value: j395 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
address: v444 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v444 #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
displacement: 344
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
address: v445 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v445 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
displacement: 408
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
address: v446 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v446 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
lastLocationAccess: - 
value: j208 
stateAfter: - 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v440 lastLocationAccess: - value: j208 stateAfter: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
lastLocationAccess: - 
value: v394 
stateAfter: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v443 lastLocationAccess: - value: v394 stateAfter: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v441 
lastLocationAccess: - 
value: i27 
stateAfter: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v441 lastLocationAccess: - value: i27 stateAfter: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:209) [bci: 47]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v442 
lastLocationAccess: - 
value: j167 
stateAfter: - 
=== Succesors ===
next: a283 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v442 lastLocationAccess: - value: j167 stateAfter: - #next: a283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j365 
=== Succesors ===
next: v286 
=== Usages ===
a363 
=== Predecessor ===
v373 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j365 #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
a283 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v287 
values: a283 a284 
=== Succesors ===
=== Usages ===
v429 a159 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v287 values: a283 a284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v286 v288 
=== Succesors ===
next: v158 
=== Usages ===
a363 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v286 v288 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a363 
index: - 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a363 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
inputBits: 16
nodeSourcePosition: at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 6]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
resultBits: 8
stamp: i8
=== Inputs ===
value: i407 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
lastLocationAccess: - 
value: i106 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v429 lastLocationAccess: - value: i106 stateAfter: - #next: v160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a159 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale) [bci: -6] Placeholder
stamp: a!# byte[]
=== Inputs ===
object: a363 
=== Succesors ===
next: v60 
=== Usages ===
a84 
=== Predecessor ===
v160 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a363 #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
a159 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a47 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a47  <|@  <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 31]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
referencedType: [null]
returnStamp: a# byte[]
signature: [HotSpotResolvedPrimitiveType<char>]
stamp: void
targetMethod: HotSpotMethod<StringUTF16.toBytes(char)>
=== Inputs ===
arguments: i91 
=== Succesors ===
=== Usages ===
a47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i91  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Character.toString()>
localsSize: 1
locksSize: 0
sourceFile: Character.java
sourceLine: 9070
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?21 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?21  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
values: - - - - - 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a78 values: - - - - -  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.valueOf(char)>
localsSize: 1
locksSize: 0
sourceFile: String.java
sourceLine: 4558
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
values: a78 a78 
virtualObjectMappings: ?82 
=== Succesors ===
=== Usages ===
a47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58 values: a78 a78 virtualObjectMappings: ?82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a47 <|@
d <@d|@=== Debug Properties ===
bci: 31
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 31]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#StringUTF16.toBytes
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v105 
stateDuring: ?162 
=== Succesors ===
next: v61 
=== Usages ===
a84 
=== Predecessor ===
v30 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v105 stateDuring: ?162 #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
a47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v59 
values: i28 i27 
=== Succesors ===
=== Usages ===
?85 i147 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v59 values: i28 i27  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
d <@d|@=== Debug Properties ===
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v59 
values: a159 a47 
=== Succesors ===
=== Usages ===
?85 a151 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v59 values: a159 a47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v60 v61 
=== Succesors ===
next: i408 
=== Usages ===
i83 a84 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v60 v61 #next: i408  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.precision
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 1]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
lastLocationAccess: - 
=== Succesors ===
next: v140 
=== Usages ===
v64 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v424 lastLocationAccess: - #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i408 
y: i63 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i408 y: i63  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
values: - i83 - - a84 
=== Succesors ===
=== Usages ===
?22 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a78 values: - i83 - - a84  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: areturn
code: ResolvedJavaMethodBytecode<Character.toString()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
sourceFile: Character.java
sourceLine: 9070
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?21 
values: a78 
virtualObjectMappings: ?85 
=== Succesors ===
=== Usages ===
v419 v182 a212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?21 values: a78 virtualObjectMappings: ?85  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
i408 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v138 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 29]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
next: i409 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i409  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i409 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.flags
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 30]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
v68 
=== Predecessor ===
v138 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v425 lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 33]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 34]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
x: i409 
y: i67 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i409 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 37]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v143 
=== Usages ===
=== Predecessor ===
i409 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v142 #falseSuccessor: v143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 47]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j200 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j227 
=== Usages ===
v431 v432 
=== Predecessor ===
v245 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j227  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j200 
index: - 
=== Succesors ===
=== Usages ===
j227 v229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j200 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j227 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
lastLocationAccess: - 
=== Succesors ===
next: j228 
=== Usages ===
j203 v433 v434 a211 v435 v436 v437 
=== Predecessor ===
j200 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v431 lastLocationAccess: - #next: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j200 
index: - 
=== Succesors ===
=== Usages ===
j228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j200 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v432 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
v204 
=== Predecessor ===
j227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v432 lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
=== Inputs ===
x: j227 
y: j92 
=== Succesors ===
=== Usages ===
v204 v229 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j227 y: j92  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j228 
y: j203 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j228 y: j203  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
j228 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v206 #falseSuccessor: v205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a212 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a212  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a212 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v199 
=== Succesors ===
next: v419 
=== Usages ===
v419 a225 
=== Predecessor ===
v206 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v199 #next: v419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-61809|0xffffffffffff0e8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a212 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
a212 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a212 #next: v216  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
lastLocationAccess: - 
value: j203 
stateAfter: - 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 lastLocationAccess: - value: j203 stateAfter: - #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
address: v435 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v435 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
lastLocationAccess: - 
value: j208 
stateAfter: - 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 lastLocationAccess: - value: j208 stateAfter: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v437 
lastLocationAccess: - 
value: v393 
stateAfter: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v437 lastLocationAccess: - value: v393 stateAfter: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v434 
lastLocationAccess: - 
value: i28 
stateAfter: - 
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v434 lastLocationAccess: - value: i28 stateAfter: - #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v436 
lastLocationAccess: - 
value: j167 
stateAfter: - 
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v436 lastLocationAccess: - value: j167 stateAfter: - #next: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j227 
=== Succesors ===
next: v214 
=== Usages ===
a225 
=== Predecessor ===
v235 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j227 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
a211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v215 
values: a211 a212 
=== Succesors ===
=== Usages ===
v428 a153 v427 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v215 values: a211 a212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v214 v216 
=== Succesors ===
next: v152 
=== Usages ===
a225 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v214 v216 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a225 
index: - 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a225 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a84 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
lastLocationAccess: - 
value: a151 
stateAfter: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v428 lastLocationAccess: - value: a151 stateAfter: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a225 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a225 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i83 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v427 
lastLocationAccess: - 
value: i147 
stateAfter: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v427 lastLocationAccess: - value: i147 stateAfter: - #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale) [bci: -6] Placeholder
stamp: a!# java.lang.String
=== Inputs ===
object: a225 
=== Succesors ===
next: a410 
=== Usages ===
v104 
=== Predecessor ===
v154 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a225 #next: a410  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a410 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter.a
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 49]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v426 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
a103 
=== Predecessor ===
a153 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v426 lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a103 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 49]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a410 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a410  <|@  <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>, UnresolvedJavaType<Ljava/lang/Appendable;>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
=== Inputs ===
arguments: a1 a103 a153 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a103 a153  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 211
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3144
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Formatter, String, Locale)>
localsSize: 4
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3185
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?75 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.appendJustified
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v104 
stateDuring: ?163 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
a410 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v104 stateDuring: ?163 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3145) [bci: 214]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 37]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid j185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: -36115
stableDimension: 0
stamp: i32 [-36115]
stampKind: i32
value: int[-36115|0xffffffffffff72ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: -35091
stableDimension: 0
stamp: i32 [-35091]
stampKind: i32
value: int[-35091|0xffffffffffff76ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v139 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: i32 [-36115 - -35091] bits:1...101110x1011101101
valueDescription: i32
=== Inputs ===
merge: v176 
values: i178 i184 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v176 values: i178 i184  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: i64 [1300 - 1940] bits:0...01x1x0010100
valueDescription: i64
=== Inputs ===
merge: v176 
values: j179 j185 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v176 values: j179 j185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v177 v183 
=== Succesors ===
next: v182 
=== Usages ===
i180 j181 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v177 v183 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
stateBefore: ?22 
actionAndReason: i180 
speculation: j181 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?22 actionAndReason: i180 speculation: j181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 133
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 49]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xed9c0aec]: UnreachedCode@6[HotSpotMethod<Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)>, 35]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Formatter$FormatSpecifier
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v104 ?21 v424 v425 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.Formatter
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v426 ?21 v422 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v423 v430 ?21 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.util.Locale
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?21 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_2
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3116
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
v447 v421 a284 v422 v406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-25355|0xffffffffffff9cf5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a2 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a2 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-29715|0xffffffffffff8bed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 17]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v430 
lastLocationAccess: - 
=== Succesors ===
next: v136 
=== Usages ===
v417 
=== Predecessor ===
v422 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v430 lastLocationAccess: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
result meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 17]
rawvalue: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v406 
y: v416 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v406 y: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v134 #falseSuccessor: v413  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i407 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i407  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i407 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i16
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Character.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Character.toString(Character.java:9070) [bci: 1]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i16
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v423 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
i91 i106 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v423 lastLocationAccess: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 16
nodeSourcePosition: at java.lang.Character.toString(Character.java:9070) [bci: 1]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
resultBits: 32
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
value: i407 
=== Succesors ===
=== Usages ===
v57 v105 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i407  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result int[-256|0xffffffffffffff00] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.String.valueOf(String.java:4555) [bci: 7]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256]
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.String.valueOf(String.java:4555) [bci: 7]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
x: i91 
y: i56 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i91 y: i56  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4555) [bci: 3]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 v234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
sourceFile: Formatter.java
sourceLine: 3122
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
?22 ?58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4  <|@  <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.lang.String.hash int:12>, HotSpotResolvedJavaFieldImpl<java.lang.String.coder byte:16>, HotSpotResolvedJavaFieldImpl<java.lang.String.hashIsZero boolean:17>, HotSpotResolvedJavaFieldImpl<java.lang.String.flags byte:18>, HotSpotResolvedJavaFieldImpl<java.lang.String.value byte[]:20>]
hasIdentity: true
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
objectId: 1
stamp: a!# java.lang.String
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?162 ?162 ?82 ?22 ?85 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 49]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v373 v235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 v368 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4555) [bci: 0]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 v372 a284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j92 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 1]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j395 j203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4555) [bci: 10]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.9957621460956594
stamp: void
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i407 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4556) [bci: 13]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j248 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j248 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j365 
=== Usages ===
v438 v439 
=== Predecessor ===
v391 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j365  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: - 
=== Succesors ===
=== Usages ===
j365 v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j365 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v438 
lastLocationAccess: - 
=== Succesors ===
next: j366 
=== Usages ===
j395 v440 v441 v443 a283 v442 v446 v445 v444 
=== Predecessor ===
j248 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v438 lastLocationAccess: - #next: j366  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: - 
=== Succesors ===
=== Usages ===
j366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j366 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v439 
lastLocationAccess: - 
=== Succesors ===
next: v258 
=== Usages ===
v255 
=== Predecessor ===
j365 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v439 lastLocationAccess: - #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
=== Inputs ===
x: j365 
y: j92 
=== Succesors ===
=== Usages ===
v255 v367 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j365 y: j92  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j366 
y: j395 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j366 y: j395  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
j366 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v257 #falseSuccessor: v256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a284 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a284  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a284 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v247 i27 
=== Succesors ===
next: v421 
=== Usages ===
v421 a363 
=== Predecessor ===
v257 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v247 i27 #next: v421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-99185|0xfffffffffffe7c8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a284 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
a284 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a284 #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v438 
lastLocationAccess: - 
value: j395 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v438 lastLocationAccess: - value: j395 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
result [v6|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
address: v444 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v444 #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
result [v6|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
address: v445 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v445 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
result [v6|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
address: v446 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v446 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
lastLocationAccess: - 
value: j208 
stateAfter: - 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v440 lastLocationAccess: - value: j208 stateAfter: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
lastLocationAccess: - 
value: v394 
stateAfter: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v443 lastLocationAccess: - value: v394 stateAfter: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v441 
lastLocationAccess: - 
value: i27 
stateAfter: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v441 lastLocationAccess: - value: i27 stateAfter: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
result [v6|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:209) [bci: 47]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v442 
lastLocationAccess: - 
value: j167 
stateAfter: - 
=== Succesors ===
next: a283 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v442 lastLocationAccess: - value: j167 stateAfter: - #next: a283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a283 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j365 
=== Succesors ===
next: v286 
=== Usages ===
a363 
=== Predecessor ===
v373 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j365 #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
a283 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a363 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v287 
values: a283 a284 
=== Succesors ===
=== Usages ===
v429 a159 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v287 values: a283 a284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v286 v288 
=== Succesors ===
next: v158 
=== Usages ===
a363 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v286 v288 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
result [v12|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a363 
index: - 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a363 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
inputBits: 16
nodeSourcePosition: at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 6]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
resultBits: 8
stamp: i8
=== Inputs ===
value: i407 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.toBytes(StringLatin1.java:745) [bci: 1]
at java.lang.String.valueOf(String.java:4556) [bci: 18]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
lastLocationAccess: - 
value: i106 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v429 lastLocationAccess: - value: i106 stateAfter: - #next: v160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a159 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a159 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale) [bci: -6] Placeholder
stamp: a!# byte[]
=== Inputs ===
object: a363 
=== Succesors ===
next: v60 
=== Usages ===
a84 
=== Predecessor ===
v160 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a363 #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
a159 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a47 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a47  <|@  <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 31]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
referencedType: [null]
returnStamp: a# byte[]
signature: [HotSpotResolvedPrimitiveType<char>]
stamp: void
targetMethod: HotSpotMethod<StringUTF16.toBytes(char)>
=== Inputs ===
arguments: i91 
=== Succesors ===
=== Usages ===
a47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i91  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Character.toString()>
localsSize: 1
locksSize: 0
sourceFile: Character.java
sourceLine: 9070
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?21 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?21  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
values: - - - - - 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a78 values: - - - - -  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.valueOf(char)>
localsSize: 1
locksSize: 0
sourceFile: String.java
sourceLine: 4558
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
values: a78 a78 
virtualObjectMappings: ?82 
=== Succesors ===
=== Usages ===
a47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58 values: a78 a78 virtualObjectMappings: ?82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a47 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 31
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 31]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#StringUTF16.toBytes
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v105 
stateDuring: ?162 
=== Succesors ===
next: v61 
=== Usages ===
a84 
=== Predecessor ===
v30 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v105 stateDuring: ?162 #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
a47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i83 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v59 
values: i28 i27 
=== Succesors ===
=== Usages ===
?85 i147 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v59 values: i28 i27  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v59 
values: a159 a47 
=== Succesors ===
=== Usages ===
?85 a151 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v59 values: a159 a47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v60 v61 
=== Succesors ===
next: i408 
=== Usages ===
i83 a84 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v60 v61 #next: i408  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.precision
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 1]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
lastLocationAccess: - 
=== Succesors ===
next: v140 
=== Usages ===
v64 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v424 lastLocationAccess: - #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i408 
y: i63 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i408 y: i63  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
values: - i83 - - a84 
=== Succesors ===
=== Usages ===
?22 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a78 values: - i83 - - a84  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: areturn
code: ResolvedJavaMethodBytecode<Character.toString()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
sourceFile: Character.java
sourceLine: 9070
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?21 
values: a78 
virtualObjectMappings: ?85 
=== Succesors ===
=== Usages ===
v419 v182 a212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?21 values: a78 virtualObjectMappings: ?85  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
i408 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v138 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 29]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
next: i409 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i409  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i409 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.flags
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 30]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
v68 
=== Predecessor ===
v138 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v425 lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 33]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 34]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
x: i409 
y: i67 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i409 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 37]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v143 
=== Usages ===
=== Predecessor ===
i409 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v142 #falseSuccessor: v143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 47]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j200 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j200 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j227 
=== Usages ===
v431 v432 
=== Predecessor ===
v245 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j227  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j200 
index: - 
=== Succesors ===
=== Usages ===
j227 v229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j200 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j227 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
lastLocationAccess: - 
=== Succesors ===
next: j228 
=== Usages ===
j203 v433 v434 a211 v435 v436 v437 
=== Predecessor ===
j200 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v431 lastLocationAccess: - #next: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j200 
index: - 
=== Succesors ===
=== Usages ===
j228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j200 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v432 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
v204 
=== Predecessor ===
j227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v432 lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: i64
=== Inputs ===
x: j227 
y: j92 
=== Succesors ===
=== Usages ===
v204 v229 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j227 y: j92  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j228 
y: j203 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j228 y: j203  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
j228 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v206 #falseSuccessor: v205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a212 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a212  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a212 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v199 
=== Succesors ===
next: v419 
=== Usages ===
v419 a225 
=== Predecessor ===
v206 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v199 #next: v419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-61809|0xffffffffffff0e8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a212 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
a212 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a212 #next: v216  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
lastLocationAccess: - 
value: j203 
stateAfter: - 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 lastLocationAccess: - value: j203 stateAfter: - #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result [v17|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
address: v435 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v435 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result [v17|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
lastLocationAccess: - 
value: j208 
stateAfter: - 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 lastLocationAccess: - value: j208 stateAfter: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
result [v17|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v437 
lastLocationAccess: - 
value: v393 
stateAfter: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v437 lastLocationAccess: - value: v393 stateAfter: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result [v17|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v434 
lastLocationAccess: - 
value: i28 
stateAfter: - 
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v434 lastLocationAccess: - value: i28 stateAfter: - #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
result [v17|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j227 
index: - 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v436 
lastLocationAccess: - 
value: j167 
stateAfter: - 
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v436 lastLocationAccess: - value: j167 stateAfter: - #next: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j227 
=== Succesors ===
next: v214 
=== Usages ===
a225 
=== Predecessor ===
v235 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j227 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
a211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a225 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v215 
values: a211 a212 
=== Succesors ===
=== Usages ===
v428 a153 v427 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v215 values: a211 a212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v214 v216 
=== Succesors ===
next: v152 
=== Usages ===
a225 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v214 v216 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
result [v23|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a225 
index: - 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a225 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a151 <|@
result v24|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a84 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
lastLocationAccess: - 
value: a151 
stateAfter: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v428 lastLocationAccess: - value: a151 stateAfter: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a225 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a225 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i83 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.valueOf(String.java:4558) [bci: 26]
at java.lang.Character.toString(Character.java:9070) [bci: 4]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v427 
lastLocationAccess: - 
value: i147 
stateAfter: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v427 lastLocationAccess: - value: i147 stateAfter: - #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale) [bci: -6] Placeholder
stamp: a!# java.lang.String
=== Inputs ===
object: a225 
=== Succesors ===
next: a410 
=== Usages ===
v104 
=== Predecessor ===
v154 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a225 #next: a410  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a410 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter.a
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 49]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v426 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
a103 
=== Predecessor ===
a153 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v426 lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a103 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 49]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a410 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a410  <|@  <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>, UnresolvedJavaType<Ljava/lang/Appendable;>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
=== Inputs ===
arguments: a1 a103 a153 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a103 a153  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 211
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3144
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Formatter, String, Locale)>
localsSize: 4
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3185
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?75 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.appendJustified
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v104 
stateDuring: ?163 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
a410 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v104 stateDuring: ?163 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3145) [bci: 214]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3183) [bci: 37]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid j185 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result int[-36115|0xffffffffffff72ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: -36115
stableDimension: 0
stamp: i32 [-36115]
stampKind: i32
value: int[-36115|0xffffffffffff72ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result int[-35091|0xffffffffffff76ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
rawvalue: -35091
stableDimension: 0
stamp: i32 [-35091]
stampKind: i32
value: int[-35091|0xffffffffffff76ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v139 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i180 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: i32 [-36115 - -35091] bits:1...101110x1011101101
valueDescription: i32
=== Inputs ===
merge: v176 
values: i178 i184 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v176 values: i178 i184  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: i64 [1300 - 1940] bits:0...01x1x0010100
valueDescription: i64
=== Inputs ===
merge: v176 
values: j179 j185 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v176 values: j179 j185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v177 v183 
=== Succesors ===
next: v182 
=== Usages ===
i180 j181 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v177 v183 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3181) [bci: 5]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
stamp: void
=== Inputs ===
stateBefore: ?22 
actionAndReason: i180 
speculation: j181 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?22 actionAndReason: i180 speculation: j181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3121) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 133
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 49]
at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xed9c0aec]: UnreachedCode@6[HotSpotMethod<Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)>, 35]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   80  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  130  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  192  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  282  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  292  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  320  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  356  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  384  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   80  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  130  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  192  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  282  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  292  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  320  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  356  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  384  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[290, 291[[318, 320[[354, 356[[382, 384[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v23|q [0, 32[[288, 291[[382, 383[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v26|q [0, 30[[286, 291[[352, 354[[382, 383[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[290, 291[[382, 383[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[284, 291[[316, 318[[350, 354[[380, 383[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 34[[290, 291[[382, 383[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [28, 284[[294, 419[[420, 451[28 MustHaveRegister 154 MustHaveRegister 168 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [30, 280[[294, 419[[420, 451[30 MustHaveRegister 36 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [32, 196[[294, 323[[326, 419[[420, 451[32 MustHaveRegister 38 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [34, 196[[294, 323[[326, 419[[420, 451[34 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [54, 140[[326, 362[54 MustHaveRegister 56 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [56, 60[[362, 380[56 MustHaveRegister 58 ShouldHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [78, 126[78 MustHaveRegister 80 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [80, 110[80 MustHaveRegister 82 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q rax|q [356, 361[356 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v6|q [126, 129[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|q [130, 143[140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q rax|q [384, 387[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [144, 278[[294, 326[[388, 398[[420, 451[278 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v12|q [144, 274[[294, 326[[388, 398[[420, 451[274 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [190, 230[190 MustHaveRegister 192 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [192, 218[192 MustHaveRegister 194 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q rax|q [320, 325[320 MustHaveRegister 322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v17|q [230, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|q [234, 288[276 MustHaveRegister 278 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v15|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|d [282, 286[282 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [430, 446[446 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [430, 448[448 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[290, 291[[318, 320[[354, 356[[382, 384[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v23|q [0, 32[[288, 291[[382, 383[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v26|q [0, 30[[286, 291[[352, 354[[382, 383[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[290, 291[[382, 383[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[284, 291[[316, 318[[350, 354[[380, 383[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 34[[290, 291[[382, 383[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 284[28 MustHaveRegister 154 MustHaveRegister 168 MustHaveRegister 284 ShouldHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 280[[294, 326[30 MustHaveRegister 36 MustHaveRegister 280 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [32, 196[[294, 323[[326, 362[32 MustHaveRegister 38 MustHaveRegister 54 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [34, 196[[294, 323[[326, 362[34 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [54, 140[[326, 362[54 MustHaveRegister 56 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [56, 60[[362, 380[56 MustHaveRegister 58 ShouldHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [78, 126[78 MustHaveRegister 80 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q -1 [80, 110[80 MustHaveRegister 82 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q rax|q [356, 361[356 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r11|q]" v11|q v6|q [126, 129[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r11|q]" v12|q v11|q [130, 143[140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q rax|q [384, 387[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [144, 278[[294, 326[[388, 398[[420, 451[278 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v12|q [144, 274[[294, 326[[388, 398[[420, 451[274 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q -1 [190, 230[190 MustHaveRegister 192 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [192, 218[192 MustHaveRegister 194 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q rax|q [320, 325[320 MustHaveRegister 322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r9|q]" v22|q v17|q [230, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r9|q]" v23|q v22|q [234, 288[276 MustHaveRegister 278 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v15|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdx|d]" v25|d -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [282, 286[282 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r8|d]" v27|d -1 [430, 446[446 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r9|q]" v28|q -1 [430, 448[448 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[vstack:0|q]" v0|q v0|q [294, 315[ "OneSpillStore"
  v30|q QWORD "[vstack:4|q]" v1|q v1|q [326, 351[ "OneSpillStore"
  v31|q QWORD "[vstack:1|q]" v2|q v2|q [362, 381[ "OneSpillStore"
  v32|q QWORD "[vstack:3|q]" v3|q v3|q [362, 381[ "OneSpillStore"
  v33|q QWORD "[vstack:0|q]" v0|q v0|q [315, 362[ "OneSpillStore"
  v34|q QWORD "[vstack:0|q]" v0|q v0|q [362, 379[ "OneSpillStore"
  v35|q QWORD "[vstack:4|q]" v1|q v1|q [351, 362[ "OneSpillStore"
  v36|q QWORD "[vstack:4|q]" v1|q v1|q [362, 381[ "OneSpillStore"
  v37|q QWORD "[vstack:4|q]" v1|q v1|q [381, 419[[420, 430[ "OneSpillStore"
  v38|q QWORD "[vstack:0|q]" v0|q v0|q [379, 419[[420, 430[ "OneSpillStore"
  v39|q QWORD "[vstack:3|q]" v3|q v3|q [381, 419[[420, 430[ "OneSpillStore"
  v40|q QWORD "[vstack:1|q]" v2|q v2|q [381, 419[[420, 430[ "OneSpillStore"
  v41|q QWORD "[rsi|q]" v0|q v0|q [430, 451[ "OneSpillStore"
  v42|q QWORD "[rbx|q]" v2|q v2|q [430, 451[ "OneSpillStore"
  v43|q QWORD "[rcx|q]" v3|q v3|q [430, 451[ "OneSpillStore"
  v44|q QWORD "[rdx|q]" v1|q v1|q [430, 451[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   80  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  130  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  192  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  282  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  292  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  320  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  356  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v36|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = STACKMOVE (input: v32|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = STACKMOVE (input: v31|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  384  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[290, 291[[318, 320[[354, 356[[382, 384[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v23|q [0, 32[[288, 291[[382, 383[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v26|q [0, 30[[286, 291[[352, 354[[382, 383[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[290, 291[[382, 383[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[284, 291[[316, 318[[350, 354[[380, 383[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 34[[290, 291[[382, 383[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 284[28 MustHaveRegister 154 MustHaveRegister 168 MustHaveRegister 284 ShouldHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 280[[294, 326[30 MustHaveRegister 36 MustHaveRegister 280 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [32, 196[[294, 323[[326, 362[32 MustHaveRegister 38 MustHaveRegister 54 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [34, 196[[294, 323[[326, 362[34 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [54, 140[[326, 362[54 MustHaveRegister 56 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [56, 60[[362, 380[56 MustHaveRegister 58 ShouldHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [78, 126[78 MustHaveRegister 80 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q -1 [80, 110[80 MustHaveRegister 82 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q rax|q [356, 361[356 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r11|q]" v11|q v6|q [126, 129[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r11|q]" v12|q v11|q [130, 143[140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q rax|q [384, 387[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [144, 278[[294, 326[[388, 398[[420, 451[278 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v12|q [144, 274[[294, 326[[388, 398[[420, 451[274 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q -1 [190, 230[190 MustHaveRegister 192 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [192, 218[192 MustHaveRegister 194 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q rax|q [320, 325[320 MustHaveRegister 322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r9|q]" v22|q v17|q [230, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r9|q]" v23|q v22|q [234, 288[276 MustHaveRegister 278 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v15|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdx|d]" v25|d -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [282, 286[282 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r8|d]" v27|d -1 [430, 446[446 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r9|q]" v28|q -1 [430, 448[448 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[vstack:0|q]" v0|q v0|q [294, 315[ "OneSpillStore"
  v30|q QWORD "[vstack:4|q]" v1|q v1|q [326, 351[ "OneSpillStore"
  v31|q QWORD "[vstack:1|q]" v2|q v2|q [362, 381[ "OneSpillStore"
  v32|q QWORD "[vstack:3|q]" v3|q v3|q [362, 381[ "OneSpillStore"
  v33|q QWORD "[vstack:0|q]" v0|q v0|q [315, 362[ "OneSpillStore"
  v34|q QWORD "[vstack:0|q]" v0|q v0|q [362, 379[ "OneSpillStore"
  v35|q QWORD "[vstack:4|q]" v1|q v1|q [351, 362[ "OneSpillStore"
  v36|q QWORD "[vstack:4|q]" v1|q v1|q [362, 381[ "OneSpillStore"
  v37|q QWORD "[vstack:4|q]" v1|q v1|q [381, 419[[420, 430[ "OneSpillStore"
  v38|q QWORD "[vstack:0|q]" v0|q v0|q [379, 419[[420, 430[ "OneSpillStore"
  v39|q QWORD "[vstack:3|q]" v3|q v3|q [381, 419[[420, 430[ "OneSpillStore"
  v40|q QWORD "[vstack:1|q]" v2|q v2|q [381, 419[[420, 430[ "OneSpillStore"
  v41|q QWORD "[rsi|q]" v0|q v0|q [430, 451[ "OneSpillStore"
  v42|q QWORD "[rbx|q]" v2|q v2|q [430, 451[ "OneSpillStore"
  v43|q QWORD "[rcx|q]" v3|q v3|q [430, 451[ "OneSpillStore"
  v44|q QWORD "[rdx|q]" v1|q v1|q [430, 451[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   80  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  130  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], v12|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  192  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  282  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  292  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  320  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  356  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [v9|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v36|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = STACKMOVE (input: v32|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = STACKMOVE (input: v31|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  384  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[1940|0x794]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[290, 291[[318, 320[[354, 356[[382, 384[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v23|q [0, 32[[288, 291[[382, 383[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v26|q [0, 30[[286, 291[[352, 354[[382, 383[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[290, 291[[382, 383[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[284, 291[[316, 318[[350, 354[[380, 383[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 34[[290, 291[[382, 383[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[290, 291[[382, 383[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 284[28 MustHaveRegister 154 MustHaveRegister 168 MustHaveRegister 284 ShouldHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 280[[294, 326[30 MustHaveRegister 36 MustHaveRegister 280 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [32, 196[[294, 323[[326, 362[32 MustHaveRegister 38 MustHaveRegister 54 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [34, 196[[294, 323[[326, 362[34 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [54, 140[[326, 362[54 MustHaveRegister 56 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [56, 60[[362, 380[56 MustHaveRegister 58 ShouldHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [78, 126[78 MustHaveRegister 80 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q -1 [80, 110[80 MustHaveRegister 82 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q rax|q [356, 361[356 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r11|q]" v11|q v6|q [126, 129[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r11|q]" v12|q v11|q [130, 143[140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q rax|q [384, 387[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [144, 278[[294, 326[[388, 398[[420, 451[278 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v12|q [144, 274[[294, 326[[388, 398[[420, 451[274 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q -1 [190, 230[190 MustHaveRegister 192 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [192, 218[192 MustHaveRegister 194 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q rax|q [320, 325[320 MustHaveRegister 322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[r9|q]" v22|q v17|q [230, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r9|q]" v23|q v22|q [234, 288[276 MustHaveRegister 278 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v15|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdx|d]" v25|d -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [282, 286[282 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r8|d]" v27|d -1 [430, 446[446 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r9|q]" v28|q -1 [430, 448[448 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[vstack:0|q]" v0|q v0|q [294, 315[ "OneSpillStore"
  v30|q QWORD "[vstack:4|q]" v1|q v1|q [326, 351[ "OneSpillStore"
  v31|q QWORD "[vstack:1|q]" v2|q v2|q [362, 381[ "OneSpillStore"
  v32|q QWORD "[vstack:3|q]" v3|q v3|q [362, 381[ "OneSpillStore"
  v33|q QWORD "[vstack:0|q]" v0|q v0|q [315, 362[ "OneSpillStore"
  v34|q QWORD "[vstack:0|q]" v0|q v0|q [362, 379[ "OneSpillStore"
  v35|q QWORD "[vstack:4|q]" v1|q v1|q [351, 362[ "OneSpillStore"
  v36|q QWORD "[vstack:4|q]" v1|q v1|q [362, 381[ "OneSpillStore"
  v37|q QWORD "[vstack:4|q]" v1|q v1|q [381, 419[[420, 430[ "OneSpillStore"
  v38|q QWORD "[vstack:0|q]" v0|q v0|q [379, 419[[420, 430[ "OneSpillStore"
  v39|q QWORD "[vstack:3|q]" v3|q v3|q [381, 419[[420, 430[ "OneSpillStore"
  v40|q QWORD "[vstack:1|q]" v2|q v2|q [381, 419[[420, 430[ "OneSpillStore"
  v41|q QWORD "[rsi|q]" v0|q v0|q [430, 451[ "OneSpillStore"
  v42|q QWORD "[rbx|q]" v2|q v2|q [430, 451[ "OneSpillStore"
  v43|q QWORD "[rcx|q]" v3|q v3|q [430, 451[ "OneSpillStore"
  v44|q QWORD "[rdx|q]" v1|q v1|q [430, 451[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   80  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  130  <|@ instruction [v12|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  192  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [v23|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  282  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  292  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  320  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  356  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v36|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = STACKMOVE (input: v32|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = STACKMOVE (input: v31|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  384  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [v27|DWORD, v28|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction v4|DWORD = MOVSX input: [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction v5|DWORD = MOVZX value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   80  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v6|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [v6|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction MOVB (x: [v12|QWORD[.] + 16], y: reinterpret: v4|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction v16|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction BITTESTANDBRANCH value: v16|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v17|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  192  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 24] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v18|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 440], y: v18|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [v17|QWORD + 280] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [v17|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [v17|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV x: [v17|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV x: [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction v22|QWORD[.] = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v23|QWORD[.] + 20], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v23|QWORD[.] + 16], y: reinterpret: v14|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction v25|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  282  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  292  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  320  <|@ instruction v20|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v20|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  356  <|@ instruction v9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v9|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction rsi|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v36|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = STACKMOVE (input: v32|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = STACKMOVE (input: v31|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  384  <|@ instruction v13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v27|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v28|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=v14|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=v15|QWORD[.]} Ljava/lang/String; int[0|0x0] v14|DWORD int[0|0x0] int[0|0x0] v15|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   80  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  192  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  292  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:1|QWORD[.] vstack:3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:1|QWORD[.] vstack:3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   80  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  170  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  192  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  292  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:1|QWORD[.] vstack:3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:1|QWORD[.] vstack:3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:1|QWORD[.] vstack:3|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  426  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:1|QWORD[.] vstack:3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction vstack:1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [80, 516[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [184, 516[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [182, 516[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [78, 516[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [80, 516[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:56|q]" vstack:1|q -1 [184, 516[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:48|q]" vstack:3|q -1 [182, 516[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:32|q]" vstack:4|q -1 [78, 516[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  426  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  426  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r11:0, stack:24]
live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, stack:24]
live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rcx:0, r8:0, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, r11:0]
live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVZX value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607054557324886409
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0 <|@ <|@
      nr  152  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607144247605488530
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0 <|@ <|@
      nr  338  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [r9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [r9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  396  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53]
locals: - - - - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r11:0, stack:24]
live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27] <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, stack:24]
live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27] <|@ <|@
      nr  306  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576893799739589198
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rcx:0, r8:0, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4571535935053379328
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.String.valueOf(String.java:4558) [bci: 31]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - 
java.lang.Character.toString(Character.java:9070) [bci: 4]
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27] <|@ <|@
      nr  210  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r9|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  424  <|@ instruction r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, r11:0]
live-base-pointers: []
java.lang.Character.toString(Character.java:9070) [bci: 7]
stack: vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
locals: - 
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] rcx|QWORD[.] - - 
vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} Ljava/lang/String; int[0|0x0] r10|DWORD int[0|0x0] int[0|0x0] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  454  <|@ instruction r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnonnull     13
     4: aload_0       
     5: aload_1       
     6: ldc           #201        // "null"
     8: aload_3       
     9: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
    12: return        
    13: aconst_null   
    14: astore        4
    16: aload_2       
    17: instanceof    #73         // java.lang.Character
    20: ifeq          35
    23: aload_2       
    24: checkcast     #73         // java.lang.Character
    27: invokevirtual #74         // java.lang.Character.toString:()java.lang.String
    30: astore        4
    32: goto          206
    35: aload_2       
    36: instanceof    #203        // java.lang.Byte
    39: ifeq          89
    42: aload_2       
    43: checkcast     #203        // java.lang.Byte
    46: invokevirtual #51         // java.lang.Byte.byteValue:()byte
    49: istore        5
    51: iload         5
    53: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
    56: ifeq          76
    59: new           #64         // java.lang.String
    62: dup           
    63: iload         5
    65: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
    68: invokespecial #77         // java.lang.String.<init>:(char[])void
    71: astore        4
    73: goto          86
    76: new           #321        // java.util.IllegalFormatCodePointException
    79: dup           
    80: iload         5
    82: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
    85: athrow        
    86: goto          206
    89: aload_2       
    90: instanceof    #212        // java.lang.Short
    93: ifeq          143
    96: aload_2       
    97: checkcast     #212        // java.lang.Short
   100: invokevirtual #53         // java.lang.Short.shortValue:()short
   103: istore        5
   105: iload         5
   107: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   110: ifeq          130
   113: new           #64         // java.lang.String
   116: dup           
   117: iload         5
   119: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   122: invokespecial #77         // java.lang.String.<init>:(char[])void
   125: astore        4
   127: goto          140
   130: new           #321        // java.util.IllegalFormatCodePointException
   133: dup           
   134: iload         5
   136: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   139: athrow        
   140: goto          206
   143: aload_2       
   144: instanceof    #2          // java.lang.Integer
   147: ifeq          197
   150: aload_2       
   151: checkcast     #2          // java.lang.Integer
   154: invokevirtual #55         // java.lang.Integer.intValue:()int
   157: istore        5
   159: iload         5
   161: invokestatic  #75         // java.lang.Character.isValidCodePoint:(int)boolean
   164: ifeq          184
   167: new           #64         // java.lang.String
   170: dup           
   171: iload         5
   173: invokestatic  #76         // java.lang.Character.toChars:(int)char[]
   176: invokespecial #77         // java.lang.String.<init>:(char[])void
   179: astore        4
   181: goto          194
   184: new           #321        // java.util.IllegalFormatCodePointException
   187: dup           
   188: iload         5
   190: invokespecial #78         // java.util.IllegalFormatCodePointException.<init>:(int)void
   193: athrow        
   194: goto          206
   197: aload_0       
   198: aload_0       
   199: getfield      #10         // c:char
   202: aload_2       
   203: invokevirtual #60         // failConversion:(char, java.lang.Object)void
   206: aload_0       
   207: aload_1       
   208: aload         4
   210: aload_3       
   211: invokevirtual #48         // print:(java.util.Formatter, java.lang.String, java.util.Locale)void
   214: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f850d030000909090909090909090909048896c24308502817908addeadde0f8587020000909090909090440fbf510c450fb7da41f7c300ffffff0f85c001000090909090909090904d8b9fb80100004d8d4b184d3b8fc80100000f875c0100009090909090909090909090904d898fb8010000410f188318010000410f188358010000410f18839801000049c7030100000041c74308addeadde41c7430c0100000049c7431000000000909090904588531041ba0000000090909090837e18ff0f85230200009090909090448b4e10490fbae1010f827701000090909090909090904d8b8fb8010000498d5918493b9fc80100000f878b0000009090909090909090909049899fb8010000410f18811801000049c7010100000041c74108addeadde41c7410c0000000049c74110000000009090909090909090909090909090909090909049c1eb0345895914458851108b520c48c1e203498bc9666690e8000000000f1f840000000000488b6c24304883c438493ba7500400000f87a1010000c5f877c3488974241890909090909090909048b8addeaddeaddeadde488bf0e8000000000f1f84000000000085004c8bc8488b742418e976ffffff488954242048897424189090909090909090909048beaddeaddeaddeaddeba01000000e8000000000f1f84000000000085004c8bd8488b542420488b742418e9aafeffff4c8944241048894c2408488954242048897424189090909090909090418bf3666690e8000000000f1f8400000000004c8bd841ba010000004c8b442410488b4c2408488b542420488b742418e967feffff4c8944241048894c24084889542420488974241890909049c7c19407000041b8ed72ffff488b4c2410488b5c2408488b542420488b74241890909090909090458987840400004d898f90040000e8000000000f1f8400000000004c8944241048894c2408488954242048897424189090909090909041c78784040000ed7affff49c7879004000094020000e8000000000f1f8400000000004c8944241048894c24084889542420488974241890909049c7c11405000041b8ed76ffffe963ffffff48896c2430e800000000e9e4fcfffff4488d0d4bfeffff49898f68040000e996fcfffff441c78784040000f59cffff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed8bffff49c7879004000014000000e8000000000f1f84000000000041c787840400008f0effff49c7879004000000000000e8000000000f1f84000000000041c787840400008f7cfeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD  <||@
  Comment 74 28 NULLCHECK address: [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 74 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 30 CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0]  <||@
  Comment 76 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 {meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}}  <||@
  Comment 89 block B1 null  <||@
  Comment 89 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 34 NOP  <||@
  Comment 90 36 NOP  <||@
  Comment 91 38 NOP  <||@
  Comment 92 40 NOP  <||@
  Comment 93 42 NOP  <||@
  Comment 94 44 NOP  <||@
  Comment 95 46 r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 100 48 r11|DWORD = MOVZX value: r10|DWORD size: DWORD  <||@
  Comment 104 50 TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD  <||@
  Comment 117 block B2 null  <||@
  Comment 117 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 54 NOP  <||@
  Comment 118 56 NOP  <||@
  Comment 119 58 NOP  <||@
  Comment 120 60 NOP  <||@
  Comment 121 62 NOP  <||@
  Comment 122 64 NOP  <||@
  Comment 123 66 NOP  <||@
  Comment 124 68 NOP  <||@
  Comment 125 70 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 132 72 r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD  <||@
  Comment 136 74 CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 149 block B4 null  <||@
  Comment 149 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 149 120 NOP  <||@
  Comment 150 122 NOP  <||@
  Comment 151 124 NOP  <||@
  Comment 152 126 NOP  <||@
  Comment 153 128 NOP  <||@
  Comment 154 130 NOP  <||@
  Comment 155 132 NOP  <||@
  Comment 156 134 NOP  <||@
  Comment 157 136 NOP  <||@
  Comment 158 138 NOP  <||@
  Comment 159 140 NOP  <||@
  Comment 160 142 NOP  <||@
  Comment 161 144 MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD  <||@
  Comment 168 146 AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0  <||@
  Comment 176 148 AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0  <||@
  Comment 184 150 AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0  <||@
  Comment 192 152 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 199 154 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 199 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 207 156 MOV x: [r11|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 215 158 MOV x: [r11|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 223 160 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 223 162 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 223 block B5 null  <||@
  Comment 223 164 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 223 166 NOP  <||@
  Comment 224 168 NOP  <||@
  Comment 225 170 NOP  <||@
  Comment 226 172 NOP  <||@
  Comment 227 174 MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE  <||@
  Comment 231 176 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 237 178 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 237 block B7 null  <||@
  Comment 237 224 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 237 226 NOP  <||@
  Comment 238 228 NOP  <||@
  Comment 239 230 NOP  <||@
  Comment 240 232 NOP  <||@
  Comment 241 234 CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null  <||@
  Comment 251 block B8 null  <||@
  Comment 251 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 251 238 NOP  <||@
  Comment 252 240 NOP  <||@
  Comment 253 242 NOP  <||@
  Comment 254 244 NOP  <||@
  Comment 255 246 NOP  <||@
  Comment 256 248 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 260 250 BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1  <||@
  Comment 271 block B9 null  <||@
  Comment 271 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 271 254 NOP  <||@
  Comment 272 256 NOP  <||@
  Comment 273 258 NOP  <||@
  Comment 274 260 NOP  <||@
  Comment 275 262 NOP  <||@
  Comment 276 264 NOP  <||@
  Comment 277 266 NOP  <||@
  Comment 278 268 NOP  <||@
  Comment 279 270 r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 286 272 rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD  <||@
  Comment 290 274 CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 303 block B11 null  <||@
  Comment 303 312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 314 NOP  <||@
  Comment 304 316 NOP  <||@
  Comment 305 318 NOP  <||@
  Comment 306 320 NOP  <||@
  Comment 307 322 NOP  <||@
  Comment 308 324 NOP  <||@
  Comment 309 326 NOP  <||@
  Comment 310 328 NOP  <||@
  Comment 311 330 NOP  <||@
  Comment 312 332 NOP  <||@
  Comment 313 334 MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD  <||@
  Comment 320 336 AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0  <||@
  Comment 328 338 MOV x: [r9|QWORD] y: 1 size: QWORD  <||@
  Comment 335 340 MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 335 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 343 342 MOV x: [r9|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 351 344 MOV x: [r9|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 359 346 r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 359 348 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 359 block B12 null  <||@
  Comment 359 350 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 359 352 NOP  <||@
  Comment 360 354 NOP  <||@
  Comment 361 356 NOP  <||@
  Comment 362 358 NOP  <||@
  Comment 363 360 NOP  <||@
  Comment 364 362 NOP  <||@
  Comment 365 364 NOP  <||@
  Comment 366 366 NOP  <||@
  Comment 367 368 NOP  <||@
  Comment 368 370 NOP  <||@
  Comment 369 372 NOP  <||@
  Comment 370 374 NOP  <||@
  Comment 371 376 NOP  <||@
  Comment 372 378 NOP  <||@
  Comment 373 380 NOP  <||@
  Comment 374 382 NOP  <||@
  Comment 375 384 NOP  <||@
  Comment 376 386 NOP  <||@
  Comment 377 388 NOP  <||@
  Comment 378 390 r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3  <||@
  Comment 382 392 MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 386 394 MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE  <||@
  Comment 390 396 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 393 398 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3  <||@
  Comment 397 400 rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 400 402 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211]  <||@
  Comment 403 {HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>}  <||@
  Comment 403 INVOKESPECIAL  <||@
  Comment 408 []at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 416 404 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 425 POLL_RETURN_FAR  <||@
  Comment 442 block B10 null  <||@
  Comment 442 276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 442 278 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 447 280 NOP  <||@
  Comment 448 282 NOP  <||@
  Comment 449 284 NOP  <||@
  Comment 450 286 NOP  <||@
  Comment 451 288 NOP  <||@
  Comment 452 290 NOP  <||@
  Comment 453 292 NOP  <||@
  Comment 454 294 NOP  <||@
  Comment 455 296 NOP  <||@
  Comment 456 298 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 456 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 466 300 rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 469 302 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27]  <||@
  Comment 469 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 474 [rcx:0, rdx:0, r8:0, r11:0, stack:24]at java.lang.Character.toString(Character.java:9070) [bci: 7, duringCall: false, rethrow: false]
              |0                                                                                                           
     locals:  |-                                                                                                           
     stack:   |vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 482 304 NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27]  <||@
  Comment 482 [rax:0, rcx:0, rdx:0, r8:0, r11:0, stack:24]at java.lang.Character.toString(Character.java:9070) [bci: 7, duringCall: false, rethrow: false]
              |0                                                                                                           
     locals:  |-                                                                                                           
     stack:   |vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 482 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 484 306 r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 487 308 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 492 310 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 497 block B3 null  <||@
  Comment 497 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 497 78 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 502 80 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 507 82 NOP  <||@
  Comment 508 84 NOP  <||@
  Comment 509 86 NOP  <||@
  Comment 510 88 NOP  <||@
  Comment 511 90 NOP  <||@
  Comment 512 92 NOP  <||@
  Comment 513 94 NOP  <||@
  Comment 514 96 NOP  <||@
  Comment 515 98 NOP  <||@
  Comment 516 100 NOP  <||@
  Comment 517 102 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 517 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 527 104 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 532 106 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 532 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 537 [rcx:0, r8:0, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 545 108 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 545 [rax:0, rcx:0, r8:0, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 545 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 547 110 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 550 112 rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 555 114 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 560 116 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 565 block B6 null  <||@
  Comment 565 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 565 182 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 570 184 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 575 186 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 580 188 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 585 190 NOP  <||@
  Comment 586 192 NOP  <||@
  Comment 587 194 NOP  <||@
  Comment 588 196 NOP  <||@
  Comment 589 198 NOP  <||@
  Comment 590 200 NOP  <||@
  Comment 591 202 NOP  <||@
  Comment 592 204 NOP  <||@
  Comment 593 206 rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 596 208 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27]  <||@
  Comment 599 {HotSpotMethod<StringUTF16.toBytes(char)>}  <||@
  Comment 599 INVOKESTATIC  <||@
  Comment 604 [stack:8, stack:16, stack:24, stack:32]at java.lang.String.valueOf(String.java:4558) [bci: 31, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                            
     locals:  |-                                                                                                             |                                                                                                             
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
  at java.lang.Character.toString(Character.java:9070) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 612 210 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 615 212 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 621 214 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 626 216 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 631 218 rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 636 220 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 641 222 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 646 block B13 null  <||@
  Comment 646 406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 646 408 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 651 410 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 656 412 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 661 414 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 666 416 NOP  <||@
  Comment 667 418 NOP  <||@
  Comment 668 420 NOP  <||@
  Comment 669 422 r9|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 676 424 r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed]  <||@
  Comment 682 434 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 682 block B15 null  <||@
  Comment 682 466 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 682 456 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 687 458 rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 692 460 rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 697 462 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 702 468 NOP  <||@
  Comment 703 470 NOP  <||@
  Comment 704 472 NOP  <||@
  Comment 705 474 NOP  <||@
  Comment 706 476 NOP  <||@
  Comment 707 478 NOP  <||@
  Comment 708 480 NOP  <||@
  Comment 709 482 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 716 484 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 723 486 DEOPT info [bci:7, 27]  <||@
  Comment 723 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 728 [rcx:0, rdx:0, rbx:0, rsi:0, r11:0]at java.lang.Character.toString(Character.java:9070) [bci: 7, duringCall: false, rethrow: false]
              |0                                                                                                           
     locals:  |-                                                                                                           
     stack:   |vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0             |1             |2             |3             |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|QWORD[.]  |rcx|QWORD[.]  |-  |-   <||@
  Comment 736 block B16 null  <||@
  Comment 736 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 736 490 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 741 492 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 746 494 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 751 496 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 756 498 NOP  <||@
  Comment 757 500 NOP  <||@
  Comment 758 502 NOP  <||@
  Comment 759 504 NOP  <||@
  Comment 760 506 NOP  <||@
  Comment 761 508 NOP  <||@
  Comment 762 510 NOP  <||@
  Comment 763 512 MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD  <||@
  Comment 774 514 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 785 516 DEOPT info [bci:0]  <||@
  Comment 785 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 790 [stack:8, stack:16, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3                  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 798 block B14 null  <||@
  Comment 798 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 798 438 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 803 440 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 808 442 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 813 444 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 818 446 NOP  <||@
  Comment 819 448 NOP  <||@
  Comment 820 450 NOP  <||@
  Comment 821 452 r9|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 828 454 r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed]  <||@
  Comment 834 464 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 844 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 869 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 897 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 902 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 932 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 937 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 967 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 972 [rax:0, rcx:0, rdx:0, r8:0, r11:0, stack:24]at java.lang.Character.toString(Character.java:9070) [bci: 7, duringCall: false, rethrow: false]
              |0                                                                                                           
     locals:  |-                                                                                                           
     stack:   |vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 1002 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1007 [rax:0, rcx:0, r8:0, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 1015 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1015 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1021 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7490[java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)]"
  method "HotSpotCompilation-7490[java.util.Formatter$FormatSpecifier.printCharacter(Formatter, Object, Locale)]"
  date 1724269757961
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af20040 448b560849bc0000002b787f00004d03d44d33e4493bc20f85235086fe66669089842400c0feff4883ec389041817f20000000000f850d030000909090909090909090909048896c24308502817908e02902000f8587020000909090909090440fbf510c450fb7da41f7c300ffffff0f85c001000090909090909090904d8b9fb80100004d8d4b184d3b8fc80100000f875c0100009090909090909090909090904d898fb8010000410f188318010000410f188358010000410f18839801000049c7030100000041c74308c022000041c7430c0100000049c7431000000000909090904588531041ba0000000090909090837e18ff0f85230200009090909090448b4e10490fbae1010f827701000090909090909090904d8b8fb8010000498d5918493b9fc80100000f878b0000009090909090909090909049899fb8010000410f18811801000049c7010100000041c74108d8e8000041c7410c0000000049c74110000000009090909090909090909090909090909090909049c1eb0345895914458851108b520c48c1e203498bc9666690e8a85186fe0f1f840048030002488b6c24304883c438493ba7500400000f87a1010000c5f877c3488974241890909090909090909048b8d8e8002b787f0000488bf0e866809bfe0f1f84000000000085004c8bc8488b742418e976ffffff488954242048897424189090909090909090909048bec022002b787f0000ba01000000e8a7e99afe0f1f84000000000085004c8bd8488b542420488b742418e9aafeffff4c8944241048894c2408488954242048897424189090909090909090418bf3666690e8e45686fe0f1f84000c0400074c8bd841ba010000004c8b442410488b4c2408488b542420488b742418e967feffff4c8944241048894c24084889542420488974241890909049c7c19407000041b8ed72ffff488b4c2410488b5c2408488b542420488b74241890909090909090458987840400004d898f90040000e862ae86fe0f1f8400000000004c8944241048894c2408488954242048897424189090909090909041c78784040000ed7affff49c7879004000094020000e824ae86fe0f1f8400000000004c8944241048894c24084889542420488974241890909049c7c11405000041b8ed76ffffe963ffffff48896c2430e88fae84fee9e4fcfffff4488d0d4bfeffff49898f68040000e956bc86fef441c78784040000f59cffff49c7879004000000000000e8b4ad86fe0f1f84000000000041c78784040000ed8bffff49c7879004000014000000e891ad86fe0f1f84000000000041c787840400008f0effff49c7879004000000000000e86ead86fe0f1f84000000000041c787840400008f7cfeff49c7879004000000000000e84bad86fe0f1f840000000000e8c44e9afef4e8deaa86fef4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76ba79a4 slotKind: QWORD  <||@
  Comment 74 28 NULLCHECK address: [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 74 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 30 CMPCONSTBRANCH x: [rcx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B16 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} state [bci:0]  <||@
  Comment 76 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 {meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}}  <||@
  Comment 89 block B1 null  <||@
  Comment 89 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 34 NOP  <||@
  Comment 90 36 NOP  <||@
  Comment 91 38 NOP  <||@
  Comment 92 40 NOP  <||@
  Comment 93 42 NOP  <||@
  Comment 94 44 NOP  <||@
  Comment 95 46 r10|DWORD = MOVSX input: [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 100 48 r11|DWORD = MOVZX value: r10|DWORD size: DWORD  <||@
  Comment 104 50 TESTCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9957621460956594 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 y: -256 size: DWORD  <||@
  Comment 117 block B2 null  <||@
  Comment 117 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 54 NOP  <||@
  Comment 118 56 NOP  <||@
  Comment 119 58 NOP  <||@
  Comment 120 60 NOP  <||@
  Comment 121 62 NOP  <||@
  Comment 122 64 NOP  <||@
  Comment 123 66 NOP  <||@
  Comment 124 68 NOP  <||@
  Comment 125 70 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 132 72 r9|QWORD = LEA address: [r11|QWORD + 24] size: QWORD  <||@
  Comment 136 74 CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 149 block B4 null  <||@
  Comment 149 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 149 120 NOP  <||@
  Comment 150 122 NOP  <||@
  Comment 151 124 NOP  <||@
  Comment 152 126 NOP  <||@
  Comment 153 128 NOP  <||@
  Comment 154 130 NOP  <||@
  Comment 155 132 NOP  <||@
  Comment 156 134 NOP  <||@
  Comment 157 136 NOP  <||@
  Comment 158 138 NOP  <||@
  Comment 159 140 NOP  <||@
  Comment 160 142 NOP  <||@
  Comment 161 144 MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD  <||@
  Comment 168 146 AMD64PREFETCH ~address: [r11|QWORD + 280] instr: 0  <||@
  Comment 176 148 AMD64PREFETCH ~address: [r11|QWORD + 344] instr: 0  <||@
  Comment 184 150 AMD64PREFETCH ~address: [r11|QWORD + 408] instr: 0  <||@
  Comment 192 152 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 199 154 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 199 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 207 156 MOV x: [r11|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 215 158 MOV x: [r11|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 223 160 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 223 162 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 223 block B5 null  <||@
  Comment 223 164 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 223 166 NOP  <||@
  Comment 224 168 NOP  <||@
  Comment 225 170 NOP  <||@
  Comment 226 172 NOP  <||@
  Comment 227 174 MOVB (x: [r11|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE  <||@
  Comment 231 176 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 237 178 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 237 block B7 null  <||@
  Comment 237 224 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 237 226 NOP  <||@
  Comment 238 228 NOP  <||@
  Comment 239 230 NOP  <||@
  Comment 240 232 NOP  <||@
  Comment 241 234 CMPCONSTBRANCH x: [rsi|QWORD[.] + 24] trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 y: -1 size: DWORD inlinedY: null  <||@
  Comment 251 block B8 null  <||@
  Comment 251 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 251 238 NOP  <||@
  Comment 252 240 NOP  <||@
  Comment 253 242 NOP  <||@
  Comment 254 244 NOP  <||@
  Comment 255 246 NOP  <||@
  Comment 256 248 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 260 250 BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B8 -> B9 falseDestination: B8 -> B13 index: 1  <||@
  Comment 271 block B9 null  <||@
  Comment 271 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 271 254 NOP  <||@
  Comment 272 256 NOP  <||@
  Comment 273 258 NOP  <||@
  Comment 274 260 NOP  <||@
  Comment 275 262 NOP  <||@
  Comment 276 264 NOP  <||@
  Comment 277 266 NOP  <||@
  Comment 278 268 NOP  <||@
  Comment 279 270 r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 286 272 rbx|QWORD = LEA address: [r9|QWORD + 24] size: QWORD  <||@
  Comment 290 274 CMPBRANCH (x: rbx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 303 block B11 null  <||@
  Comment 303 312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 314 NOP  <||@
  Comment 304 316 NOP  <||@
  Comment 305 318 NOP  <||@
  Comment 306 320 NOP  <||@
  Comment 307 322 NOP  <||@
  Comment 308 324 NOP  <||@
  Comment 309 326 NOP  <||@
  Comment 310 328 NOP  <||@
  Comment 311 330 NOP  <||@
  Comment 312 332 NOP  <||@
  Comment 313 334 MOV (x: [r15|QWORD + 440], y: rbx|QWORD) size: QWORD  <||@
  Comment 320 336 AMD64PREFETCH ~address: [r9|QWORD + 280] instr: 0  <||@
  Comment 328 338 MOV x: [r9|QWORD] y: 1 size: QWORD  <||@
  Comment 335 340 MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 335 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 343 342 MOV x: [r9|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 351 344 MOV x: [r9|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 359 346 r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 359 348 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 359 block B12 null  <||@
  Comment 359 350 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 359 352 NOP  <||@
  Comment 360 354 NOP  <||@
  Comment 361 356 NOP  <||@
  Comment 362 358 NOP  <||@
  Comment 363 360 NOP  <||@
  Comment 364 362 NOP  <||@
  Comment 365 364 NOP  <||@
  Comment 366 366 NOP  <||@
  Comment 367 368 NOP  <||@
  Comment 368 370 NOP  <||@
  Comment 369 372 NOP  <||@
  Comment 370 374 NOP  <||@
  Comment 371 376 NOP  <||@
  Comment 372 378 NOP  <||@
  Comment 373 380 NOP  <||@
  Comment 374 382 NOP  <||@
  Comment 375 384 NOP  <||@
  Comment 376 386 NOP  <||@
  Comment 377 388 NOP  <||@
  Comment 378 390 r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3  <||@
  Comment 382 392 MOV (x: [r9|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 386 394 MOVB (x: [r9|QWORD[.] + 16], y: r10|BYTE(DWORD)) size: BYTE  <||@
  Comment 390 396 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 393 398 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7b80d29 encoding: base: 0 shift: 3  <||@
  Comment 397 400 rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 400 402 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 211]  <||@
  Comment 403 {HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>}  <||@
  Comment 403 INVOKESPECIAL  <||@
  Comment 408 []at java.util.Formatter$FormatSpecifier.print(Formatter.java:3185) [bci: 53, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3144) [bci: 211, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 416 404 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 425 POLL_RETURN_FAR  <||@
  Comment 442 block B10 null  <||@
  Comment 442 276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 442 278 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 447 280 NOP  <||@
  Comment 448 282 NOP  <||@
  Comment 449 284 NOP  <||@
  Comment 450 286 NOP  <||@
  Comment 451 288 NOP  <||@
  Comment 452 290 NOP  <||@
  Comment 453 292 NOP  <||@
  Comment 454 294 NOP  <||@
  Comment 455 296 NOP  <||@
  Comment 456 298 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 456 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 466 300 rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 469 302 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:7, 27]  <||@
  Comment 469 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 474 [rcx:0, rdx:0, r8:0, r11:0, stack:24]at java.lang.Character.toString(Character.java:9070) [bci: 7, duringCall: false, rethrow: false]
              |0                                                                                                           
     locals:  |-                                                                                                           
     stack:   |vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 482 304 NULLCHECK address: [rax|QWORD[.]] state [bci:7, 27]  <||@
  Comment 482 [rax:0, rcx:0, rdx:0, r8:0, r11:0, stack:24]at java.lang.Character.toString(Character.java:9070) [bci: 7, duringCall: false, rethrow: false]
              |0                                                                                                           
     locals:  |-                                                                                                           
     stack:   |vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 482 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 484 306 r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 487 308 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 492 310 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 497 block B3 null  <||@
  Comment 497 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 497 78 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 502 80 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 507 82 NOP  <||@
  Comment 508 84 NOP  <||@
  Comment 509 86 NOP  <||@
  Comment 510 88 NOP  <||@
  Comment 511 90 NOP  <||@
  Comment 512 92 NOP  <||@
  Comment 513 94 NOP  <||@
  Comment 514 96 NOP  <||@
  Comment 515 98 NOP  <||@
  Comment 516 100 NOP  <||@
  Comment 517 102 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 517 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 527 104 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 532 106 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 532 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 537 [rcx:0, r8:0, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 545 108 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 545 [rax:0, rcx:0, r8:0, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 545 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 547 110 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 550 112 rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 555 114 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 560 116 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 565 block B6 null  <||@
  Comment 565 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 565 182 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 570 184 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 575 186 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 580 188 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 585 190 NOP  <||@
  Comment 586 192 NOP  <||@
  Comment 587 194 NOP  <||@
  Comment 588 196 NOP  <||@
  Comment 589 198 NOP  <||@
  Comment 590 200 NOP  <||@
  Comment 591 202 NOP  <||@
  Comment 592 204 NOP  <||@
  Comment 593 206 rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 596 208 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.toBytes(char)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:31, 4, 27]  <||@
  Comment 599 {HotSpotMethod<StringUTF16.toBytes(char)>}  <||@
  Comment 599 INVOKESTATIC  <||@
  Comment 604 [stack:8, stack:16, stack:24, stack:32]at java.lang.String.valueOf(String.java:4558) [bci: 31, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                            
     locals:  |-                                                                                                             |                                                                                                             
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
  at java.lang.Character.toString(Character.java:9070) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 612 210 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 615 212 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 621 214 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 626 216 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 631 218 rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 636 220 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 641 222 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 646 block B13 null  <||@
  Comment 646 406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 646 408 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 651 410 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 656 412 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 661 414 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 666 416 NOP  <||@
  Comment 667 418 NOP  <||@
  Comment 668 420 NOP  <||@
  Comment 669 422 r9|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 676 424 r8|DWORD = MOVE input: int[-36115|0xffffffffffff72ed]  <||@
  Comment 682 434 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 682 block B15 null  <||@
  Comment 682 466 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 682 456 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 687 458 rbx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 692 460 rdx|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 697 462 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 702 468 NOP  <||@
  Comment 703 470 NOP  <||@
  Comment 704 472 NOP  <||@
  Comment 705 474 NOP  <||@
  Comment 706 476 NOP  <||@
  Comment 707 478 NOP  <||@
  Comment 708 480 NOP  <||@
  Comment 709 482 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 716 484 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 723 486 DEOPT info [bci:7, 27]  <||@
  Comment 723 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 728 [rcx:0, rdx:0, rbx:0, rsi:0, r11:0]at java.lang.Character.toString(Character.java:9070) [bci: 7, duringCall: false, rethrow: false]
              |0                                                                                                           
     locals:  |-                                                                                                           
     stack:   |vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0             |1             |2             |3             |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|QWORD[.]  |rcx|QWORD[.]  |-  |-   <||@
  Comment 736 block B16 null  <||@
  Comment 736 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 736 490 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 741 492 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 746 494 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 751 496 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 756 498 NOP  <||@
  Comment 757 500 NOP  <||@
  Comment 758 502 NOP  <||@
  Comment 759 504 NOP  <||@
  Comment 760 506 NOP  <||@
  Comment 761 508 NOP  <||@
  Comment 762 510 NOP  <||@
  Comment 763 512 MOV x: [r15|QWORD + 1156] y: -34067 size: DWORD  <||@
  Comment 774 514 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 785 516 DEOPT info [bci:0]  <||@
  Comment 785 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 790 [stack:8, stack:16, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3                  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 798 block B14 null  <||@
  Comment 798 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 798 438 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 803 440 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 808 442 stack:32|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 813 444 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 818 446 NOP  <||@
  Comment 819 448 NOP  <||@
  Comment 820 450 NOP  <||@
  Comment 821 452 r9|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 828 454 r8|DWORD = MOVE input: int[-35091|0xffffffffffff76ed]  <||@
  Comment 834 464 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 844 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 869 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 897 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 902 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 932 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 937 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 967 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 972 [rax:0, rcx:0, rdx:0, r8:0, r11:0, stack:24]at java.lang.Character.toString(Character.java:9070) [bci: 7, duringCall: false, rethrow: false]
              |0                                                                                                           
     locals:  |-                                                                                                           
     stack:   |vobject:String:0{hash=int[0|0x0],coder=r10|DWORD,hashIsZero=int[0|0x0],flags=int[0|0x0],value=r11|QWORD[.]} 
  at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3122) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 1002 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1007 [rax:0, rcx:0, r8:0, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.printCharacter(Formatter.java:3116) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3            |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 1015 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1015 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1021 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
